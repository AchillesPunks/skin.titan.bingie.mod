<?xml version="1.0" encoding="utf-8"?>
<!-- BINGIE -->
<includes>
    <!-- includes -->
    <!-- Fixed Focus Navigation -->
    <include name="Fixed_Focus_Navigation">
        <animation effect="slide" end="0,-250" time="300" condition="Control.IsVisible(1508) + Integer.IsGreater(Container(77777).Position,0)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Skin.HasSetting(EnableHighlightWidget) + Integer.IsGreater(Container(77777).Position,2) + !Window.IsActive(1116)">Conditional</animation>											 																																											   
		<animation effect="slide" end="0,-481" time="300" condition="Skin.HasSetting(EnableHighlightWidget) + Integer.IsGreater(Container(77777).Position,2) + [ControlGroup(77777).HasFocus() + String.IsEqual(window(home).Property(widgetstyle),highlight)] + !Window.IsActive(1116) | Integer.IsGreater(Container(77777).Position,2) + [$EXP[IsMainMenuOpened] + String.IsEqual(window(home).Property(widgetstyle),highlight)] + !Window.IsActive(1116)">Conditional</animation>		
		<animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="!Skin.HasSetting(EnableHighlightWidget) + Integer.IsGreater(Container(77777).Position,2) + !Window.IsActive(1116)">Conditional</animation>
		<animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="!Skin.HasSetting(EnableHighlightWidget) + Integer.IsGreater(Container(77777).Position,4) + !Window.IsActive(1116)">Conditional</animation>
		<animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,2) + Window.IsActive(1116)">Conditional</animation>
		<animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,4) + Window.IsActive(1116)">Conditional</animation>
		<animation effect="slide" end="0,-764" time="300" condition="Skin.HasSetting(EnableHighlightWidget) + Integer.IsGreater(Container(77777).Position,4) + ![$EXP[IsMainMenuOpened] + String.IsEqual(window(home).Property(widgetstyle),highlight) | ControlGroup(77777).HasFocus() + String.IsEqual(window(home).Property(widgetstyle),highlight)] + !Window.IsActive(1116)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Skin.HasSetting(EnableHighlightWidget) + Integer.IsGreater(Container(77777).Position,4) + [ControlGroup(77777).HasFocus() + String.IsEqual(window(home).Property(widgetstyle),highlight)] + !Window.IsActive(1116) | Integer.IsGreater(Container(77777).Position,4) + [$EXP[IsMainMenuOpened] + String.IsEqual(window(home).Property(widgetstyle),highlight)] + !Window.IsActive(1116)">Conditional</animation>  
		<animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,6)">Conditional</animation>
		<animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,8)">Conditional</animation>		
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,10)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,12)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,14)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,16)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,18)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,20)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,22)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,24)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,26)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,28)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,30)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,32)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,34)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,36)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,38)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,40)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,42)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,44)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,46)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,48)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,50)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,52)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,54)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,56)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,58)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,60)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,62)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,64)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,66)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,68)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,70)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,72)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,74)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,76)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,78)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,80)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,82)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,84)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,86)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,88)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,90)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,92)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,94)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,96)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,98)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" time="300" condition="Integer.IsGreater(Container(77777).Position,100)">Conditional</animation>

        <animation effect="fade" start="100" end="0" time="250" condition="Integer.IsGreater(Window(Home).Property(CurrentWidgetID), $PARAM[widgetid])">Conditional</animation>
        <animation effect="fade" start="0" end="100" delay="300" time="300" reversible="false" condition="Integer.IsGreater(Container(77777).NumItems,2) + String.IsEqual(Window(Home).Property(PrevWidgetPos),1) + String.IsEqual(Window(Home).Property(CurrentWidgetPos),Container(77777).NumItems)">Conditional</animation>
        <animation effect="fade" start="0" end="100" delay="300" time="300" reversible="false" condition="Integer.IsGreater(Container(77777).NumItems,2) + String.IsEqual(Window(Home).Property(PrevWidgetPos),Container(77777).NumItems) + String.IsEqual(Window(Home).Property(CurrentWidgetPos),1)">Conditional</animation>
    </include>
	
	<!-- Fixed Focus Navigation for Hubs -->
	 <include name="Fixed_Focus_Navigation1">       
        <animation effect="slide" end="0,-250" time="300" condition="Control.IsVisible(1508) + Integer.IsGreater(Container(77777).Position,0)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,2)">Conditional</animation>											 																																											   
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,4)">Conditional</animation>
		<animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,6)">Conditional</animation>
		<animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,8)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,10)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,12)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,14)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,16)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,18)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,20)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,22)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,24)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,26)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,28)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,30)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,32)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,34)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,36)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,38)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,40)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,42)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,44)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,46)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,48)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,50)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,52)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,54)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,56)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,58)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,60)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,62)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,64)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,66)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,68)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,70)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,72)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,74)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,76)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,78)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,80)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,82)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,84)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,86)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,88)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,90)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,92)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,94)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,96)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,98)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight1]" time="300" condition="Integer.IsGreater(Container(77777).Position,100)">Conditional</animation>

        <animation effect="fade" start="100" end="0" time="250" condition="Integer.IsGreater(Window(Home).Property(CurrentWidgetID), $PARAM[widgetid])">Conditional</animation>
        <animation effect="fade" start="0" end="100" delay="300" time="300" reversible="false" condition="Integer.IsGreater(Container(77777).NumItems,2) + String.IsEqual(Window(Home).Property(PrevWidgetPos),1) + String.IsEqual(Window(Home).Property(CurrentWidgetPos),Container(77777).NumItems)">Conditional</animation>
        <animation effect="fade" start="0" end="100" delay="300" time="300" reversible="false" condition="Integer.IsGreater(Container(77777).NumItems,2) + String.IsEqual(Window(Home).Property(PrevWidgetPos),Container(77777).NumItems) + String.IsEqual(Window(Home).Property(CurrentWidgetPos),1)">Conditional</animation>
    </include>

    <include name="SetFixedVerticalNavigationProps">
        <onfocus condition="!String.IsEqual(Window(Home).Property(CurrentWidgetID),$PARAM[widgetid])">SetProperty(PrevWidgetPos,$INFO[Window(Home).Property(CurrentWidgetPos)],Home)</onfocus>
        <onfocus>SetProperty(CurrentWidgetID,$PARAM[widgetid],Home)</onfocus>
        <onfocus condition="!String.IsEqual(Window(Home).Property(CurrentWidgetID),$PARAM[widgetid])">SetProperty(CurrentWidgetPos,$INFO[Container(77777).CurrentItem],Home)</onfocus>
    </include>

    <!-- Fixed Focus Navigation Factory -->
    <include name="Fixed_Focus_Navigation_Factory">
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),landscape) | Window.IsActive(1116)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-252"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),landscapelarge) + !Window.IsActive(1116)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-288"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),poster) + !Window.IsActive(1116)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-371"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),landscapesmall) + !Window.IsActive(1116)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-188"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),smallposter) + !Window.IsActive(1116)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-280"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),square) + !Window.IsActive(1116)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-295"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),landscapedetails) + !Window.IsActive(1116)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-252"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),posterdetails) + !Window.IsActive(1116)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-371"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),banner) + !Window.IsActive(1116)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-168"/>
        </include>
    </include>
	
	<!-- Fixed Focus Navigation Factory for Hubs -->
	<include name="Fixed_Focus_Navigation_Factory1">
        <include content="Fixed_Focus_Navigation1" condition="String.IsEqual(Skin.String(widgetstyle),landscape) | Window.IsActive(1116)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight1" value="-252"/>
        </include>
        <include content="Fixed_Focus_Navigation1" condition="String.IsEqual(Skin.String(widgetstyle),landscapelarge) + !Window.IsActive(1116)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight1" value="-300"/>
        </include>
		<include content="Fixed_Focus_Navigation1" condition="String.IsEqual(Skin.String(widgetstyle),poster) + !Window.IsActive(1116)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight1" value="-371"/>
        </include>
        <include content="Fixed_Focus_Navigation1" condition="String.IsEqual(Skin.String(widgetstyle),landscapesmall) + !Window.IsActive(1116)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight1" value="-188"/>
        </include>
        <include content="Fixed_Focus_Navigation1" condition="String.IsEqual(Skin.String(widgetstyle),smallposter) + !Window.IsActive(1116)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight1" value="-280"/>
        </include>
        <include content="Fixed_Focus_Navigation1" condition="String.IsEqual(Skin.String(widgetstyle),square) + !Window.IsActive(1116)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight1" value="-295"/>
        </include>
        <include content="Fixed_Focus_Navigation1" condition="String.IsEqual(Skin.String(widgetstyle),posterdetails) + !Window.IsActive(1116)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight1" value="-371"/>
        </include>
        <include content="Fixed_Focus_Navigation1" condition="String.IsEqual(Skin.String(widgetstyle),banner) + !Window.IsActive(1116)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight1" value="-167"/>
        </include>
    </include>

    <include name="ContainerShowInfoOnclick">
        <onclick condition="String.IsEqual(Container($PARAM[widgetid]).ListItem.DBType,movie) | String.IsEqual(Container($PARAM[widgetid]).ListItem.DBType,tvshow) | String.IsEqual(Container($PARAM[widgetid]).ListItem.DBType,episode) | !String.IsEmpty(Container($PARAM[widgetid]).ListItem.AddonName)">Action(info)</onclick>
    </include>

    <include name="CustomBingieWinProps">
        <onload>ClearProperty(ShowViewSubMenu,Home)</onload>
        <onload>SetProperty(bingieviews,1,Home)</onload>
        <onunload>ClearProperty(ShowViewSubMenu,Home)</onunload>
        <onunload condition="!String.IsEqual(Skin.String(HomeLayout),bingie)">ClearProperty(bingieviews,Home)</onunload>
        <onunload condition="System.HasAlarm(preview_delay)">CancelAlarm(preview_delay,silent)</onunload>
        <onunload>ClearProperty(SkinHelper.WidgetContainer)</onunload>
		<onunload>ClearProperty(TMDbHelper.WidgetContainer)</onunload>
    </include>

    <!-- DETAILS ROW INCLUDES -->
    
<!--IMDB/RT/TVDB details Row (changed to grouplist in preperation for future additions)-->
	<include name="IMDB_RT_Details_Row">
		<control type="grouplist">
			<visible>!String.IsEmpty(Control.GetLabel(6997021)) | !String.IsEmpty(Control.GetLabel(699706)) | !String.IsEmpty(Control.GetLabel(699702)) | !String.IsEmpty(Control.GetLabel(6997061)) | [!String.IsEmpty(Control.GetLabel(878787)) | !String.IsEmpty(Control.GetLabel(8787871))] + !Integer.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB),0.0)</visible>
			<posy>8</posy>
			<height>31</height>
			<width>500</width>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<itemgap>10</itemgap>
			<align>left</align>

			<!-- IMDB logo White -->
			<control type="image">
				<include>Default_Visible_Fade</include>
				<posy>2</posy>
				<height>30</height>
                <width>52</width>
                <aspectratio>keep</aspectratio>
                <texture background="true">bingie/imdb11.png</texture>
				<visible>Skin.HasSetting(whiteIMDBDetailsRow)</visible>
				<visible>!String.IsEmpty(Control.GetLabel(6997021))</visible>
            </control>
			
			<!-- IMDB logo Colored -->
			<control type="image">
				<include>Default_Visible_Fade</include>
				<posy>2</posy>
				<height>30</height>
                <width>52</width>
                <aspectratio>keep</aspectratio>
                <texture background="true">bingie/imdb22.png</texture>
				<visible>!Skin.HasSetting(whiteIMDBDetailsRow)</visible>
				<visible>!String.IsEmpty(Control.GetLabel(699702))</visible>
            </control>
            
			<!-- IMDB Text Label color -->
			<control type="label" id="699702">
				<include>Default_Visible_Fade</include>
                <visible>!String.IsEmpty(Control.GetLabel(699702))</visible>
				<visible>!Skin.HasSetting(whiteIMDBDetailsRow)</visible>
				<top></top>
				<width>auto</width>
                <height></height>
                <textcolor>$INFO[Skin.String(BingieDeatailsTextColor)]</textcolor>
                <font>Reg26</font>
                <scroll>false</scroll>
                <label>$VAR[IMDBRatingValue]</label>
            </control>
			
			<!-- IMDB Text Label White -->
			<control type="label" id="6997021">
				<include>Default_Visible_Fade</include>
                <visible>!String.IsEmpty(Control.GetLabel(6997021))</visible>
				<visible>Skin.HasSetting(whiteIMDBDetailsRow)</visible>
				<top></top>
				<width>auto</width>
                <height></height>
                <textcolor>$INFO[Skin.String(BingieDeatailsTextColor)]</textcolor>
                <font>Reg26</font>
                <scroll>false</scroll>
                <label>$VAR[IMDBRatingValue]</label>
            </control>
        			
			<!-- TVDB logo Colored -->
			<control type="image">
				<include>Default_Visible_Fade</include>
				<posy>2</posy>
				<height>30</height>
                <width>50</width>
                <aspectratio>keep</aspectratio>
                <texture>bingie/tvdb22.png</texture>
				<visible>!Skin.HasSetting(whiteIMDBDetailsRow)</visible>
				<visible>!String.IsEmpty(Control.GetLabel(878787))</visible>
				<visible>!Integer.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB),0.0)</visible>
            </control>
			
			<!-- TVDB logo White -->
			<control type="image">
				<include>Default_Visible_Fade</include>
				<posy>2</posy>
				<height>30</height>
                <width>50</width>
                <aspectratio>keep</aspectratio>
                <texture background="true">bingie/tvdb11.png</texture>
				<visible>Skin.HasSetting(whiteIMDBDetailsRow)</visible>
				<visible>!String.IsEmpty(Control.GetLabel(8787871))</visible>
				<visible>!Integer.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB),0.0)</visible>
            </control>
            
			<!-- TVDB Label White -->
			<control type="label" id="8787871">
				<include>Default_Visible_Fade</include>
				<visible>!String.IsEmpty(Control.GetLabel(8787871))</visible>
				<visible>Skin.HasSetting(whiteIMDBDetailsRow)</visible>
				<visible>!Integer.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB),0.0)</visible>
              	<width>auto</width>
                <height></height>
                <textcolor>$INFO[Skin.String(BingieDeatailsTextColor)]</textcolor>
                <font>Reg26</font>
                <scroll>false</scroll>
                <label>$INFO[Window(Home).Property(SkinHelper.ListItem.Rating.TVDB)]</label>
            </control>
			
			<!-- TVDB Text Label -->
			<control type="label" id="878787">
				<include>Default_Visible_Fade</include>
				<visible>!String.IsEmpty(Control.GetLabel(878787))</visible>
				<visible>!Skin.HasSetting(whiteIMDBDetailsRow)</visible>
				<visible>!Integer.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB),0.0)</visible>
              	<width>auto</width>
                <height></height>
                <textcolor>$INFO[Skin.String(BingieDeatailsTextColor)]</textcolor>
                <font>Reg26</font>
                <scroll>false</scroll>
                <label>$INFO[Window(Home).Property(SkinHelper.ListItem.Rating.TVDB)]</label>
            </control>
        	         					 
			<!-- RT fresh white -->
			<control type="image">
				<include>Default_Visible_Fade</include>
                <posy>2</posy>
				<aspectratio>keep</aspectratio>
                <width>28</width>
                <height>29</height>
                <texture background="true">bingie/whiteRTcritics1.png</texture>
			    <visible>!String.IsEmpty(Control.GetLabel(6997061)) + String.IsEmpty(Control.GetLabel(878787)) + String.IsEmpty(Control.GetLabel(8787871)) | !String.IsEmpty(Control.GetLabel(6997061)) + Integer.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB),0.0)</visible>
				<visible>[Integer.IsGreater(Container(99950).ListItem.Property(RottenTomatoes_Rating),59) + $EXP[IsMovieDBType] | Integer.IsGreater(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter),59) + [!$EXP[IsMovieDBType] + !$EXP[IsEpisodeDBType]]]</visible>
				<visible>Skin.HasSetting(whiteIMDBDetailsRow)</visible>
            </control>
			
			<!-- RT rotten white -->
			<control type="image">
				<include>Default_Visible_Fade</include>
                <posy>3</posy>
				<aspectratio>keep</aspectratio>
                <width>29</width>
                <height>28</height>
                <texture background="true">bingie/whitertcriticsrotten2.png</texture>
			    <visible>!String.IsEmpty(Control.GetLabel(6997061)) + String.IsEmpty(Control.GetLabel(878787)) + String.IsEmpty(Control.GetLabel(8787871)) | !String.IsEmpty(Control.GetLabel(6997061)) + Integer.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB),0.0)</visible>
				<visible>[!Integer.IsGreater(Container(99950).ListItem.Property(RottenTomatoes_Rating),59) + $EXP[IsMovieDBType] | !Integer.IsGreater(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter),59) + [!$EXP[IsMovieDBType] + !$EXP[IsEpisodeDBType]]]</visible>
				<visible>Skin.HasSetting(whiteIMDBDetailsRow)</visible>
            </control>
			
			<!-- Rotten Tomatoes Fresh Colored -->
			<control type="image">
				<posy>2</posy>
				<include>Default_Visible_Fade</include>
                <aspectratio>keep</aspectratio>
                <width>28</width>
                <height>29</height>
                <texture background="true">bingie/fresh11.png</texture>
				<visible>!String.IsEmpty(Control.GetLabel(699706)) + String.IsEmpty(Control.GetLabel(878787)) + String.IsEmpty(Control.GetLabel(8787871)) | !String.IsEmpty(Control.GetLabel(699706)) + Integer.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB),0.0)</visible>
				<visible>[Integer.IsGreater(Container(99950).ListItem.Property(RottenTomatoes_Rating),59) + $EXP[IsMovieDBType] | Integer.IsGreater(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter),59) + [!$EXP[IsMovieDBType] + !$EXP[IsEpisodeDBType]]]</visible>
				<visible>!Skin.HasSetting(whiteIMDBDetailsRow)</visible>
            </control>
			
			<!-- Rotten Tomatoes Rotten Colored -->
			<control type="image">
				<posy>3</posy>
				<include>Default_Visible_Fade</include>
                <aspectratio>keep</aspectratio>
                <width>29</width>
                <height>28</height>
                <texture background="true">bingie/rotten2.png</texture>
				<visible>!String.IsEmpty(Control.GetLabel(699706)) + String.IsEmpty(Control.GetLabel(878787)) + String.IsEmpty(Control.GetLabel(8787871)) | !String.IsEmpty(Control.GetLabel(699706)) + Integer.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB),0.0)</visible>
				<visible>[!Integer.IsGreater(Container(99950).ListItem.Property(RottenTomatoes_Rating),59) + $EXP[IsMovieDBType] | !Integer.IsGreater(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter),59) + [!$EXP[IsMovieDBType] + !$EXP[IsEpisodeDBType]]]</visible>
				<visible>!Skin.HasSetting(whiteIMDBDetailsRow)</visible>
            </control>
            
			<!-- RT label White -->
			<control type="label" id="6997061">
				<include>Default_Visible_Fade</include>
				<visible>!String.IsEmpty(Control.GetLabel(6997061)) + String.IsEmpty(Control.GetLabel(878787)) + String.IsEmpty(Control.GetLabel(8787871)) | !String.IsEmpty(Control.GetLabel(6997061)) + Integer.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB),0.0)</visible>
				<visible>Skin.HasSetting(whiteIMDBDetailsRow)</visible>
              	<width>auto</width>
                <height></height>
                <textcolor>$INFO[Skin.String(BingieDeatailsTextColor)]</textcolor>
                <font>Reg26</font>
                <scroll>darkgray</scroll>
                <label>$VAR[RottenTomatoesRatingValue]</label>
            </control>
			
			<!-- RT label -->
			<control type="label" id="699706">
				<include>Default_Visible_Fade</include>
				<visible>!String.IsEmpty(Control.GetLabel(699706)) + String.IsEmpty(Control.GetLabel(878787)) + String.IsEmpty(Control.GetLabel(8787871)) | !String.IsEmpty(Control.GetLabel(699706)) + Integer.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB),0.0)</visible>
				<visible>!Skin.HasSetting(whiteIMDBDetailsRow)</visible>
              	<width>auto</width>
                <height></height>
                <textcolor>$INFO[Skin.String(BingieDeatailsTextColor)]</textcolor>
                <font>Reg26</font>
                <scroll>darkgray</scroll>
                <label>$VAR[RottenTomatoesRatingValue]</label>
            </control>
        </control>
    </include>
	
	<!-- New Tag Percent -->
    <include name="New_Tag_Details_Row">
        <control type="label" id="6110">
            <visible>!String.IsEmpty(Control.GetLabel(6110))</visible>
            <posy>7</posy>
            <height>35</height>
            <width>auto</width>
            <aligny>center</aligny>
            <font>Bold26</font>                                                  <!-- Reg22 -->
            <textcolor>$INFO[Skin.String(BingieRatingInDetailsColor)]</textcolor>
            <label>$VAR[NewItem]</label>
            <include>Default_Visible_Fade</include>
        </control>
    </include>

    <!-- Thumbs Up/Down -->
    <include name="Thumbs_Up_Down_Details_Row">
        <control type="group" id="6111">
            <visible>Control.IsVisible(61111) | Control.IsVisible(61112)</visible>
            <include>Default_Visible_Fade</include>
            <width>25</width>
            <height>30</height>
            <!-- Thumbs Up -->
            <control type="image" id="61111">
                <include>ThumbsUpMinCondition</include>
                <posy>9</posy>
                <width>25</width>
                <height>30</height>
                <aspectratio align="left" aligny="center">keep</aspectratio>
                <colordiffuse>$INFO[Skin.String(BingieDeatailsTextColor)]</colordiffuse>
                <texture>dialogs/videoinfo/info/thumbs-up.png</texture>
            </control>
            <!-- Thumbs Down -->
            <control type="image" id="61112">
                <include>ThumbsDownMaxCondition</include>
                <posy>10</posy>
                <width>25</width>
                <height>30</height>
                <aspectratio align="left" aligny="center">keep</aspectratio>
                <colordiffuse>$INFO[Skin.String(BingieDeatailsTextColor)]</colordiffuse>
                <texture flipy="true">dialogs/videoinfo/info/thumbs-up.png</texture>
            </control>
        </control>
    </include>

    <!-- Percentage Based Rating -->
    <include name="Percentage_Rating_Details_Row">
        <control type="label" id="6113">
            <visible>!String.IsEmpty(Control.GetLabel(6113)) + !Control.IsVisible(6111)</visible>
            <posy>7</posy>
            <height>35</height>
            <width>auto</width>
            <aligny>center</aligny>
            <font>bold26</font>
            <textcolor>$INFO[Skin.String(BingieRatingInDetailsColor)]</textcolor>
            <label>$VAR[RatingDecimalToPercentage,,% $LOCALIZE[31857]]</label>
            <include>Default_Visible_Fade</include>
        </control>
    </include>
	
	<!-- Percentage Based Rating -->
    <include name="Percentage_Music_Rating_Details_Row">
        <control type="label" id="61131">
            <visible>!String.IsEmpty(Control.GetLabel(61131))</visible>
            <posy>7</posy>
            <height>35</height>
            <width>auto</width>
            <aligny>center</aligny>
            <font>bold26</font>
            <textcolor>$INFO[Skin.String(BingieRatingInDetailsColor)]</textcolor>
            <label>$VAR[RatingDecimalToPercentage,,% $LOCALIZE[31857]]</label>
            <include>Default_Visible_Fade</include>
        </control>
    </include>
	
	<!-- Percentage Based Rating for Episodes in Bingie Season View -->
    <include name="Percentage_Rating_Details_Row_Seasons">
        <control type="label" id="61132">
            <visible>!String.IsEmpty(Control.GetLabel(61132)) + !Control.IsVisible(6111)</visible>
            <posy>7</posy>
            <height>35</height>
            <width>auto</width>
            <aligny>center</aligny>
            <font>bold26</font>
            <textcolor>$INFO[Skin.String(BingieRatingInDetailsColor)]</textcolor>
            <label>$VAR[RatingDecimalToPercentageSeasons,,% $LOCALIZE[31857]]</label>
            <include>Default_Visible_Fade</include>
        </control>
    </include>

    <!-- Year / Premiered / PVR Time -->
    <include name="Year_Premiered_PVRTime_Details_Row">
        <control type="label" id="6114">
            <visible>!String.IsEmpty(Control.GetLabel(6114))</visible>
            <posy>6</posy>
            <height>35</height>
            <width>auto</width>
            <aligny>center</aligny>
            <font>Reg26</font>
            <textcolor>$INFO[Skin.String(BingieDeatailsTextColor)]</textcolor>
            <label>$VAR[YearOrPremieredOrPVR]</label>
            <include>Default_Visible_Fade</include>
        </control>
    </include>
	
	<!-- Year / Premiered / PVR Time -->
    <include name="Year_Premiered_Highlight_Widget">
        <control type="label" id="6114">
            <visible>!String.IsEmpty(Control.GetLabel(6114))</visible>
            <posy>7</posy>
            <height>35</height>
            <width>auto</width>
            <aligny>center</aligny>
            <font>Bold23</font>
            <textcolor>$INFO[Skin.String(BingiePrimaryTextColor)]</textcolor>
            <label>$VAR[YearOrPremieredOrPVR]</label>
            <include>Default_Visible_Fade</include>
        </control>
    </include>
	
	<!-- Music Year -->
    <include name="Music_Year_Details_Row">
        <control type="label" id="61141">
            <visible>!String.IsEmpty(Control.GetLabel(61141))</visible>
            <posy>6</posy>
            <height>35</height>
            <width>auto</width>
            <aligny>center</aligny>
            <font>Reg26</font>
            <textcolor>$INFO[Skin.String(BingieDeatailsTextColor)]</textcolor>
            <label>$VAR[MusicYear]</label>
            <include>Default_Visible_Fade</include>
        </control>
    </include>
	
	<include name="Music_Album_Year_Details_Row">
        <control type="label" id="61145">
            <visible>!String.IsEmpty(Control.GetLabel(61145))</visible>
            <posy>6</posy>
            <height>35</height>
            <width>auto</width>
            <aligny>center</aligny>
            <font>Reg26</font>
            <textcolor>$INFO[Skin.String(BingieDeatailsTextColor)]</textcolor>
            <label>$VAR[MusicAlbumYear]</label>
            <include>Default_Visible_Fade</include>
        </control>
    </include>
	
	<!-- Music Line -->
    <include name="Music_Line_Details_Row">
        <control type="label" id="61143">
            <visible>!String.IsEmpty(Control.GetLabel(61143)) + !String.IsEmpty(Control.GetLabel(61141)) + !String.IsEmpty(Control.GetLabel(61142))</visible>
            <posy>6</posy>
            <height>35</height>
            <width>auto</width>
            <aligny>center</aligny>
            <font>Reg26</font>
            <textcolor>$INFO[Skin.String(BingieDeatailsTextColor)]</textcolor>
            <label>|</label>
            <include>Default_Visible_Fade</include>
        </control>
    </include>
	
	<include name="Music_Album_Line_Details_Row">
		<control type="label" id="61146">
            <visible>!String.IsEmpty(Control.GetLabel(61143)) + !String.IsEmpty(Control.GetLabel(61144))</visible>
            <posy>6</posy>
            <height>35</height>
            <width>auto</width>
            <aligny>center</aligny>
            <font>Reg26</font>
            <textcolor>$INFO[Skin.String(BingieDeatailsTextColor)]</textcolor>
            <label>|</label>
            <include>Default_Visible_Fade</include>
        </control>
    </include>
	
	<!-- Music Disambiguation -->
    <include name="Music_Disambiguation_Details_Row">
        <control type="label" id="61142">
            <visible>!String.IsEmpty(Control.GetLabel(61142)) + !String.IsEmpty(Control.GetLabel(61141))</visible>
            <posy>6</posy>
            <height>35</height>
            <width max="250">auto</width>
            <aligny>center</aligny>
            <font>Reg26</font>
            <textcolor>$INFO[Skin.String(BingieDeatailsTextColor)]</textcolor>
            <label>$VAR[MusicDisambiguation,[CAPITALIZE],[/CAPITALIZE]]</label>
            <include>Default_Visible_Fade</include>
			<scroll>true</scroll>
        </control>
		 <control type="label" id="61142">
            <visible>!String.IsEmpty(Control.GetLabel(61142)) + String.IsEmpty(Control.GetLabel(61141))</visible>
            <posy>6</posy>
            <height>35</height>
            <width>auto</width>
            <aligny>center</aligny>
            <font>Reg26</font>
            <textcolor>$INFO[Skin.String(BingieDeatailsTextColor)]</textcolor>
            <label>$VAR[MusicDisambiguation,[CAPITALIZE],[/CAPITALIZE]]</label>
            <include>Default_Visible_Fade</include>
			<scroll>true</scroll>
        </control>
    </include>
	
	<!-- Music Label -->
    <include name="Music_Label_Details_Row">
        <control type="label" id="61144">
            <visible>!String.IsEmpty(Control.GetLabel(61144))</visible>
            <posy>6</posy>
            <height>35</height>
            <width>auto</width>
            <aligny>center</aligny>
            <font>Reg26</font>
            <textcolor>$INFO[Skin.String(BingieDeatailsTextColor)]</textcolor>
            <label>$VAR[MusicLabel]</label>
            <include>Default_Visible_Fade</include>
        </control>
    </include>

	<!-- MPAA UK Icons -->
    <include name="MPAA_Details_RowNew">
	<include>Default_Visible_Fade</include>
	<!-- Icon display -->
		<control type="image" id="123458">
			<visible>!String.IsEmpty(ListItem.MPAA)</visible>
			<width>56</width>
			<height>50</height>
            <aspectratio>keep</aspectratio>
			<texture>$VAR[mediaflags_large_rating_UK_icons]</texture>
			<include>Default_Visible_Fade</include>
        </control>
    </include>
			
	<!-- MPAA Color Icons -->
    <include name="MPAA_Details_RowUS">
	<include>Default_Visible_Fade</include>
	<!-- Icon display -->
	<control type="button" id="123456">
			<visible>!String.IsEmpty(ListItem.MPAA) | !String.IsEmpty(Container(99950).ListItem.mpaa)</visible>
			<posy>8</posy>
				<height>34</height>
                <width min="42">auto</width>
				<align>center</align>
				<aligny>top</aligny>
				<textwidth>140</textwidth> 
				<textcolor>$INFO[Skin.String(MPAATextColor)]</textcolor>
				<disabledcolor>$INFO[Skin.String(MPAATextColor)]</disabledcolor>
				<colordiffuse>$VAR[MPAAColors]</colordiffuse>
				<texturenofocus border="10">bingie/square-rounded.png</texturenofocus>
				<texturefocus border="10">bingie/square-rounded.png</texturefocus>
				<textoffsetx>7</textoffsetx>
				<textoffsety>-1</textoffsety>
				<font>Bold26</font>
				<label>$VAR[GetMPAA]</label>
				<enable>false</enable>
        </control>
    </include>		

	<!-- MPAA Color Icons - Fixed panel size -->
    <include name="MPAA_Details_RowUS_Fixed_Size">
	<include>Default_Visible_Fade</include>
	<!-- Icon display -->
	<control type="group" id="123456">
			<visible>[!String.IsEmpty(ListItem.MPAA) + [String.Contains(ListItem.mpaa,US:G) | String.Contains(ListItem.mpaa,USA:G) | String.Contains(ListItem.mpaa,Rated G) | String.IsEqual(ListItem.Mpaa,G) |
			String.Contains(ListItem.mpaa,US:PG-13) | String.Contains(ListItem.mpaa,USA:PG-13) | String.Contains(ListItem.mpaa,Rated PG-13) | String.IsEqual(ListItem.Mpaa,PG-13) |
			String.IsEqual(ListItem.mpaa,US:PG) | String.IsEqual(ListItem.mpaa,USA:PG) | String.IsEqual(ListItem.mpaa,Rated PG) | String.IsEqual(ListItem.Mpaa,PG) |
			String.Contains(ListItem.mpaa,US:R) | String.Contains(ListItem.mpaa,USA:R) | String.Contains(ListItem.mpaa,Rated R) | String.IsEqual(ListItem.Mpaa,R) | String.Contains(ListItem.mpaa,NC-17) | String.Contains(ListItem.mpaa,NR) |	
			String.IsEqual(ListItem.mpaa,TV-Y) | String.Contains(ListItem.mpaa,TV-Y7) | String.Contains(ListItem.mpaa,TV-G) |String.Contains(ListItem.mpaa,TV-PG) | String.Contains(ListItem.mpaa,TV-14) | String.Contains(ListItem.mpaa,TV-MA) | String.Contains(ListItem.mpaa,USA:TV-MA)]] 
			| [!String.IsEmpty(Container(99950).ListItem.mpaa) + [String.Contains(Container(99950).ListItem.mpaa,US:G) | String.Contains(Container(99950).ListItem.mpaa,USA:G) | String.Contains(Container(99950).ListItem.mpaa,Rated G) | String.IsEqual(Container(99950).ListItem.mpaa,G) |
			String.Contains(Container(99950).ListItem.mpaa,US:PG-13) | String.Contains(Container(99950).ListItem.mpaa,USA:PG-13) | String.Contains(Container(99950).ListItem.mpaa,Rated PG-13) | String.IsEqual(Container(99950).ListItem.mpaa,PG-13) |
			String.IsEqual(Container(99950).ListItem.mpaa,US:PG) | String.IsEqual(Container(99950).ListItem.mpaa,USA:PG) | String.IsEqual(Container(99950).ListItem.mpaa,Rated PG) | String.IsEqual(Container(99950).ListItem.mpaa,PG) |
			String.Contains(Container(99950).ListItem.mpaa,US:R) | String.Contains(Container(99950).ListItem.mpaa,USA:R) | String.Contains(Container(99950).ListItem.mpaa,Rated R) | String.IsEqual(Container(99950).ListItem.mpaa,R) | String.Contains(Container(99950).ListItem.mpaa,NC-17) | String.Contains(Container(99950).ListItem.mpaa,NR) | String.Contains(Container(99950).ListItem.mpaa,Not) | String.Contains(Container(99950).ListItem.mpaa,Unrated) | String.Contains(Container(99950).ListItem.mpaa,Passed) | String.Contains(Container(99950).ListItem.mpaa,Approved) | 
			String.IsEqual(Container(99950).ListItem.mpaa,TV-Y) | String.Contains(Container(99950).ListItem.mpaa,TV-Y7) | String.Contains(Container(99950).ListItem.mpaa,TV-G) |String.Contains(Container(99950).ListItem.mpaa,TV-PG) | String.Contains(Container(99950).ListItem.mpaa,TV-14) | String.Contains(Container(99950).ListItem.mpaa,TV-MA) | String.Contains(Container(99950).ListItem.mpaa,USA:TV-MA)]]</visible>
			<height>34</height>
            <width>106</width>
	<control type="image" id="123456">
			<visible>!String.IsEmpty(ListItem.MPAA) | !String.IsEmpty(Container(99950).ListItem.mpaa)</visible>
			<top>8</top>
			<width>106</width>
			<height>34</height>
            <aspectratio>keep</aspectratio>
			<texture border="6">bingie/usicons/usfixed/fixedpanel.png</texture>
			<colordiffuse>$INFO[Skin.String(PanelBorderColor)]</colordiffuse>
			<include>Default_Visible_Fade</include>
        </control>
	<control type="image" id="123456">
			<visible>!String.IsEmpty(ListItem.MPAA) | !String.IsEmpty(Container(99950).ListItem.mpaa)</visible>
			<right>3</right>
			<top>11</top>
			<width>100</width>
			<height>28</height>
			<aspectratio>keep</aspectratio>
			<texture border="4">bingie/usicons/usfixed/fixedpanel2.png</texture>
			<colordiffuse>$VAR[MPAAColors]</colordiffuse>
			<include>Default_Visible_Fade</include>
    </control>
		<control type="label" id="123456">
				<visible>!String.IsEmpty(ListItem.MPAA) | !String.IsEmpty(Container(99950).ListItem.mpaa)</visible>
				<posy>8</posy>
				<align>center</align>
				<aligny>top</aligny>
				<textwidth>96</textwidth> 
				<textcolor>$INFO[Skin.String(MPAATextColor)]</textcolor>
				<textoffsetx>7</textoffsetx>
				<textoffsety>-1</textoffsety>
				<font>Bold26</font>
				<label>$VAR[GetMPAA]</label>
				<scroll>true</scroll>
        </control>
	</control>
    </include>	
			
	<!-- Original MPAA details row -->
	<include name="MPAA_Details_Row">		
            <include>Default_Visible_Fade</include>
            <control type="button" id="765">
				<visible>!String.IsEmpty(ListItem.Mpaa) | !String.IsEmpty(Container(99950).ListItem.mpaa)</visible>
				<posy>7</posy>
                <height>36</height>
                <width min="42">auto</width>
				<align>center</align>
				<aligny>top</aligny>
				<textwidth>140</textwidth> 
				<textcolor>$VAR[DetailsTextColor]</textcolor>
				<disabledcolor>$VAR[DetailsTextColor]</disabledcolor>
				<texturenofocus colordiffuse="$INFO[Skin.String(BingieDetailsFlagColor)]" border="10">bingie/square-rounded.png</texturenofocus>
				<texturefocus colordiffuse="$INFO[Skin.String(BingieDetailsFlagColor)]" border="10">bingie/square-rounded.png</texturefocus>
				<textoffsetx>10</textoffsetx>
				<textoffsety>0</textoffsety>
				<font>Bold26</font>
				<label>$VAR[GetMPAA]</label>
				<enable>false</enable>
            </control>
    </include>				

	<!-- Home Seasons Top Screen / Total Seasons/Episodes  -->
    <include name="Duration_TotalSeasonsEpisodes_Details_Row">
        <control type="label" id="6116">
            <posy>6</posy>
            <visible>!String.IsEmpty(Control.GetLabel(6116))</visible>
            <width>auto</width>
            <label>$VAR[DurationOrTotalSECount]</label>
            <height>35</height>
            <aligny>center</aligny>
            <textcolor>$VAR[DetailsTextColor]</textcolor>
            <font>Reg26</font>
            <include>Default_Visible_Fade</include>
        </control>
    </include>
	
	<!-- Home Seasons Top Screen / Total Seasons/Episodes  -->
    <include name="Duration_TotalSeasonsEpisodes_Highlight_Widget">
        <control type="label" id="6116">
            <posy>7</posy>
            <visible>!String.IsEmpty(Control.GetLabel(6116))</visible>
            <width>auto</width>
            <label>$VAR[DurationOrTotalSECount]</label>
            <height>35</height>
            <aligny>center</aligny>
            <textcolor>$INFO[Skin.String(BingiePrimaryTextColor)]</textcolor>
            <font>Bold23</font>
            <include>Default_Visible_Fade</include>
        </control>
    </include>
	
	<!-- Resolution Top Box -->
    <include name="Resolution_Details_Row">
				<include>Default_Visible_Fade</include>
			<control type="button" id="6117">
				<visible>!String.IsEmpty(Control.GetLabel(6117))</visible>
				<visible>!String.IsEqual(Window.Property(AdditionalInfo),similar) + !String.IsEqual(Window.Property(AdditionalInfo),cast) + !String.IsEqual(Window.Property(AdditionalInfo),trailers)</visible>
				<posy>7</posy>
                <height>36</height>
                <width>auto</width>
				<align>center</align>
				<aligny>top</aligny>
				<textwidth>158</textwidth> 
				<textcolor>$INFO[Skin.String(BingieDetailsFlagTextColor)]</textcolor>
				<disabledcolor>$INFO[Skin.String(BingieDetailsFlagTextColor)]</disabledcolor>
				<texturenofocus colordiffuse="$INFO[Skin.String(BingieDetailsFlagColor)]" border="10">bingie/square-rounded2.png</texturenofocus>
				<texturefocus colordiffuse="$INFO[Skin.String(BingieDetailsFlagColor)]" border="10">bingie/square-rounded2.png</texturefocus>
				<textoffsetx>8</textoffsetx>
				<textoffsety>2</textoffsety>
				<font>Reg24</font>
				<label>$VAR[GetResolution,[B],[/B]]</label>
				<enable>false</enable>
            </control>
	</include>	
	<!-- Fake Resolution -->
    <include name="Resolution_Details_Row_fake">
		<control type="group">
				<include>Default_Visible_Fade</include>
				<visible>![Control.IsVisible(6111161) + $EXP[IsTvShowDBType]] + String.IsEmpty(ListItem.VideoResolution) + [$EXP[IsMovieDBType] | $EXP[IsTvShowDBType] | $EXP[IsEpisodeDBType]]</visible>
				<visible>!String.IsEmpty(ListItem.Plot)</visible> <!--it works but find a better visibility tag to stop control showing up in categories widget!-->
				<visible>!String.IsEqual(Window.Property(AdditionalInfo),similar) + !String.IsEqual(Window.Property(AdditionalInfo),cast) + !String.IsEqual(Window.Property(AdditionalInfo),trailers)</visible>
				<posy>7</posy>
				<width>111</width>
                <height>36</height>
			<control type="image">
				<height>100%</height>
                <width>100%</width>
                <texture colordiffuse="$INFO[Skin.String(BingieDetailsFlagColor)]" border="10">bingie/square-rounded2.png</texture>
			</control>
			<control type="label">
				<width>100%</width>
                <height>100%</height>
                <align>center</align>
                <textcolor>$INFO[Skin.String(BingieDetailsFlagTextColor)]</textcolor>
				<textoffsety>6</textoffsety>
                <font>Reg24</font>
                <scroll>false</scroll>
                <label>[B]4K HDR[/B]</label>
			</control>
		</control>
	</include>

	<!-- Audio Channels Top Box -->
    <include name="Audio_Channels_Details_Row">
				<include>Default_Visible_Fade</include>
			<control type="button" id="6118">
				<visible>!String.IsEmpty(Control.GetLabel(6118))</visible>
				<visible>!String.IsEqual(Window.Property(AdditionalInfo),similar) + !String.IsEqual(Window.Property(AdditionalInfo),cast) + !String.IsEqual(Window.Property(AdditionalInfo),trailers)</visible>
				<posy>7</posy>
                <height>36</height>
                <width>auto</width>
				<align>center</align>
				<aligny>top</aligny>
				<textwidth>140</textwidth> 
				<textcolor>$INFO[Skin.String(BingieDetailsFlagTextColor)]</textcolor>
				<disabledcolor>$INFO[Skin.String(BingieDetailsFlagTextColor)]</disabledcolor>
				<texturenofocus colordiffuse="$INFO[Skin.String(BingieDetailsFlagColor)]" border="10">bingie/square-rounded2.png</texturenofocus>
				<texturefocus colordiffuse="$INFO[Skin.String(BingieDetailsFlagColor)]" border="10">bingie/square-rounded2.png</texturefocus>
				<textoffsetx>8</textoffsetx>
				<textoffsety>2</textoffsety>
				<font>Reg24</font>
				<label>$VAR[GetAudioChannels,[B],[/B]]</label>
				<enable>false</enable>
            </control>
	</include>

<!-- Audio Codec -->
<include name="Audiocodec1">
	 <control type="group" id="6662221">
		<include>Default_Visible_Fade</include>
		<posy>7</posy>
		<height>37</height>
		<width>159</width>
		<control type="image" id="54321">
		<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
		<visible>!String.IsEqual(Window.Property(AdditionalInfo),similar) + !String.IsEqual(Window.Property(AdditionalInfo),cast) + !String.IsEqual(Window.Property(AdditionalInfo),trailers)</visible>
				<width>130</width>
                <height>36</height>
				<texture fallback="colors/color_transparent.png" colordiffuse="$INFO[Skin.String(BingieDetailsFlagColor)]" border="10">$VAR[AudioCodecVar,bingie/,.png]</texture>
		</control>
		<control type="image" id="54321">
		<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
		<visible>!String.IsEqual(Window.Property(AdditionalInfo),similar)</visible>
                <height>37</height>
				<width>130</width>
				<posx>0</posx>
				<posy>-1</posy>
				<aspectratio>keep</aspectratio>
				<texture fallback="colors/color_transparent.png" colordiffuse="$INFO[Skin.String(BingieDetailsFlagTextColor)]">$VAR[AudioCodecVar,bingie/audiocodec/,.png]</texture>
		</control>				
		
		<!-- Fallback Audio Codec flag/text -->		
		<control type="button" id="54227">
				<visible>!Skin.HasSetting(enableAtmosOnly) + !String.IsEmpty(Control.GetLabel(54227)) + String.EndsWith(Control.GetLabel(54321),color_transparent.png)</visible>
				<visible>!String.IsEqual(Window.Property(AdditionalInfo),similar) + !String.IsEqual(Window.Property(AdditionalInfo),cast) + !String.IsEqual(Window.Property(AdditionalInfo),trailers)</visible>
				<posy>0</posy>
                <height>36</height>
                <width>auto</width>
				<align>center</align>
				<aligny>top</aligny>
				<textwidth>140</textwidth> 
				<textcolor>$INFO[Skin.String(BingieDetailsFlagTextColor)]</textcolor>
				<disabledcolor>$INFO[Skin.String(BingieDetailsFlagTextColor)]</disabledcolor>
				<texturenofocus colordiffuse="$INFO[Skin.String(BingieDetailsFlagColor)]" border="10">bingie/square-rounded2.png</texturenofocus>
				<texturefocus  colordiffuse="$INFO[Skin.String(BingieDetailsFlagColor)]" border="10">bingie/square-rounded2.png</texturefocus>
				<textoffsetx>8</textoffsetx>
				<textoffsety>2</textoffsety>
				<font>Reg24</font>
				<label>$VAR[AudioCodecVar,[UPPERCASE][B],[/B][/UPPERCASE]]</label>
				<enable>false</enable>
            </control>
	</control>
</include>

		<!-- TV Show Status -->
		<include name="ShowStatus">
				<include>Default_Visible_Fade</include>
		<control type="group">
		<visible>!String.IsEmpty(Control.GetLabel(6111161)) + $EXP[IsTvShowDBType]</visible>
		<visible>!String.IsEqual(Window.Property(AdditionalInfo),similar) + !String.IsEqual(Window.Property(AdditionalInfo),cast) + !String.IsEqual(Window.Property(AdditionalInfo),trailers)</visible>
				<visible>String.IsEmpty(ListItem.AudioCodec)</visible>
			<control type="button" id="6111161">
				<posy>7</posy>
                <height>36</height>
                <width min="80" max="148">auto</width>
				<align>center</align>
				<aligny>top</aligny>
				<textwidth>auto</textwidth> 
				<textcolor>00ffffff</textcolor>
				<disabledcolor>00ffffff</disabledcolor>
				<texturenofocus colordiffuse="$INFO[Skin.String(BingieDetailsFlagColor)]" border="10">bingie/square-rounded2.png</texturenofocus>
				<texturefocus colordiffuse="$INFO[Skin.String(BingieDetailsFlagColor)]" border="10">bingie/square-rounded2.png</texturefocus>
				<textoffsetx>8</textoffsetx>
				<textoffsety>-1</textoffsety>
				<font>Reg26</font>
				<label>[CAPITALIZE]$INFO[Container(99950).ListItem.Status][/CAPITALIZE]</label>
				<enable>false</enable>
			</control>
			<control type="label" id="6111161">
				<width>132</width>
				<left>8</left>
                <align>left</align>
				<aligny>top</aligny>
				<posy>7</posy>
                <textcolor>$INFO[Skin.String(BingieDetailsFlagTextColor)]</textcolor>
                <font>Reg26</font>
                <scroll>true</scroll>
                <label>[CAPITALIZE]$INFO[Container(99950).ListItem.Status][/CAPITALIZE]</label>
			</control>
		</control>
		</include>			
	
    <!-- END OF DETAILS ROW INCLUDES-->

	<!-- Spotlight Row Details Gap-->
	<include name="SpotlightRowDetails">
		<control type="grouplist">
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<top>10</top>
			<height>50</height>
			<itemgap>15</itemgap>
			<include condition="!Skin.HasSetting(DisableThumbsUpDown)">Thumbs_Up_Down_Details_Row</include>
			<include condition="!Skin.HasSetting(PreferIMDBDetailsRow)">New_Tag_Details_Row</include>
            <include condition="!Skin.HasSetting(PreferIMDBDetailsRow)">Percentage_Rating_Details_Row</include>
            <include condition="Skin.HasSetting(PreferIMDBDetailsRow)">IMDB_RT_Details_Row</include>
			<include>Year_Premiered_PVRTime_Details_Row</include>
            <include condition="Skin.HasSetting(enableUKIcons)">MPAA_Details_RowNew</include>
			<include condition="!Skin.HasSetting(enableUKIcons) + !Skin.HasSetting(enableUSIcons)">MPAA_Details_Row</include>
			<include condition="Skin.HasSetting(enableUSIcons) + !Skin.HasSetting(FixedMPAAPanel)">MPAA_Details_RowUS</include>
			<include condition="Skin.HasSetting(enableUSIcons) + Skin.HasSetting(FixedMPAAPanel)">MPAA_Details_RowUS_Fixed_Size</include>
			<include>Duration_TotalSeasonsEpisodes_Details_Row</include>
			<include>Resolution_Details_Row</include>
			<include condition="Skin.HasSetting(EnableFakeResolution)">Resolution_Details_Row_fake</include>
            <include>Audio_Channels_Details_Row</include>
			<include condition="Skin.HasSetting(EnableTVShowStatus)">ShowStatus</include>
			<include condition="!Skin.HasSetting(EnableAudioCodec)">Audiocodec1</include>
		</control>
	</include>
	
	<include name="MusicRowDetails">
		<control type="grouplist">
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<top>10</top>
			<height>50</height>
			<itemgap>15</itemgap>
            <include>Percentage_Rating_Details_Row</include>
			<include>Music_Disambiguation_Details_Row</include>
			<include>Music_Line_Details_Row</include>
			<include>Music_Year_Details_Row</include>
			<include>Music_Album_Year_Details_Row</include>
			<include>Music_Album_Line_Details_Row</include>
			<include>Music_Label_Details_Row</include>
		</control>
	</include>
	
	<include name="PlaySomethingRowDetails">
		<control type="grouplist">
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<top>10</top>
			<height>50</height>
			<itemgap>15</itemgap>
			<include>Duration_TotalSeasonsEpisodes_Details_Row</include>
            <include condition="Skin.HasSetting(enableUKIcons)">MPAA_Details_RowNew</include>
			<include condition="!Skin.HasSetting(enableUKIcons) + !Skin.HasSetting(enableUSIcons)">MPAA_Details_Row</include>
			<include condition="Skin.HasSetting(enableUSIcons) + !Skin.HasSetting(FixedMPAAPanel)">MPAA_Details_RowUS</include>
			<include condition="Skin.HasSetting(enableUSIcons) + Skin.HasSetting(FixedMPAAPanel)">MPAA_Details_RowUS_Fixed_Size</include>
		</control>
	</include>
	
	<include name="GlobalSearchtRowDetails">
		<control type="grouplist">
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<top>10</top>
			<height>50</height>
			<itemgap>15</itemgap>
            <include condition="!Skin.HasSetting(DisableThumbsUpDown)">Thumbs_Up_Down_Details_Row</include>
            <include condition="!Skin.HasSetting(PreferIMDBDetailsRow)">Percentage_Rating_Details_Row</include>
			<include condition="!Skin.HasSetting(PreferIMDBDetailsRow)">New_Tag_Details_Row</include>
            <include condition="Skin.HasSetting(PreferIMDBDetailsRow)">IMDB_RT_Details_Row</include>
			<include>Year_Premiered_PVRTime_Details_Row</include>
            <include condition="Skin.HasSetting(enableUKIcons)">MPAA_Details_RowNew</include>
			<include condition="!Skin.HasSetting(enableUKIcons) + !Skin.HasSetting(enableUSIcons)">MPAA_Details_Row</include>
			<include condition="Skin.HasSetting(enableUSIcons) + !Skin.HasSetting(FixedMPAAPanel)">MPAA_Details_RowUS</include>
			<include condition="Skin.HasSetting(enableUSIcons) + Skin.HasSetting(FixedMPAAPanel)">MPAA_Details_RowUS_Fixed_Size</include>
			<include>Duration_TotalSeasonsEpisodes_Details_Row</include>
		</control>
	</include>

    <!-- Bingie additional info-->
    <include name="Bingie_Additional_Info">
        <param name="top" default="13" />
		<param name="visibility" default="true" />										  
          <definition>
		      <control type="grouplist">
                  <nested/>
				  <visible>Skin.HasSetting(DisableCastThumb)</visible>
				  <visible>$PARAM[visibility]</visible>
                  <visible>$EXP[IsMovieDBType] | $EXP[IsTvShowDBType] | [String.IsEqual(ListItem.DBTYPE,artist) | String.IsEqual(ListItem.DBTYPE,album)] + [!String.IsEmpty(ListItem.Property(Album_Description)) | !String.IsEmpty(ListItem.Property(Artist_Description))]</visible>
				  <visible>!Skin.HasSetting(DisableTop250) + String.IsEmpty(Control.GetLabel(8231)) + !Integer.IsGreater(ListItem.PercentPlayed,1) | [$EXP[IsMainMenuOpened] + Integer.IsGreater(Window(Home).Property(ListItem.PercentPlayed),1)] | 
				  !Skin.HasSetting(DisableTop250) + String.IsEmpty(Control.GetLabel(8231)) + !Skin.HasSetting(MovieDetailsHome) + Integer.IsGreater(ListItem.PercentPlayed,1) | 
				  Skin.HasSetting(DisableTop250) + !Skin.HasSetting(MovieDetailsHome) | 
				  Skin.HasSetting(DisableTop250) + Skin.HasSetting(MovieDetailsHome) + !Integer.IsGreater(ListItem.PercentPlayed,1)
				  </visible>
                  <top>$PARAM[top]</top>
                  <height>115</height>
               	  <width>800</width>
                  <itemgap>25</itemgap>
                  <orientation>horizontal</orientation>
                  <usecontrolcoords>true</usecontrolcoords>
                  <include>Default_Visible_Fade</include>
				  
                  <control type="group">
                      <top>23</top>
                      <height>70</height> 
                      <width>70</width>
					  <posx>1</posx>
                      <control type="image">    <!-- red circle icons -->
					      <visible>Skin.HasSetting(EnableColorDetailsIcons)</visible>
                          <animation effect="fade" time="150">Visible</animation>
                          <animation effect="fade" time="0" end="85" condition="true">Visible</animation>
                          <align>left</align>
                          <aligny>center</aligny>
                          <texture>$VAR[BingieMoreDetailsImage,bingie/details/,.png]</texture>
                      </control>
					  <control type="image">    <!-- white circle icons -->
					      <visible>!Skin.HasSetting(EnableColorDetailsIcons)</visible>
                          <animation effect="fade" time="150">Visible</animation>
                          <animation effect="fade" time="0" end="85" condition="true">Visible</animation>
                          <align>left</align>
                          <aligny>center</aligny>
						  <colordiffuse>$INFO[Skin.String(BingieAdditionalInfoIconsColor)]</colordiffuse>
                          <texture>$VAR[BingieMoreDetailsImage,bingie/details/white/,.png]</texture>
                      </control>
                  </control>
				  <!-- Red Circle More Details - Under Movie Info -->
				  <control type="textbox" id="84">
                      <animation effect="fade" time="150">Visible</animation>
                      <height>115</height>	gets a 3 line textbox for the Cast info to display			  
					  <bottom>0</bottom>			  
                      <width>650</width>
                      <label>$VAR[BingieMoreDetails]</label>
                      <textcolor>$INFO[Skin.String(BingieAdditionalInfoTextColor)]</textcolor>
                      <align>left</align>
                      <aligny>center</aligny>
                      <font>Reg28</font> 
                      <autoscroll>false</autoscroll>
                  </control>
              </control>
              <control type="grouplist">
                  <nested/>
				  <visible>!Skin.HasSetting(DisableCastThumb)</visible>
				  <visible>$PARAM[visibility]</visible>
                  <visible>$EXP[IsMovieDBType] | $EXP[IsTvShowDBType] | [String.IsEqual(ListItem.DBTYPE,artist) | String.IsEqual(ListItem.DBTYPE,album)] + [!String.IsEmpty(ListItem.Property(Album_Description)) | !String.IsEmpty(ListItem.Property(Artist_Description))]</visible>
				  <visible>!Skin.HasSetting(DisableTop250) + String.IsEmpty(Control.GetLabel(8231)) + !Integer.IsGreater(ListItem.PercentPlayed,1) | [$EXP[IsMainMenuOpened] + Integer.IsGreater(Window(Home).Property(ListItem.PercentPlayed),1)] | 
				  !Skin.HasSetting(DisableTop250) + String.IsEmpty(Control.GetLabel(8231)) + !Skin.HasSetting(MovieDetailsHome) + Integer.IsGreater(ListItem.PercentPlayed,1) | 
				  Skin.HasSetting(DisableTop250) + !Skin.HasSetting(MovieDetailsHome) | 
				  Skin.HasSetting(DisableTop250) + Skin.HasSetting(MovieDetailsHome) + !Integer.IsGreater(ListItem.PercentPlayed,1)
				  </visible>
                  <top>$PARAM[top]</top>
                  <height>115</height>
               	  <width>800</width>
                  <itemgap>25</itemgap>
                  <orientation>horizontal</orientation>
                  <usecontrolcoords>true</usecontrolcoords>
                  <include>Default_Visible_Fade</include>
				  
                  <control type="group">
                      <visible>[String.IsEmpty(Container(99950).ListItem.Property(Cast.1.Thumb)) + [[String.StartsWith(Container(99950).ListItem.Property(TMDb_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(TMDb_Rating),9)] + [String.StartsWith(Container(99950).ListItem.Property(IMDb_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(IMDb_Rating),9)] + [String.StartsWith(Container(99950).ListItem.Property(Trakt_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(Trakt_Rating),9)]]] | ![[String.StartsWith(Container(99950).ListItem.Property(TMDb_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(TMDb_Rating),9)] + [String.StartsWith(Container(99950).ListItem.Property(IMDb_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(IMDb_Rating),9)] + [String.StartsWith(Container(99950).ListItem.Property(Trakt_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(Trakt_Rating),9)]]</visible>
                      <top>23</top>
                      <height>70</height> 
                      <width>70</width>
					  <posx>1</posx>
                      <control type="image">    <!-- red circle icons -->
					      <visible>Skin.HasSetting(EnableColorDetailsIcons)</visible>
                          <animation effect="fade" time="150">Visible</animation>
                          <animation effect="fade" time="0" end="85" condition="true">Visible</animation>
                          <align>left</align>
                          <aligny>center</aligny>
                          <texture>$VAR[BingieMoreDetailsImage,bingie/details/,.png]</texture>
                      </control>
					  <control type="image">    <!-- white circle icons -->
					      <visible>!Skin.HasSetting(EnableColorDetailsIcons)</visible>
                          <animation effect="fade" time="150">Visible</animation>
                          <animation effect="fade" time="0" end="85" condition="true">Visible</animation>
                          <align>left</align>
                          <aligny>center</aligny>
						  <colordiffuse>$INFO[Skin.String(BingieAdditionalInfoIconsColor)]</colordiffuse>
                          <texture>$VAR[BingieMoreDetailsImage,bingie/details/white/,.png]</texture>
                      </control>
                  </control>
				  <control type="group">
                      <visible>!String.IsEmpty(Container(99950).ListItem.Property(Cast.1.Thumb)) + [[String.StartsWith(Container(99950).ListItem.Property(TMDb_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(TMDb_Rating),9)] + [String.StartsWith(Container(99950).ListItem.Property(IMDb_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(IMDb_Rating),9)] + [String.StartsWith(Container(99950).ListItem.Property(Trakt_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(Trakt_Rating),9)]]</visible>
                      <top>23</top>
                      <height>70</height> 
                      <width>70</width>
					  <posx>1</posx>
                      <control type="image">
                          <animation effect="fade" time="150">Visible</animation>
                          <animation effect="fade" time="0" end="85" condition="true">Visible</animation>
                          <align>left</align>
                          <aligny>center</aligny>
						  <colordiffuse>$INFO[Skin.String(BingieAdditionalInfoIconsColor)]</colordiffuse>
                          <texture>bingie/circle_back.png</texture>
                      </control>
					  <control type="image">
                          <animation effect="fade" time="150">Visible</animation>
                          <animation effect="fade" time="0" end="85" condition="true">Visible</animation>
						  <height>64</height> 
						  <width>64</width>
						  <posx>3</posx>
						  <posy>3</posy>
                          <align>left</align>
                          <aligny>center</aligny>
						  <aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
                          <texture diffuse="diffuse/circle_diffuse.png">$INFO[Container(99950).ListItem.Property(Cast.1.Thumb)]</texture>
                      </control>
                  </control>
				  <!-- Red Circle More Details - Under Movie Info -->
				  <control type="textbox" id="84">
					  <visible>[String.IsEmpty(Container(99950).ListItem.Property(Cast.1.Thumb)) + [[String.StartsWith(Container(99950).ListItem.Property(TMDb_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(TMDb_Rating),9)] + [String.StartsWith(Container(99950).ListItem.Property(IMDb_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(IMDb_Rating),9)] + [String.StartsWith(Container(99950).ListItem.Property(Trakt_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(Trakt_Rating),9)]]] | ![[String.StartsWith(Container(99950).ListItem.Property(TMDb_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(TMDb_Rating),9)] + [String.StartsWith(Container(99950).ListItem.Property(IMDb_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(IMDb_Rating),9)] + [String.StartsWith(Container(99950).ListItem.Property(Trakt_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(Trakt_Rating),9)]]</visible>
                      <animation effect="fade" time="150">Visible</animation>
                      <height>115</height>		  
					  <bottom>0</bottom>			  
                      <width>650</width>
                      <label>$VAR[BingieMoreDetails]</label>
                      <textcolor>$INFO[Skin.String(BingieAdditionalInfoTextColor)]</textcolor>
                      <align>left</align>
                      <aligny>center</aligny>
                      <font>Reg28</font> 
                      <autoscroll>false</autoscroll>
                  </control>
				  <control type="textbox" id="84">
					  <visible>!String.IsEmpty(Container(99950).ListItem.Property(Cast.1.Thumb)) + [[String.StartsWith(Container(99950).ListItem.Property(TMDb_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(TMDb_Rating),9)] + [String.StartsWith(Container(99950).ListItem.Property(IMDb_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(IMDb_Rating),9)] + [String.StartsWith(Container(99950).ListItem.Property(Trakt_Rating),8) | String.StartsWith(Container(99950).ListItem.Property(Trakt_Rating),9)]]</visible>
                      <animation effect="fade" time="150">Visible</animation>
                      <height>115</height>	  
					  <bottom>0</bottom>			  
                      <width>650</width>
                      <label>$INFO[Container(99950).ListItem.Property(Cast.1.Name),$LOCALIZE[320223] ]</label>
                      <textcolor>$INFO[Skin.String(BingieAdditionalInfoTextColor)]</textcolor>
                      <align>left</align>
                      <aligny>center</aligny>
                      <font>Reg28</font> 
                      <autoscroll>false</autoscroll>
                  </control>
              </control>
          </definition>
    </include>

    <!-- Thumbs Down/Up Includes -->
    <include name="ThumbsUpMinCondition">
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),-1)">DisableVisibility</include>
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),6)">ThumbsUpMin6</include>
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),7)">ThumbsUpMin7</include>
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),8)">ThumbsUpMin8</include>
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),9)">ThumbsUpMin9</include>
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),10)">ThumbsUpMin10</include>
    </include>
	
	<include name="ThumbsUpMinCondition_2">
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),-1)">DisableVisibility</include>
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),6)">ThumbsUpMin6_2</include>
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),7)">ThumbsUpMin7_2</include>
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),8)">ThumbsUpMin8_2</include>
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),9)">ThumbsUpMin9_2</include>
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),10)">ThumbsUpMin10_2</include>
    </include>

    <include name="ThumbsDownMaxCondition">
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),-1)">DisableVisibility</include>
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),5)">ThumbsDownMax5</include>
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),4)">ThumbsDownMax4</include>
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),3)">ThumbsDownMax3</include>
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),2)">ThumbsDownMax2</include>
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),1)">ThumbsDownMax1</include>
    </include>
	
	<include name="ThumbsDownMaxCondition_2">
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),-1)">DisableVisibility</include>
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),5)">ThumbsDownMax5_2</include>
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),4)">ThumbsDownMax4_2</include>
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),3)">ThumbsDownMax3_2</include>
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),2)">ThumbsDownMax2_2</include>
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),1)">ThumbsDownMax1_2</include>
    </include>

    <include name="ThumbsUpMin6"><visible>[Integer.IsGreaterOrEqual(ListItem.UserRating,6) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),like) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
    <include name="ThumbsUpMin7"><visible>[Integer.IsGreaterOrEqual(ListItem.UserRating,7) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),like) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
    <include name="ThumbsUpMin8"><visible>[Integer.IsGreaterOrEqual(ListItem.UserRating,8) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),like) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
    <include name="ThumbsUpMin9"><visible>[Integer.IsGreaterOrEqual(ListItem.UserRating,9) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),like) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
    <include name="ThumbsUpMin10"><visible>[Integer.IsGreaterOrEqual(ListItem.UserRating,10) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),like) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
	
	<include name="ThumbsUpMin6_2"><visible>![[Integer.IsGreaterOrEqual(ListItem.UserRating,6) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),like) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]]</visible></include>
    <include name="ThumbsUpMin7_2"><visible>![[Integer.IsGreaterOrEqual(ListItem.UserRating,7) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),like) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]]</visible></include>
    <include name="ThumbsUpMin8_2"><visible>![[Integer.IsGreaterOrEqual(ListItem.UserRating,8) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),like) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]]</visible></include>
    <include name="ThumbsUpMin9_2"><visible>![[Integer.IsGreaterOrEqual(ListItem.UserRating,9) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),like) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]]</visible></include>
    <include name="ThumbsUpMin10_2"><visible>![[Integer.IsGreaterOrEqual(ListItem.UserRating,10) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),like) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]]</visible></include>

    <include name="ThumbsDownMax5"><visible>[!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,5) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),dislike) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
    <include name="ThumbsDownMax4"><visible>[!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,4) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),dislike) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
    <include name="ThumbsDownMax3"><visible>[!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,3) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),dislike) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
    <include name="ThumbsDownMax2"><visible>[!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,2) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),dislike) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
    <include name="ThumbsDownMax1"><visible>[!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,1) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),dislike) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
	
	<include name="ThumbsDownMax5_2"><visible>![[!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,5) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),dislike) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]]</visible></include>
    <include name="ThumbsDownMax4_2"><visible>![[!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,4) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),dislike) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]]</visible></include>
    <include name="ThumbsDownMax3_2"><visible>![[!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,3) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),dislike) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]]</visible></include>
    <include name="ThumbsDownMax2_2"><visible>![[!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,2) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),dislike) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]]</visible></include>
    <include name="ThumbsDownMax1_2"><visible>![[!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,1) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),dislike) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]]</visible></include>

    <!-- disable visibility -->
    <include name="DisableVisibility"><visible>false</visible></include>

    <include name="hiddenSubmenu">
        <!-- hidden submenu to do count calculations -->
        <control type="list" id="4445">
            <left>-3000</left>
            <top>-3000</top>
            <width>1</width>
            <height>1</height>
            <pagecontrol/>
            <orientation>vertical</orientation>
            <itemlayout width="1" height="1">
            </itemlayout>
            <focusedlayout width="1" height="1">
            </focusedlayout>
            <content><include>skinshortcuts-submenu</include></content>
        </control>
    </include>

    <include name="MainMenuContent">
        <content>
            <include>skinshortcuts-mainmenu</include>
        </content>
    </include>
    <!-- variables -->
	
	<!-- New Item Tag -->
    <variable name="NewItem">
        <value condition="$EXP[IsMovieDBType]">$VAR[NewMovieItem]</value>
        <value condition="$EXP[IsEpisodeDBType]">$VAR[NewEpisodeItem]</value>
        <value condition="$EXP[IsTvShowDBType]">$VAR[NewTVShowItem]</value>
    </variable>
	
	<!-- New Movie -->
    <variable name="NewMovieItem">
        <!-- last 10 added movies -->
        <value condition="String.IsEqual(Window(Home).Property(LatestMovie.1.Title),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestMovie.2.Title),ListItem.Title) |
        String.IsEqual(Window(Home).Property(LatestMovie.3.Title),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestMovie.4.Title),ListItem.Title) |
        String.IsEqual(Window(Home).Property(LatestMovie.5.Title),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestMovie.6.Title),ListItem.Title) |
        String.IsEqual(Window(Home).Property(LatestMovie.7.Title),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestMovie.8.Title),ListItem.Title) |
        String.IsEqual(Window(Home).Property(LatestMovie.9.Title),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestMovie.10.Title),ListItem.Title)">$LOCALIZE[31837]</value>
    </variable>

    <!-- New TVShow -->
    <variable name="NewTVShowItem">
        <!-- last 10 added episodes that are ep. in season 1 of the tvshow -->
        <value condition="[String.IsEqual(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.10.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.9.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.8.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.7.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.6.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.5.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.4.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.3.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.2.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.1.EpisodeSeason),1)]">$LOCALIZE[31837]</value>
    </variable>

    <!-- New Episode -->
    <variable name="NewEpisodeItem">
        <!-- new episode: last 10 added ep. -->
        <value condition="[String.IsEqual(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TVShowTitle)]">$LOCALIZE[31837]</value>
    </variable>

	<!-- Choose Year / Premiered / PVR -->
	<variable name="YearOrPremieredOrPVR">
		<value condition="$EXP[IsEpisodeDBType]">$VAR[GetPremiered]</value>
        <value condition="String.IsEmpty(ListItem.DBTYPE) + !String.IsEmpty(ListItem.StartTime)">$VAR[GetPVRTimings]</value>
		<value>$VAR[GetYear]</value>
	</variable>
	
	<!-- Choose Music Year -->
	<variable name="MusicYear">       
		<value condition="[!String.IsEmpty(ListItem.Property(Artist_Formed)) | !String.IsEmpty(ListItem.Property(Artist_Disbanded))] + !String.IsEqual(ListItem.Property(Artist_Type),person)">$INFO[ListItem.Property(Artist_Formed),$LOCALIZE[31106] ]$INFO[ListItem.Property(Artist_Disbanded),  |  $LOCALIZE[31107] ]</value>
		<value condition="[!String.IsEmpty(ListItem.Property(Artist_Born)) | !String.IsEmpty(ListItem.Property(Artist_Died))] + String.IsEqual(ListItem.Property(Artist_Type),person)">$INFO[ListItem.Property(Artist_Born),$LOCALIZE[320195] ]$INFO[ListItem.Property(Artist_Died),  |  $LOCALIZE[320196] ]</value>
	</variable>
	
	<variable name="MusicAlbumYear">
		<value condition="!String.IsEmpty(ListItem.Year)">$INFO[ListItem.Year,$LOCALIZE[31108] ]</value>        
	</variable>
	
	<!-- Choose Music Year -->
	<variable name="MusicDisambiguation">
		<value condition="!String.IsEmpty(ListItem.Property(Artist_Disambiguation))">$INFO[ListItem.Property(Artist_Disambiguation)]</value>        
	</variable>
	
	<!-- Music Label -->
	<variable name="MusicLabel">
		<value condition="!String.IsEmpty(ListItem.Property(Album_Label))">$INFO[ListItem.Property(Album_Label),$LOCALIZE[31109] ]</value>        
	</variable>
	
	<!-- Choose Duration Or Total Seasons/Episodes count -->
	<variable name="DurationOrTotalSECount">
		<value condition="$EXP[IsTvShowDBType]">$VAR[GetTotalSeasonEpisodeCount]</value>
		<value>$VAR[GetDuration]</value>
	</variable>
	
	<!-- Premiered Info -->
	<variable name="GetPremiered">
		<value condition="!String.IsEmpty(ListItem.Premiered)">$INFO[ListItem.Premiered]</value>
		<value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Premiered))">$INFO[Window(Home).Property(ListItem.Premiered)]</value>
		<value condition="!String.IsEmpty(Container(99950).ListItem.Property(Premiered))">$INFO[Container(99950).ListItem.Property(Premiered)]</value>
	</variable>

	<!--Year Info -->
	<variable name="GetYear">
		<value condition="!String.IsEmpty(ListItem.Year)">$INFO[ListItem.Year]</value>
		<value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Year))">$INFO[Window(Home).Property(ListItem.Year)]</value>
		<value condition="!String.IsEmpty(Container(99950).ListItem.Year)">$INFO[Container(99950).ListItem.Year]</value>
	</variable>

    <!-- PVR Times Info (Start, Date, etc) -->
    <variable name="GetPVRTimings">
        <value condition="String.StartsWith(ListItem.Path,pvr://recordings)">$INFO[ListItem.StartDate,, | ]$INFO[ListItem.StartTime]$INFO[ListItem.EndTime, - ]</value>
        <value condition="!String.IsEmpty(ListItem.StartTime)">$INFO[ListItem.StartTime]$INFO[ListItem.EndTime, - ]</value>
    </variable>

    <!--Duration Info -->
    <variable name="GetDuration">
        <!-- Hours not disabled -->
        <!-- normal -->
        <value condition="!Skin.HasSetting(DisableHoursDuration) + Integer.IsGreater(ListItem.Duration(h),0)">$INFO[ListItem.Duration(h),,h ]$INFO[ListItem.Duration(m),,m]</value>
        <value condition="!Skin.HasSetting(DisableHoursDuration) + !String.IsEmpty(ListItem.Duration) + Integer.IsEqual(ListItem.Duration(h),0)">$INFO[ListItem.Duration(mins),,m]</value>
        <!-- fallback -->
        <value condition="$EXP[IsMainMenuOpened] + !Skin.HasSetting(DisableHoursDuration) + Integer.IsGreater(Window(Home).Property(ListItem.Duration.Hours),0)">$INFO[Window(Home).Property(ListItem.Duration.Hours),,h ]$INFO[Window(Home).Property(ListItem.Duration.M),,m]</value>
        <value condition="$EXP[IsMainMenuOpened] + !Skin.HasSetting(DisableHoursDuration) + !String.IsEmpty(Window(Home).Property(ListItem.Duration.Hours)) + Integer.IsEqual(Window(Home).Property(ListItem.Duration.Hours),0)">$INFO[Window(Home).Property(ListItem.Duration.Mins),,m]</value>
        <!-- Hours disabled -->
        <value condition="Skin.HasSetting(DisableHoursDuration) + !String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration(mins),,m]</value>
        <value condition="$EXP[IsMainMenuOpened] + Skin.HasSetting(DisableHoursDuration) + !String.IsEmpty(Window(Home).Property(ListItem.Duration))">$INFO[Window(Home).Property(ListItem.Duration.Mins),,m]</value>
        <!-- regular format fallback -->
        <value condition="!String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Duration))">$INFO[Window(Home).Property(ListItem.Duration)]</value>
    </variable>

    <!-- Total Seasons/Episodes Info -->
    <variable name="GetTotalSeasonEpisodeCount">
        <!--normal-->
        <value condition="Integer.IsGreater(ListItem.Property(TotalEpisodes),1) + Integer.IsGreater(ListItem.Property(TotalSeasons),1)">$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[320207]]</value>
        <value condition="Integer.IsGreater(ListItem.Property(TotalEpisodes),1) + Integer.IsEqual(ListItem.Property(TotalSeasons),1)">$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[20373]]</value>
        <value condition="Integer.IsEqual(ListItem.Property(TotalEpisodes),1)">$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20359]]</value>
        <value condition="!String.IsEmpty(ListItem.Property(TotalEpisodes)) + Integer.IsEqual(ListItem.Property(TotalEpisodes),0)">$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20360]]</value>
        <!-- fallback -->
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.TotalEpisodes)) + Integer.IsGreater(Window(Home).Property(ListItem.TotalSeasons),1)">$INFO[Window(Home).Property(ListItem.TotalSeasons),, $LOCALIZE[320207]]</value>
        <value condition="$EXP[IsMainMenuOpened] + Integer.IsGreater(Window(Home).Property(ListItem.TotalEpisodes),1) + Integer.IsEqual(Window(Home).Property(ListItem.TotalSeasons),1)">$INFO[Window(Home).Property(ListItem.TotalSeasons),, $LOCALIZE[20373]]</value>
        <value condition="$EXP[IsMainMenuOpened] + Integer.IsEqual(Window(Home).Property(ListItem.TotalEpisodes),1)">$INFO[Window(Home).Property(ListItem.TotalEpisodes),, $LOCALIZE[20359]]</value>
        <value condition="$EXP[IsMainMenuOpened] + Integer.IsEqual(Window(Home).Property(ListItem.TotalEpisodes),0)">$INFO[Window(Home).Property(ListItem.TotalEpisodes),, $LOCALIZE[20360]]</value>
    </variable>

    <!-- MPAA Info -->
    <variable name="GetMPAA">
        <!-- contains is very slow! -->
        <!-- normal listitems -->
        <!-- US MPAA Views-->
        <value condition="String.Contains(ListItem.mpaa,US:G) | String.Contains(ListItem.mpaa,USA:G) | String.Contains(ListItem.mpaa,Rated G)">G</value>
        <value condition="String.Contains(ListItem.mpaa,PG-13)">PG-13</value>
        <value condition="String.Contains(ListItem.mpaa,Rated PG) | String.IsEqual(ListItem.Mpaa,PG)">PG</value>
        <value condition="String.Contains(ListItem.mpaa,US:R) | String.Contains(ListItem.mpaa,USA:R) | String.Contains(ListItem.mpaa,Rated R) | String.IsEqual(ListItem.mpaa,R)">R</value>
        <value condition="String.Contains(ListItem.mpaa,US:NC-17) | String.Contains(ListItem.mpaa,USA:NC-17)| String.Contains(ListItem.mpaa,Rated NC-17)">NC-17</value>
		<value condition="String.Contains(ListItem.mpaa,NR)">NR</value>															   
		<value condition="String.Contains(ListItem.mpaa,TV-Y)">TV-Y</value>
		<value condition="String.Contains(ListItem.mpaa,TV-Y7)">TV-Y7</value>
		<value condition="String.Contains(ListItem.mpaa,TV-G)">TV-G</value>
		<value condition="String.Contains(ListItem.mpaa,TV-PG)">TV-PG</value>
		<value condition="String.Contains(ListItem.mpaa,TV-14)">TV-14</value>
		<value condition="String.Contains(ListItem.mpaa,TV-MA) | String.Contains(ListItem.mpaa,USA:TV-MA)">TV-MA</value>
		
        <!-- UK -->
        <value condition="String.Contains(ListItem.mpaa,UK:U)">ALL</value>
        <value condition="String.Contains(ListItem.mpaa,UK:PG)">PG</value>
        <value condition="String.Contains(ListItem.mpaa,UK:12A)">12A</value>
        <value condition="String.Contains(ListItem.mpaa,UK:12)">12</value>
        <value condition="String.Contains(ListItem.mpaa,UK:15)">15</value>
        <value condition="String.Contains(ListItem.mpaa,UK:18)">18</value>
		
        <!-- DE -->
        <value condition="String.Contains(ListItem.mpaa,Germany:16) | String.Contains(ListItem.mpaa,ab 16) | String.Contains(ListItem.mpaa,FSK 16)">FSK16</value>
        <value condition="String.Contains(ListItem.mpaa,Germany:6)| String.Contains(ListItem.mpaa,ab 6) | String.Contains(ListItem.mpaa,FSK 6)">FSK6</value>
        <value condition="String.Contains(ListItem.mpaa,Germany:12) | String.Contains(ListItem.mpaa,ab 12) | String.Contains(ListItem.mpaa,FSK 12)">FSK12</value>
        <value condition="String.Contains(ListItem.mpaa,Germany:18) | String.Contains(ListItem.mpaa,ab 18) | String.Contains(ListItem.mpaa,FSK 18)">FSK18</value>
        <value condition="String.Contains(ListItem.mpaa,Germany)|String.Contains(ListItem.mpaa,FSK)| String.Contains(ListItem.mpaa,o.A) | String.Contains(ListItem.mpaa,FSK 0)">FSK0</value>
        <value condition="String.Contains(ListItem.mpaa,besorolás alatt)">BA</value>
        <!-- HU -->
        <value condition="String.Contains(ListItem.mpaa,korhatárra való tekintett nélkül megtekintetheto)">KN</value>
        <value condition="String.Contains(ListItem.mpaa,12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">12</value>
        <value condition="String.Contains(ListItem.mpaa,16 éven aluliak számára nem ajánlott)">16</value>
        <value condition="String.Contains(ListItem.mpaa,18 éven aluliak számára nem ajánlott)">18</value>
        <!-- FR -->
        <value condition="String.Contains(ListItem.mpaa,France:U) | String.Contains(ListItem.mpaa,partir de 3 ans) | String.Contains(ListItem.mpaa,partir de 6 ans)">CSAU</value>
        <value condition="String.Contains(ListItem.mpaa,France:-10) | String.Contains(ListItem.mpaa,Interdit aux moins de 10 ans) | String.Contains(ListItem.mpaa,des propos ou des images peuvent heurter)">CSA-10</value>
        <value condition="String.Contains(ListItem.mpaa,France:-12) | String.Contains(ListItem.mpaa,Interdit aux moins de 12 ans)">CSA12</value>
        <value condition="String.Contains(ListItem.mpaa,France:-16) | String.Contains(ListItem.mpaa,Interdit aux moins de 16 ans)">CSA16</value>
        <value condition="String.Contains(ListItem.mpaa,France:-18) | String.Contains(ListItem.mpaa,Interdit aux moins de 18 ans)">CSA18</value>
        <!-- BR -->
        <value condition="String.Contains(ListItem.mpaa,Brazil:Livre) | String.Contains(ListItem.mpaa,Livre)">L</value>
        <value condition="String.Contains(ListItem.mpaa,Brazil:10) | String.Contains(ListItem.mpaa,10 anos)">10</value>
        <value condition="String.Contains(ListItem.mpaa,Brazil:12) | String.Contains(ListItem.mpaa,12 anos)">12</value>
        <value condition="String.Contains(ListItem.mpaa,Brazil:14) | String.Contains(ListItem.mpaa,14 anos)">14</value>
        <value condition="String.Contains(ListItem.mpaa,Brazil:16) | String.Contains(ListItem.mpaa,16 anos)">16</value>
        <value condition="String.Contains(ListItem.mpaa,Brazil:18) | String.Contains(ListItem.mpaa,18 anos)">18</value>
        <value condition="!String.IsEmpty(ListItem.mpaa) + !String.Contains(ListItem.mpaa,not rated) + !String.Contains(ListItem.mpaa,n/a)">$INFO[ListItem.MPAA]</value>
<!-- home widgets -->
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),US:G) | String.Contains(Window(Home).Property(ListItem.mpaa),USA:G) | String.Contains(Window(Home).Property(ListItem.mpaa),Rated G)]">G</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(ListItem.mpaa),PG-13)">PG-13</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),Rated PG) | String.IsEqual(Window(Home).Property(ListItem.Mpaa),PG)]">PG</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),US:R) | String.Contains(Window(Home).Property(ListItem.mpaa),USA:R) | String.Contains(Window(Home).Property(ListItem.mpaa),Rated R) | String.IsEqual(Window(Home).Property(ListItem.mpaa),R)]">R</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),US:NC-17)| String.Contains(Window(Home).Property(ListItem.mpaa),USA:NC-17)| String.Contains(Window(Home).Property(ListItem.mpaa),Rated NC-17)]">NC-17</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(ListItem.mpaa),UK:U)">ALL</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(ListItem.mpaa),UK:PG)">PG</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(ListItem.mpaa),UK:12A)">12A</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(ListItem.mpaa),UK:12)">12</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(ListItem.mpaa),UK:15)">15</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(ListItem.mpaa),UK:18)">18</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),Germany:16) | String.Contains(Window(Home).Property(ListItem.mpaa),ab 16) | String.Contains(Window(Home).Property(ListItem.mpaa),FSK 16)]">FSK16</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),Germany:6)| String.Contains(Window(Home).Property(ListItem.mpaa),ab 6) | String.Contains(Window(Home).Property(ListItem.mpaa),FSK 6)]">FSK6</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),Germany:12) | String.Contains(Window(Home).Property(ListItem.mpaa),ab 12) | String.Contains(Window(Home).Property(ListItem.mpaa),FSK 12)]">FSK12</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),Germany:18) | String.Contains(Window(Home).Property(ListItem.mpaa),ab 18) | String.Contains(Window(Home).Property(ListItem.mpaa),FSK 18)]">FSK18</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),Germany)|String.Contains(Window(Home).Property(ListItem.mpaa),FSK)| String.Contains(Window(Home).Property(ListItem.mpaa),o.A) | String.Contains(Window(Home).Property(ListItem.mpaa),FSK 0)]">FSK-0</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(ListItem.mpaa),besorolás alatt)">BA</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(ListItem.mpaa),korhatárra való tekintett nélkül megtekintetheto)">KN</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(ListItem.mpaa),12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">12</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(ListItem.mpaa),16 éven aluliak számára nem ajánlott)">16</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(ListItem.mpaa),18 éven aluliak számára nem ajánlott)">18</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),France:U) | String.Contains(Window(Home).Property(ListItem.mpaa),partir de 3 ans) | String.Contains(Window(Home).Property(ListItem.mpaa),partir de 6 ans)]">CSA-U</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),France:-10) | String.Contains(Window(Home).Property(ListItem.mpaa),Interdit aux moins de 10 ans) | String.Contains(Window(Home).Property(ListItem.mpaa),des propos ou des images peuvent heurter)]">CSA-10</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),France:-12) | String.Contains(Window(Home).Property(ListItem.mpaa),Interdit aux moins de 12 ans)]">CSA12</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),France:-16) | String.Contains(Window(Home).Property(ListItem.mpaa),Interdit aux moins de 16 ans)]">CSA16</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),France:-18) | String.Contains(Window(Home).Property(ListItem.mpaa),Interdit aux moins de 18 ans)]">CSA18</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),Brazil:Livre) | String.Contains(Window(Home).Property(ListItem.mpaa),Livre)]">L</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),Brazil:10) | String.Contains(Window(Home).Property(ListItem.mpaa),10 anos)]">10</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),Brazil:12) | String.Contains(Window(Home).Property(ListItem.mpaa),12 anos)]">12</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),Brazil:14) | String.Contains(Window(Home).Property(ListItem.mpaa),14 anos)]">14</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),Brazil:16) | String.Contains(Window(Home).Property(ListItem.mpaa),16 anos)]">16</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(ListItem.mpaa),Brazil:18) | String.Contains(Window(Home).Property(ListItem.mpaa),18 anos)]">18</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.mpaa)) + !String.Contains(Window(Home).Property(ListItem.mpaa),not rated)">$INFO[Window(Home).Property(ListItem.MPAA)]</value>
		<value condition="!String.IsEmpty(Container(99950).ListItem.mpaa)">$INFO[Container(99950).ListItem.MPAA]</value>
    </variable>
	
	<!-- OSD MPAA Info -->
    <variable name="GetMPAAOSD">
        <!-- contains is very slow! -->
        <!-- normal listitems -->
        <!-- US MPAA Views-->
        <value condition="String.Contains(videoplayer.mpaa,US:G) | String.Contains(videoplayer.mpaa,USA:G) | String.Contains(videoplayer.mpaa,Rated G)">G</value>
        <value condition="String.Contains(videoplayer.mpaa,PG-13)">PG-13</value>
        <value condition="String.Contains(videoplayer.mpaa,Rated PG) | String.IsEqual(videoplayer.mpaa,PG)">PG</value>
        <value condition="String.Contains(videoplayer.mpaa,US:R) | String.Contains(videoplayer.mpaa,USA:R) | String.Contains(videoplayer.mpaa,Rated R) | String.IsEqual(videoplayer.mpaa,R)">R</value>
        <value condition="String.Contains(videoplayer.mpaa,US:NC-17) | String.Contains(videoplayer.mpaa,USA:NC-17)| String.Contains(videoplayer.mpaa,Rated NC-17)">NC-17</value>
		<value condition="String.Contains(videoplayer.mpaa,NR)">NR</value>															   
		<value condition="String.Contains(videoplayer.mpaa,TV-Y)">TV-Y</value>
		<value condition="String.Contains(videoplayer.mpaa,TV-Y7)">TV-Y7</value>
		<value condition="String.Contains(videoplayer.mpaa,TV-G)">TV-G</value>
		<value condition="String.Contains(videoplayer.mpaa,TV-PG)">TV-PG</value>
		<value condition="String.Contains(videoplayer.mpaa,TV-14)">TV-14</value>
		<value condition="String.Contains(videoplayer.mpaa,TV-MA) | String.Contains(videoplayer.mpaa,USA:TV-MA)">TV-MA</value>
		
        <!-- UK -->
        <value condition="String.Contains(videoplayer.mpaa,UK:U)">ALL</value>
        <value condition="String.Contains(videoplayer.mpaa,UK:PG)">PG</value>
        <value condition="String.Contains(videoplayer.mpaa,UK:12A)">12A</value>
        <value condition="String.Contains(videoplayer.mpaa,UK:12)">12</value>
        <value condition="String.Contains(videoplayer.mpaa,UK:15)">15</value>
        <value condition="String.Contains(videoplayer.mpaa,UK:18)">18</value>
		
        <!-- DE -->
        <value condition="String.Contains(videoplayer.mpaa,Germany:16) | String.Contains(videoplayer.mpaa,ab 16) | String.Contains(videoplayer.mpaa,FSK 16)">FSK16</value>
        <value condition="String.Contains(videoplayer.mpaa,Germany:6)| String.Contains(videoplayer.mpaa,ab 6) | String.Contains(videoplayer.mpaa,FSK 6)">FSK6</value>
        <value condition="String.Contains(videoplayer.mpaa,Germany:12) | String.Contains(videoplayer.mpaa,ab 12) | String.Contains(videoplayer.mpaa,FSK 12)">FSK12</value>
        <value condition="String.Contains(videoplayer.mpaa,Germany:18) | String.Contains(videoplayer.mpaa,ab 18) | String.Contains(videoplayer.mpaa,FSK 18)">FSK18</value>
        <value condition="String.Contains(videoplayer.mpaa,Germany)|String.Contains(videoplayer.mpaa,FSK)| String.Contains(videoplayer.mpaa,o.A) | String.Contains(videoplayer.mpaa,FSK 0)">FSK0</value>
        <value condition="String.Contains(videoplayer.mpaa,besorolás alatt)">BA</value>
        <!-- HU -->
        <value condition="String.Contains(videoplayer.mpaa,korhatárra való tekintett nélkül megtekintetheto)">KN</value>
        <value condition="String.Contains(videoplayer.mpaa,12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">12</value>
        <value condition="String.Contains(videoplayer.mpaa,16 éven aluliak számára nem ajánlott)">16</value>
        <value condition="String.Contains(videoplayer.mpaa,18 éven aluliak számára nem ajánlott)">18</value>
        <!-- FR -->
        <value condition="String.Contains(videoplayer.mpaa,France:U) | String.Contains(videoplayer.mpaa,partir de 3 ans) | String.Contains(videoplayer.mpaa,partir de 6 ans)">CSAU</value>
        <value condition="String.Contains(videoplayer.mpaa,France:-10) | String.Contains(videoplayer.mpaa,Interdit aux moins de 10 ans) | String.Contains(videoplayer.mpaa,des propos ou des images peuvent heurter)">CSA-10</value>
        <value condition="String.Contains(videoplayer.mpaa,France:-12) | String.Contains(videoplayer.mpaa,Interdit aux moins de 12 ans)">CSA12</value>
        <value condition="String.Contains(videoplayer.mpaa,France:-16) | String.Contains(videoplayer.mpaa,Interdit aux moins de 16 ans)">CSA16</value>
        <value condition="String.Contains(videoplayer.mpaa,France:-18) | String.Contains(videoplayer.mpaa,Interdit aux moins de 18 ans)">CSA18</value>
        <!-- BR -->
        <value condition="String.Contains(videoplayer.mpaa,Brazil:Livre) | String.Contains(videoplayer.mpaa,Livre)">L</value>
        <value condition="String.Contains(videoplayer.mpaa,Brazil:10) | String.Contains(videoplayer.mpaa,10 anos)">10</value>
        <value condition="String.Contains(videoplayer.mpaa,Brazil:12) | String.Contains(videoplayer.mpaa,12 anos)">12</value>
        <value condition="String.Contains(videoplayer.mpaa,Brazil:14) | String.Contains(videoplayer.mpaa,14 anos)">14</value>
        <value condition="String.Contains(videoplayer.mpaa,Brazil:16) | String.Contains(videoplayer.mpaa,16 anos)">16</value>
        <value condition="String.Contains(videoplayer.mpaa,Brazil:18) | String.Contains(videoplayer.mpaa,18 anos)">18</value>
        <value condition="!String.IsEmpty(videoplayer.mpaa) + !String.Contains(videoplayer.mpaa,not rated) + !String.Contains(videoplayer.mpaa,n/a)">$INFO[videoplayer.mpaa]</value>
<!-- home widgets -->
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),US:G) | String.Contains(Window(Home).Property(videoplayer.mpaa),USA:G) | String.Contains(Window(Home).Property(videoplayer.mpaa),Rated G)]">G</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(videoplayer.mpaa),PG-13)">PG-13</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),Rated PG) | String.IsEqual(Window(Home).Property(videoplayer.mpaa),PG)]">PG</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),US:R) | String.Contains(Window(Home).Property(videoplayer.mpaa),USA:R) | String.Contains(Window(Home).Property(videoplayer.mpaa),Rated R) | String.IsEqual(Window(Home).Property(videoplayer.mpaa),R)]">R</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),US:NC-17)| String.Contains(Window(Home).Property(videoplayer.mpaa),USA:NC-17)| String.Contains(Window(Home).Property(videoplayer.mpaa),Rated NC-17)]">NC-17</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(videoplayer.mpaa),UK:U)">ALL</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(videoplayer.mpaa),UK:PG)">PG</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(videoplayer.mpaa),UK:12A)">12A</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(videoplayer.mpaa),UK:12)">12</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(videoplayer.mpaa),UK:15)">15</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(videoplayer.mpaa),UK:18)">18</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),Germany:16) | String.Contains(Window(Home).Property(videoplayer.mpaa),ab 16) | String.Contains(Window(Home).Property(videoplayer.mpaa),FSK 16)]">FSK16</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),Germany:6)| String.Contains(Window(Home).Property(videoplayer.mpaa),ab 6) | String.Contains(Window(Home).Property(videoplayer.mpaa),FSK 6)]">FSK6</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),Germany:12) | String.Contains(Window(Home).Property(videoplayer.mpaa),ab 12) | String.Contains(Window(Home).Property(videoplayer.mpaa),FSK 12)]">FSK12</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),Germany:18) | String.Contains(Window(Home).Property(videoplayer.mpaa),ab 18) | String.Contains(Window(Home).Property(videoplayer.mpaa),FSK 18)]">FSK18</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),Germany)|String.Contains(Window(Home).Property(videoplayer.mpaa),FSK)| String.Contains(Window(Home).Property(videoplayer.mpaa),o.A) | String.Contains(Window(Home).Property(videoplayer.mpaa),FSK 0)]">FSK-0</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(videoplayer.mpaa),besorolás alatt)">BA</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(videoplayer.mpaa),korhatárra való tekintett nélkül megtekintetheto)">KN</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(videoplayer.mpaa),12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">12</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(videoplayer.mpaa),16 éven aluliak számára nem ajánlott)">16</value>
        <value condition="$EXP[IsMainMenuOpened] + String.Contains(Window(Home).Property(videoplayer.mpaa),18 éven aluliak számára nem ajánlott)">18</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),France:U) | String.Contains(Window(Home).Property(videoplayer.mpaa),partir de 3 ans) | String.Contains(Window(Home).Property(videoplayer.mpaa),partir de 6 ans)]">CSA-U</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),France:-10) | String.Contains(Window(Home).Property(videoplayer.mpaa),Interdit aux moins de 10 ans) | String.Contains(Window(Home).Property(videoplayer.mpaa),des propos ou des images peuvent heurter)]">CSA-10</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),France:-12) | String.Contains(Window(Home).Property(videoplayer.mpaa),Interdit aux moins de 12 ans)]">CSA12</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),France:-16) | String.Contains(Window(Home).Property(videoplayer.mpaa),Interdit aux moins de 16 ans)]">CSA16</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),France:-18) | String.Contains(Window(Home).Property(videoplayer.mpaa),Interdit aux moins de 18 ans)]">CSA18</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),Brazil:Livre) | String.Contains(Window(Home).Property(videoplayer.mpaa),Livre)]">L</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),Brazil:10) | String.Contains(Window(Home).Property(videoplayer.mpaa),10 anos)]">10</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),Brazil:12) | String.Contains(Window(Home).Property(videoplayer.mpaa),12 anos)]">12</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),Brazil:14) | String.Contains(Window(Home).Property(videoplayer.mpaa),14 anos)]">14</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),Brazil:16) | String.Contains(Window(Home).Property(videoplayer.mpaa),16 anos)]">16</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.Contains(Window(Home).Property(videoplayer.mpaa),Brazil:18) | String.Contains(Window(Home).Property(videoplayer.mpaa),18 anos)]">18</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(videoplayer.mpaa)) + !String.Contains(Window(Home).Property(videoplayer.mpaa),not rated)">$INFO[Window(Home).Property(videoplayer.mpaa)]</value>
		<value condition="!String.IsEmpty(Container(99950).ListItem.Player.MPAA)">$INFO[Container(99950).ListItem.Player.MPAA]</value>
    </variable>

<!-- Resolution Info -->
	<variable name="GetResolution">
		<!--normal-->
		<value condition="ListItem.IsStereoscopic">3D</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,8K) + ![String.IsEqual(Listitem.HdrType,hdr10) | String.IsEqual(Listitem.HdrType,dolbyvision) | String.IsEqual(Listitem.HdrType,hlg)]">Ultra HD 8K</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,8K) + [String.IsEqual(Listitem.HdrType,hdr10) | String.IsEqual(Listitem.HdrType,dolbyvision) | String.IsEqual(Listitem.HdrType,hlg)]">8K HDR</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,4K) + ![String.IsEqual(Listitem.HdrType,hdr10) | String.IsEqual(Listitem.HdrType,dolbyvision) | String.IsEqual(Listitem.HdrType,hlg)]">Ultra HD 4K</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,4K) + [String.IsEqual(Listitem.HdrType,hdr10) | String.IsEqual(Listitem.HdrType,dolbyvision) | String.IsEqual(Listitem.HdrType,hlg)]">4K HDR</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,1080)">FHD</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,720)">HD</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,480) | String.IsEqual(ListItem.VideoResolution,576) | String.IsEqual(ListItem.VideoResolution,540)">SD</value>
		<!--home-->
		<value condition="$EXP[IsMainMenuOpened] + Window(Home).Property(ListItem.IsStereoscopic)">3D</value>
		<value condition="$EXP[IsMainMenuOpened] + String.IsEqual(Window(Home).Property(ListItem.VideoResolution),8K) + [String.IsEqual(Window(Home).Property(Listitem.HdrType),hdr10) | String.IsEqual(Window(Home).Property(Listitem.HdrType),dolbyvision) | String.IsEqual(Window(Home).Property(Listitem.HdrType),hlg)]">Ultra HD 8K</value>
		<value condition="$EXP[IsMainMenuOpened] + String.IsEqual(Window(Home).Property(ListItem.VideoResolution),8K) + [String.IsEqual(Window(Home).Property(Listitem.HdrType),hdr10) | String.IsEqual(Window(Home).Property(Listitem.HdrType),dolbyvision) | String.IsEqual(Window(Home).Property(Listitem.HdrType),hlg)]">8K HDR</value>
		<value condition="$EXP[IsMainMenuOpened] + String.IsEqual(Window(Home).Property(ListItem.VideoResolution),4K) + [String.IsEqual(Window(Home).Property(Listitem.HdrType),hdr10) | String.IsEqual(Window(Home).Property(Listitem.HdrType),dolbyvision) | String.IsEqual(Window(Home).Property(Listitem.HdrType),hlg)]">Ultra HD 4K</value>
		<value condition="$EXP[IsMainMenuOpened] + String.IsEqual(Window(Home).Property(ListItem.VideoResolution),4K) + [String.IsEqual(Window(Home).Property(Listitem.HdrType),hdr10) | String.IsEqual(Window(Home).Property(Listitem.HdrType),dolbyvision) | String.IsEqual(Window(Home).Property(Listitem.HdrType),hlg)]">4K HDR</value>
		<value condition="$EXP[IsMainMenuOpened] + String.IsEqual(Window(Home).Property(ListItem.VideoResolution),1080)">FHD</value>
		<value condition="$EXP[IsMainMenuOpened] + String.IsEqual(Window(Home).Property(ListItem.VideoResolution),720)">HD</value>
		<value condition="$EXP[IsMainMenuOpened] + String.IsEqual(Window(Home).Property(ListItem.VideoResolution),480) | String.IsEqual(Window(Home).Property(ListItem.VideoResolution),576) | String.IsEqual(Window(Home).Property(ListItem.VideoResolution),540)">SD</value>
	</variable>

	<!-- Audio Channels Info (from 5.1 and up) -->
	<variable name="GetAudioChannels">
		<!--normal-->
		<value condition="String.IsEqual(ListItem.AudioChannels,6)">5.1</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,7)">6.1</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,8)">7.1</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,9)">8.1</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,10)">9.1</value>
		<!--home-->
		<value condition="$EXP[IsMainMenuOpened] + String.IsEqual(Window(Home).Property(ListItem.AudioChannels),6)">5.1</value>
		<value condition="$EXP[IsMainMenuOpened] + String.IsEqual(Window(Home).Property(ListItem.AudioChannels),7)">6.1</value>
		<value condition="$EXP[IsMainMenuOpened] + String.IsEqual(Window(Home).Property(ListItem.AudioChannels),8)">7.1</value>
		<value condition="$EXP[IsMainMenuOpened] + String.IsEqual(Window(Home).Property(ListItem.AudioChannels),9)">8.1</value>
		<value condition="$EXP[IsMainMenuOpened] + String.IsEqual(Window(Home).Property(ListItem.AudioChannels),10)">9.1</value>
	</variable>
	
	<variable name="ScreensaverWidget">
        <value condition="!String.IsEmpty(Skin.String(screensaver.titan.bingie.mod.path))">$INFO[Skin.String(screensaver.titan.bingie.mod.path)]</value>
        <value>plugin://script.skin.helper.widgets/?action=randomshowsandmovies&amp;mediatype=media&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
    </variable>

    <!-- bingie home clearlogo -->
    <variable name="BingieInfoClearlogo">
        <value condition="Skin.HasSetting(NoClearLogoBingie)">colors/color_transparent.png</value>
        <!-- normal -->
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(artist.clearlogo))">$INFO[ListItem.Art(artist.clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(albumartist.clearlogo))">$INFO[ListItem.Art(albumartist.clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(ChannelLogo))">$INFO[ListItem.Property(ChannelLogo)]</value>
        <!-- home -->
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Art.tvshow.clearlogo))">$INFO[Window(Home).Property(ListItem.Art.tvshow.clearlogo)]</value>
		<value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Art(artist.clearlogo)))">$INFO[ListItem.Art(artist.clearlogo)]</value>
		<value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Art(albumartist.clearlogo)))">$INFO[ListItem.Art(albumartist.clearlogo)]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.ClearLogo))">$INFO[Window(Home).Property(ListItem.ClearLogo)]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.ChannelLogo))">$INFO[Window(Home).Property(ListItem.ChannelLogo)]</value>
    </variable>

    <variable name="BingieSpotlightBackground">
		<value condition="Control.IsVisible(99008) + !String.IsEmpty(Control.GetLabel(99008))">$INFO[Control.GetLabel(99008)]</value>
        <value condition="!String.IsEmpty(Container(1508).ListItem.Art(season.fanart))">$INFO[Container(1508).ListItem.Art(season.fanart)]</value>
        <value condition="!String.IsEmpty(Container(1508).ListItem.Art(tvshow.fanart))">$INFO[Container(1508).ListItem.Art(tvshow.fanart)]</value>
        <value condition="!String.IsEmpty(Container(1508).ListItem.Art(fanart))">$INFO[Container(1508).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(1508).ListItem.Art(artist.fanart))">$INFO[Container(1508).ListItem.Art(artist.fanart)]</value>
        <value condition="!String.IsEmpty(Container(1508).ListItem.Art(albumartist.fanart))">$INFO[Container(1508).ListItem.Art(albumartist.fanart)]</value>

    </variable>

    <variable name="BingieSpotlightLogo">
        <value condition="Skin.HasSetting(NoClearLogoBingie)">colors/color_transparent.png</value>
        <value condition="!String.IsEmpty(Container(1508).ListItem.Art(tvshow.clearlogo))">$INFO[Container(1508).ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(Container(1508).ListItem.Art(clearlogo))">$INFO[Container(1508).ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(Container(1508).ListItem.Property(ChannelLogo))">$INFO[Container(1508).ListItem.Property(ChannelLogo)]</value>
    </variable>

    <variable name="BingieSpotlightTitle">
        <value condition="!String.IsEmpty(Container(1508).ListItem.TVShowTitle)">$INFO[Container(1508).ListItem.TVShowTitle]</value>
        <value condition="!String.IsEmpty(Container(1508).ListItem.Title)">$INFO[Container(1508).ListItem.Title]</value>
        <value condition="!String.IsEmpty(Container(1508).ListItem.Label)">$INFO[Container(1508).ListItem.Label]</value>
    </variable>

    <variable name="BingieInfoLabel">
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Label)) + [$EXP[IsCategoryDBType] | [!String.IsEmpty(Window(Home).Property(ListItem.StartTime)) | String.StartsWith(Window(Home).Property(ListItem.FolderPath), pvr://)]]">[B]$INFO[Window(Home).Property(ListItem.Label)][/B]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.ChannelName)) + String.Contains(Window(Home).Property(ListItem.ChannelName),unknown) + !String.IsEmpty(Window(Home).Property(ListItem.ChannelNumberLabel))">[B]$INFO[Window(Home).Property(ListItem.ChannelNumberLabel),$LOCALIZE[19029] ,][/B]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.ChannelName))">[B]$INFO[Window(Home).Property(ListItem.ChannelName)][/B]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Episode)) + !String.IsEqual(Window(Home).Property(ListItem.TvShowTitle),Window(Home).Property(ListItem.Title))">[B]$INFO[Window(Home).Property(ListItem.TvShowTitle)][/B]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Artist))">[B]$INFO[Window(Home).Property(ListItem.Artist)][/B]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Title))">[B]$INFO[Window(Home).Property(ListItem.Title)][/B]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(ListItem.Label)">[B]$INFO[Window(Home).Property(ListItem.Label)][/B]</value>

        <value condition="String.IsEqual(ListItem.Property(DBTYPE), systeminfo)">[B]$INFO[ListItem.label][/B] $INFO[ListItem.label2]</value>
        <value condition="!String.IsEmpty(ListItem.ChannelName) + String.Contains(ListItem.ChannelName,unknown) + !String.IsEmpty(ListItem.ChannelNumberLabel)">[B]$INFO[ListItem.ChannelNumberLabel,$LOCALIZE[19029] ,][/B]</value>
        <value condition="!String.IsEmpty(ListItem.ChannelName)">[B]$INFO[ListItem.ChannelName][/B]</value>
        <value condition="!String.IsEmpty(ListItem.Label) + [[!String.IsEmpty(ListItem.StartTime) | String.StartsWith(ListItem.FolderPath, pvr://)] | [Container.Content(genres) | String.IsEqual(ListItem.DBTYPE,genre)] | $EXP[IsCategoryDBType]]">[B]$INFO[ListItem.Label][/B]</value>
        <value condition="!String.IsEmpty(ListItem.Season) + !String.IsEmpty(ListItem.Episode) + !String.IsEqual(ListItem.TvShowTitle,ListItem.Title)">[B]$VAR[TVShowTitle][/B]</value>
        <value condition="!String.IsEmpty(ListItem.Artist)">[B]$INFO[ListItem.Artist][/B]</value>
        <value condition="!String.IsEmpty(ListItem.Title)">[B]$INFO[ListItem.Title][/B]</value>
        <value condition="!String.IsEmpty(ListItem.Label)">[B]$INFO[ListItem.Label][/B]</value>
    </variable>

    <!-- Bingie Sublabel - tagline/watch now/album or song/pvr -->
    <variable name="BingieSublabel">
        <value condition="$EXP[IsTvShowDBTypeNoFallback] + $EXP[IsTVShowInLastEpisodes]">$VAR[GetNewEpisodesTVShowSeason,$LOCALIZE[31070] , $LOCALIZE[31067]]</value>
        <value condition="$EXP[IsMainMenuOpened] + $EXP[IsTvShowDBType] + $EXP[IsTVShowInLastEpisodesBasedOnProps]">$VAR[GetNewEpisodesTVShowSeasonBasedOnProps,$LOCALIZE[31070] , $LOCALIZE[31067]]</value>
        <value condition="$EXP[IsTvShowDBTypeNoFallback] + !String.IsEmpty(ListItem.Property(TotalSeasons)) + !Integer.IsEqual(ListItem.Property(TotalSeasons),0) + !Integer.IsEqual(ListItem.Property(TotalSeasons),1) + String.IsEqual(ListItem.Property(UnWatchedEpisodes),ListItem.Property(TotalEpisodes))">$LOCALIZE[31840]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.TotalSeasons)) + !Integer.IsEqual(Window(Home).Property(ListItem.TotalSeasons),0) + !Integer.IsEqual(Window(Home).Property(ListItem.TotalSeasons),1) + String.IsEqual(Window(Home).Property(ListItem.UnWatchedEpisodes),Window(Home).Property(ListItem.TotalEpisodes))">$LOCALIZE[31840]</value>

        <value condition="[String.IsEqual(ListItem.DBTYPE,album)  | String.IsEqual(Window(Home).Property(ListItem.DBTYPE),album)]">$INFO[ListItem.Album]</value>
        <value condition="!String.IsEmpty(ListItem.Artist)">$INFO[ListItem.TrackNumber,#, ]$INFO[ListItem.Title, ","]$INFO[ListItem.Album, (,)]</value>
        <value condition="String.IsEmpty(ListItem.DBTYPE) + !String.IsEmpty(ListItem.StartTime) + !String.IsEmpty(ListItem.Title)">[B]$INFO[ListItem.Title][/B]</value>
        <value condition="String.IsEmpty(ListItem.DBTYPE) + !String.IsEmpty(ListItem.StartTime) + !String.IsEmpty(ListItem.Label2)">[B]$INFO[ListItem.Label2][/B]</value>
    </variable>

    <variable name="GetNewEpisodesTVShowSeason">
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.Title)">$INFO[Window(Home).Property(LatestEpisode.10.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.Title)">$INFO[Window(Home).Property(LatestEpisode.9.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.Title)">$INFO[Window(Home).Property(LatestEpisode.8.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.Title)">$INFO[Window(Home).Property(LatestEpisode.7.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.Title)">$INFO[Window(Home).Property(LatestEpisode.6.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.Title)">$INFO[Window(Home).Property(LatestEpisode.5.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.Title)">$INFO[Window(Home).Property(LatestEpisode.4.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.Title)">$INFO[Window(Home).Property(LatestEpisode.3.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.Title)">$INFO[Window(Home).Property(LatestEpisode.2.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.Title)">$INFO[Window(Home).Property(LatestEpisode.1.EpisodeSeason)]</value>
    </variable>

    <variable name="GetNewEpisodesTVShowSeasonBasedOnProps">
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.10.ShowTitle),Window(Home).Property(ListItem.Title))">$INFO[Window(Home).Property(LatestEpisode.10.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.9.ShowTitle),Window(Home).Property(ListItem.Title))">$INFO[Window(Home).Property(LatestEpisode.9.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.8.ShowTitle),Window(Home).Property(ListItem.Title))">$INFO[Window(Home).Property(LatestEpisode.8.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.7.ShowTitle),Window(Home).Property(ListItem.Title))">$INFO[Window(Home).Property(LatestEpisode.7.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.6.ShowTitle),Window(Home).Property(ListItem.Title))">$INFO[Window(Home).Property(LatestEpisode.6.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.5.ShowTitle),Window(Home).Property(ListItem.Title))">$INFO[Window(Home).Property(LatestEpisode.5.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.4.ShowTitle),Window(Home).Property(ListItem.Title))">$INFO[Window(Home).Property(LatestEpisode.4.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.3.ShowTitle),Window(Home).Property(ListItem.Title))">$INFO[Window(Home).Property(LatestEpisode.3.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.2.ShowTitle),Window(Home).Property(ListItem.Title))">$INFO[Window(Home).Property(LatestEpisode.2.EpisodeSeason)]</value>
        <value condition="String.IsEqual(Window(Home).Property(LatestEpisode.1.ShowTitle),Window(Home).Property(ListItem.Title))">$INFO[Window(Home).Property(LatestEpisode.1.EpisodeSeason)]</value>
    </variable>

    <variable name="BingiePVRUpNextlabel">
        <value condition="!String.IsEmpty(ListItem.NextTitle) + !String.IsEmpty(ListItem.NextStartTime) + !String.IsEmpty(ListItem.NextEndTime)">[B]$INFO[ListItem.NextTitle][/B]$INFO[ListItem.NextStartTime, (]$INFO[ListItem.NextEndTime, - ,)]</value>
        <value condition="!String.IsEmpty(ListItem.NextTitle) + !String.IsEmpty(ListItem.NextStartTime)">[B]$INFO[ListItem.NextTitle][/B]$INFO[ListItem.NextStartTime, (,)]</value>
        <value>[B]$INFO[ListItem.NextTitle][/B]</value>
    </variable>

    <variable name="BingieSpotlightSublabel">
        <value condition="String.IsEqual(Container(1508).ListItem.DBTYPE,tvshow) + Integer.IsGreater(Container(15081).NumItems,0)">$INFO[Container(15081).ListItem.Season,$LOCALIZE[31070] , $LOCALIZE[31067]]</value>  <!--removed a few [B][/B] for better control of bold use in fonts.xml instead-->
        <value condition="String.IsEqual(Container(1508).ListItem.DBTYPE,episode) + !String.IsEmpty(Container(1508).ListItem.Season) + !String.IsEmpty(Container(1508).ListItem.Episode) +
        !String.IsEmpty(Container(1508).ListItem.Title)">$LOCALIZE[31066] [UPPERCASE]$INFO[Container(1508).ListItem.Season,$LOCALIZE[31871],]$INFO[Container(1508).ListItem.Episode,$LOCALIZE[31872],][/UPPERCASE]$INFO[Container(1508).ListItem.Title, ","] $LOCALIZE[31067]</value>
        <value>$LOCALIZE[31841]</value>
    </variable>

    <variable name="SpotlightTVShowEpisodesPath">
        <value condition="!String.IsEmpty(Container(1508).ListItem.DBID)">videodb://tvshows/titles/$INFO[Container(1508).ListItem.DBID]/-2/</value>
    </variable>

    <variable name="SpotlightLandscapeImage">
        <value condition="!String.IsEmpty(Container(1508).ListItem.Art(tvshow.landscape))">$INFO[Container(1508).ListItem.Art(tvshow.landscape)]</value>
        <value condition="!String.IsEmpty(Container(1508).ListItem.Art(landscape))">$INFO[Container(1508).ListItem.Art(landscape)]</value>
        <value condition="!String.IsEmpty(Container(1508).ListItem.Art(tvshow.fanart))">$INFO[Container(1508).ListItem.Art(tvshow.fanart)]</value>
        <value condition="!String.IsEmpty(Container(1508).ListItem.Art(fanart))">$INFO[Container(1508).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(1508).ListItem.Art(thumb))">$INFO[Container(1508).ListItem.Art(thumb)]</value>
    </variable>
	
	<variable name="SpotlightPosterImage">
        <value condition="!String.IsEmpty(Container(1508).ListItem.Art(tvshow.poster))">$INFO[Container(1508).ListItem.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(Container(1508).ListItem.Art(poster))">$INFO[Container(1508).ListItem.Art(poster)]</value>
    </variable>

    <!-- Bingie More Details (pseudo-random) -->
    <variable name="BingieMoreDetails">		
        <value condition="Integer.IsLessOrEqual(System.Time(ss),15) + !String.IsEmpty(Container(99950).ListItem.Property(Awards))">$INFO[Container(99950).ListItem.Property(Awards)]</value>       
        <value condition="Integer.IsLessOrEqual(System.Time(ss),30) + !String.IsEmpty(Container(99950).ListItem.Director) + !String.IsEmpty(Container(99950).ListItem.Property(cast.1.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.2.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.3.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.4.name)) + $EXP[IsMovieDBType]">$INFO[Container(99950).ListItem.Director,$LOCALIZE[320071] ] $LOCALIZE[320054] $INFO[Container(99950).ListItem.Property(cast.1.name)]$INFO[Container(99950).ListItem.Property(cast.2.name),$COMMA ,]$INFO[Container(99950).ListItem.Property(cast.3.name),$COMMA ,]$INFO[Container(99950).ListItem.Property(cast.4.name), $LOCALIZE[320056] ] $LOCALIZE[320193].</value>	
		<value condition="Integer.IsLessOrEqual(System.Time(ss),30) + !String.IsEmpty(Container(99950).ListItem.Property(Network.1.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.1.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.2.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.3.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.4.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.5.name)) + !$EXP[IsMovieDBType]">$INFO[Container(99950).ListItem.Property(Network.1.name)] $LOCALIZE[320194] $INFO[Container(99950).ListItem.Property(cast.1.name)]$INFO[Container(99950).ListItem.Property(cast.2.name),$COMMA ,]$INFO[Container(99950).ListItem.Property(cast.3.name),$COMMA ,]$INFO[Container(99950).ListItem.Property(cast.4.name),$COMMA ,]$INFO[Container(99950).ListItem.Property(cast.5.name), $LOCALIZE[320056] ] $LOCALIZE[320193].</value>
		<value condition="Integer.IsLessOrEqual(System.Time(ss),45) + !String.IsEmpty(ListItem.Tagline)">$INFO[ListItem.Tagline]</value>
        <value condition="!String.IsEmpty(ListItem.Genre) + Integer.IsLessOrEqual(System.Time(ss),60) + !String.Contains(ListItem.Genre,unknown)">$INFO[ListItem.Genre]</value>
    </variable>
	
    <!-- Bingie More Details Image (pseudo-random) -->
    <variable name="BingieMoreDetailsImage">		
        <value condition="Integer.IsLessOrEqual(System.Time(ss),15) + !String.IsEmpty(Container(99950).ListItem.Property(Awards))">awards</value>       
        <value condition="Integer.IsLessOrEqual(System.Time(ss),30) + !String.IsEmpty(Container(99950).ListItem.Director) + !String.IsEmpty(Container(99950).ListItem.Property(cast.1.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.2.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.3.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.4.name)) + $EXP[IsMovieDBType]">director</value>	
		<value condition="Integer.IsLessOrEqual(System.Time(ss),30) + !String.IsEmpty(Container(99950).ListItem.Property(Network.1.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.1.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.2.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.3.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.4.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.5.name)) + !$EXP[IsMovieDBType]">star</value>
		<value condition="Integer.IsLessOrEqual(System.Time(ss),45) + !String.IsEmpty(ListItem.Tagline)">tags</value>
        <value condition="!String.IsEmpty(ListItem.Genre) + Integer.IsLessOrEqual(System.Time(ss),60) + !String.Contains(ListItem.Genre,unknown)">genre</value>
    </variable>
	
	<!-- Bingie More Details Spotlight(pseudo-random) -->
    <variable name="BingieMoreDetailsSpotlight">		    
        <value condition="Integer.IsLessOrEqual(System.Time(ss),20) + !String.IsEmpty(Container(99950).ListItem.Director) + !String.IsEmpty(Container(99950).ListItem.Property(cast.1.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.2.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.3.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.4.name)) + $EXP[IsMovieDBType]">$INFO[Container(99950).ListItem.Director,$LOCALIZE[320071] ] $LOCALIZE[320054] $INFO[Container(99950).ListItem.Property(cast.1.name)]$INFO[Container(99950).ListItem.Property(cast.2.name),$COMMA ,]$INFO[Container(99950).ListItem.Property(cast.3.name),$COMMA ,]$INFO[Container(99950).ListItem.Property(cast.4.name), $LOCALIZE[320056] ] $LOCALIZE[320193].</value>	
		<value condition="Integer.IsLessOrEqual(System.Time(ss),20) + !String.IsEmpty(Container(99950).ListItem.Property(Network.1.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.1.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.2.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.3.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.4.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.5.name)) + !$EXP[IsMovieDBType]">$INFO[Container(99950).ListItem.Property(Network.1.name)] $LOCALIZE[320194] $INFO[Container(99950).ListItem.Property(cast.1.name)]$INFO[Container(99950).ListItem.Property(cast.2.name),$COMMA ,]$INFO[Container(99950).ListItem.Property(cast.3.name),$COMMA ,]$INFO[Container(99950).ListItem.Property(cast.4.name),$COMMA ,]$INFO[Container(99950).ListItem.Property(cast.5.name), $LOCALIZE[320056] ] $LOCALIZE[320193].</value>
		<value condition="Integer.IsLessOrEqual(System.Time(ss),40) + !String.IsEmpty(ListItem.Tagline)">$INFO[ListItem.Tagline]</value>
        <value condition="!String.IsEmpty(ListItem.Genre) + Integer.IsLessOrEqual(System.Time(ss),60) + !String.Contains(ListItem.Genre,unknown)">$INFO[ListItem.Genre]</value>
    </variable>
	
	<!-- Bingie More Details Image Spotlight (pseudo-random) -->
    <variable name="BingieMoreDetailsImageSpotlight">		
        <value condition="Integer.IsLessOrEqual(System.Time(ss),20) + !String.IsEmpty(Container(99950).ListItem.Director) + !String.IsEmpty(Container(99950).ListItem.Property(cast.1.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.2.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.3.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.4.name)) + $EXP[IsMovieDBType]">director</value>	
		<value condition="Integer.IsLessOrEqual(System.Time(ss),20) + !String.IsEmpty(Container(99950).ListItem.Property(Network.1.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.1.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.2.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.3.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.4.name)) + !String.IsEmpty(Container(99950).ListItem.Property(cast.5.name)) + !$EXP[IsMovieDBType]">star</value>
		<value condition="Integer.IsLessOrEqual(System.Time(ss),40) + !String.IsEmpty(ListItem.Tagline)">tags</value>
        <value condition="!String.IsEmpty(ListItem.Genre) + Integer.IsLessOrEqual(System.Time(ss),60) + !String.Contains(ListItem.Genre,unknown)">genre</value>
    </variable>

    <variable name="BingieEpisodeInfoHeader">
        <value condition="!String.IsEmpty(ListItem.Season) | !String.IsEmpty(ListItem.Episode)">[CAPITALIZE]$INFO[ListItem.Season, $LOCALIZE[36904] ,]$INFO[ListItem.Episode, $LOCALIZE[36906] ,][/CAPITALIZE]</value>
        <value condition="$EXP[IsMainMenuOpened] + [!String.IsEmpty(Window(Home).Property(ListItem.Season)) | !String.IsEmpty(Window(Home).Property(ListItem.Episode))]">[CAPITALIZE]$INFO[Window(Home).Property(ListItem.Season), $LOCALIZE[36904] ,]$INFO[Window(Home).Property(ListItem.Episode), $LOCALIZE[36906] ,][/CAPITALIZE]</value>
    </variable>

    <variable name="BingieEpisodeInfoSubLabel">
        <value condition="[!Skin.HasSetting(MovieDetailsHome) + !String.IsEmpty(ListItem.PercentPlayed) + !Integer.IsGreater(ListItem.PercentPlayed,1)] + Skin.HasSetting(MovieDetailsHome) + !String.IsEmpty(ListItem.Title)
         + [!String.IsEmpty(ListItem.Season) | !String.IsEmpty(ListItem.Episode)]">[CAPITALIZE]$INFO[ListItem.Season,$LOCALIZE[36904] ,]$INFO[ListItem.Episode, $LOCALIZE[36906] ,][/CAPITALIZE][CR]$INFO[ListItem.Title]</value>
        <value condition="[$EXP[IsMainMenuOpened] + !Integer.IsGreater(Window(Home).Property(ListItem.PercentPlayed),1)] + !String.IsEmpty(Window(Home).Property(ListItem.Title)) + [!String.IsEmpty(Window(Home).Property(ListItem.Season)) | !String.IsEmpty(Window(Home).Property(ListItem.Episode))]">[CAPITALIZE]$INFO[Window(Home).Property(ListItem.Season),$LOCALIZE[36904] ,]$INFO[Window(Home).Property(ListItem.Episode), $LOCALIZE[36906] ,][/CAPITALIZE][CR]$INFO[Window(Home).Property(ListItem.Title)]</value>
        <value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Title))">$INFO[Window(Home).Property(ListItem.Title)]</value>
        <value>[CAPITALIZE]$INFO[Window(Home).Property(ListItem.Label)][/CAPITALIZE]</value>
    </variable>

    <!-- 'SxxExx "episode_title"' format-->
    <variable name="BingieDialogEpisodeInfoLabel">
        <value condition="[String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(Container(5050).ListItem.Title) + Skin.HasSetting(ShowEpisodePlotInfoDialog) + !String.IsEmpty(ListItem.DBID)">$INFO[Container(5050).ListItem.Title]</value>
		<value condition="[String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(Container(1234).ListItem.Title) + Skin.HasSetting(ShowEpisodePlotInfoDialog) + Control.IsVisible(1234) + String.IsEqual(ListItem.Path,plugin://plugin.video.themoviedb.helper/) + !Container(1234).IsUpdating + !Integer.IsEqual(Container(1234).NumItems,0)">$INFO[Container(1234).ListItem.Title]</value>
		<value condition="[String.IsEqual(ListItem.DBType,episode) | Container.Content(episodes)] + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
    </variable>

    <variable name="BingieDialogInfoSublabel">
        <value condition="[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(Window(Home).Property(ListItem.dbtype),episode)] | [Skin.HasSetting(ShowEpisodePlotInfoDialog) + Control.IsVisible(5050)]">$VAR[BingieDialogEpisodeInfoLabel]</value>
    </variable>

    <variable name="BingiePlot">
        <!-- spotlight widget (inside container) -->
        <value condition="Skin.HasSetting(WidgetsPreferPlotOutline) + !String.IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.PlotOutline]</value>
        <value condition="$EXP[IsMainMenuOpened] + Skin.HasSetting(WidgetsPreferPlotOutline) + !String.IsEmpty(Window(Home).Property(ListItem.PlotOutline))">$INFO[Window(Home).Property(ListItem.PlotOutline)]</value>

        <value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Plot))">$INFO[ListItem.Property(Plot)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
        <value condition="!String.IsEmpty(ListItem.PictureDesc)">$INFO[ListItem.PictureDesc]</value>
        <value condition="!String.IsEmpty(ListItem.PictureComment)">$INFO[ListItem.PictureComment]</value>
        <value condition="!String.IsEmpty(ListItem.PictureKeywords)">$INFO[ListItem.PictureKeywords]</value>
        <!-- normal widgets info -->
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.PlotOutline)) + Skin.HasSetting(WidgetsPreferPlotOutline)">$INFO[Window(Home).Property(ListItem.PlotOutline)]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Plot))">$INFO[Window(Home).Property(ListItem.Plot)]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Album_Description))">$INFO[Window(Home).Property(ListItem.Album_Description)]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Artist_Description))">$INFO[Window(Home).Property(ListItem.Artist_Description)]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.PictureDesc))">$INFO[Window(Home).Property(ListItem.PictureDesc)]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.PictureComment))">$INFO[Window(Home).Property(ListItem.PictureComment)]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.PictureKeywords))">$INFO[Window(Home).Property(ListItem.PictureKeywords)]</value>
		<value condition="!String.IsEmpty(Container(99950).ListItem.Plot)">$INFO[Container(99950).ListItem.Plot]</value>
    </variable>
	
	<variable name="BingieDialogInfoPlot">
        <!-- spotlight widget (inside container) -->
        <value condition="Skin.HasSetting(WidgetsPreferPlotOutline) + !String.IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.PlotOutline]</value>
        <value condition="$EXP[IsMainMenuOpened] + Skin.HasSetting(WidgetsPreferPlotOutline) + !String.IsEmpty(Window(Home).Property(ListItem.PlotOutline))">$INFO[Window(Home).Property(ListItem.PlotOutline)]</value>

        <value condition="![String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
        <value condition="![String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(ListItem.Property(Plot))">$INFO[ListItem.Property(Plot)]</value>
		<value condition="[String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(Container(5050).ListItem.Plot) + Skin.HasSetting(ShowEpisodePlotInfoDialog) + Control.IsVisible(5050)">$INFO[Container(5050).ListItem.Plot]</value>
        <value condition="[String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(Container(5050).ListItem.Property(Plot)) + Skin.HasSetting(ShowEpisodePlotInfoDialog) + Control.IsVisible(5050)">$INFO[Container(5050).ListItem.Property(Plot)]</value>
		<value condition="[String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(Container(1234).ListItem.Plot) + Skin.HasSetting(ShowEpisodePlotInfoDialog) + Control.IsVisible(1234) + String.IsEqual(ListItem.Path,plugin://plugin.video.themoviedb.helper/) + !Container(1234).IsUpdating + !Integer.IsEqual(Container(1234).NumItems,0)">$INFO[Container(1234).ListItem.Plot]</value>
        <value condition="[String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(Container(1234).ListItem.Property(Plot)) + Skin.HasSetting(ShowEpisodePlotInfoDialog) + Control.IsVisible(1234) + String.IsEqual(ListItem.Path,plugin://plugin.video.themoviedb.helper/) + !Container(1234).IsUpdating + !Integer.IsEqual(Container(1234).NumItems,0)">$INFO[Container(1234).ListItem.Property(Plot)]</value>
		<value condition="[String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
        <value condition="[String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(ListItem.Property(Plot))">$INFO[ListItem.Property(Plot)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
        <value condition="!String.IsEmpty(ListItem.PictureDesc)">$INFO[ListItem.PictureDesc]</value>
        <value condition="!String.IsEmpty(ListItem.PictureComment)">$INFO[ListItem.PictureComment]</value>
        <value condition="!String.IsEmpty(ListItem.PictureKeywords)">$INFO[ListItem.PictureKeywords]</value>
        <!-- normal widgets info -->
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.PlotOutline)) + Skin.HasSetting(WidgetsPreferPlotOutline)">$INFO[Window(Home).Property(ListItem.PlotOutline)]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Plot))">$INFO[Window(Home).Property(ListItem.Plot)]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Album_Description))">$INFO[Window(Home).Property(ListItem.Album_Description)]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Artist_Description))">$INFO[Window(Home).Property(ListItem.Artist_Description)]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.PictureDesc))">$INFO[Window(Home).Property(ListItem.PictureDesc)]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.PictureComment))">$INFO[Window(Home).Property(ListItem.PictureComment)]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.PictureKeywords))">$INFO[Window(Home).Property(ListItem.PictureKeywords)]</value>
		<value condition="!String.IsEmpty(Container(99950).ListItem.Plot)">$INFO[Container(99950).ListItem.Plot]</value>
    </variable>

    <variable name="BingieSpotlightPlot">
        <value condition="Skin.HasSetting(WidgetsPreferPlotOutline) + !String.IsEmpty(Container(1508).ListItem.PlotOutline)">$INFO[Container(1508).ListItem.PlotOutline]</value>
        <value condition="$EXP[IsMainMenuOpened] + Skin.HasSetting(WidgetsPreferPlotOutline) + !String.IsEmpty(Window(Home).Property(ListItem.PlotOutline))">$INFO[Window(Home).Property(ListItem.PlotOutline)]</value>
        <value condition="!String.IsEmpty(Container(1508).ListItem.Plot)">$INFO[Container(1508).ListItem.Plot]</value>
		<value condition="!String.IsEmpty(Container(99950).ListItem.Plot)">$INFO[Container(99950).ListItem.Plot]</value>
    </variable>

    <!-- plot outline prioritized and per-episode plot -->
    <variable name="BingieInfoDialogPlot">
        <value condition="Skin.HasSetting(ShowEpisodePlotInfoDialog) + [String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(Container(5050).ListItem.Plot)">$INFO[Container(5050).ListItem.Plot]</value>
        <!-- contains is a workaround to ignore bad scraped outline plots, should be solved at scraper level -->
        <value condition="!String.IsEmpty(ListItem.PlotOutline) + !String.Contains(ListItem.PlotOutline,$LOCALIZE[20339]: )">$INFO[ListItem.PlotOutline]</value>
        <value>$VAR[Plots]</value>
    </variable>

    <!-- plot outline prioritized for views -->
    <variable name="ViewsPlotWithOutline">
        <value condition="!String.IsEmpty(ListItem.PlotOutline) + Skin.HasSetting(WidgetsPreferPlotOutline) + !String.Contains(ListItem.PlotOutline,$LOCALIZE[20339]: )">$INFO[ListItem.PlotOutline]</value>
        <value>$VAR[Plots]</value>
    </variable>

    <!-- TVShow title & fallback for skin widgets -->
    <variable name="TVShowTitle">
        <value condition="[String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,season)] + !String.IsEmpty(ListItem.TVShowTitle)">$INFO[ListItem.TVShowTitle]</value>
        <value condition="$EXP[IsMainMenuOpened] + [String.IsEqual(Window(Home).Property(ListItem.DBType),episode) | String.IsEqual(Window(Home).Property(ListItem.DBType),season)] + !String.IsEmpty(Window(Home).Property(ListItem.TvShowTitle))">$INFO[Window(Home).Property(ListItem.TvShowTitle)]</value>
        <value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
        <value condition="!String.IsEmpty(ListItem.Label)">$INFO[ListItem.Label]</value>
    </variable>

    <!-- Profile name for widgets 'for you' -->
    <variable name="ForCurrentProfileNameLabel">
        <value condition="!String.IsEqual(System.ProfileName,Master user)">$INFO[System.ProfileName,$LOCALIZE[31862] ,]</value>
        <value>$LOCALIZE[31863]</value>
    </variable>

    <!-- Welcome notification message -->
    <variable name="WelcomeNotificationMsg">
        <value condition="!Skin.HasSetting(BingieFirstStartupDone) | !Skin.HasSetting(BingieSecondStartupDone)">[B]$LOCALIZE[320018][/B]</value>
        <value condition="!String.IsEqual(System.ProfileName,Master user)">$INFO[System.ProfileName,$LOCALIZE[31858][CR][B],[/B]]</value>
        <value>$INFO[System.ProfileName,$LOCALIZE[31858][CR][B],[/B]]</value>
    </variable>

    <variable name="BingieGenreIconVarList">
        <value condition="System.HasAddon(resource.images.moviegenreicons.bingie)">$INFO[ListItem.Label,resource://resource.images.moviegenreicons.bingie/,.jpg]</value>
        <value>$VAR[MovieGenreIconVarList]</value>
    </variable>

    <variable name="CategoriesBricks">
        <value>$INFO[ListItem.Label,bingie/categories/,.png]</value>
    </variable>

    <variable name="CategoriesFanart">
        <value condition="String.IsEqual(ListItem.Label,movies)">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</value>
        <value condition="String.IsEqual(ListItem.Label,tvshows)">$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</value>
        <value condition="String.IsEqual(ListItem.Label,recentlyadded)">$INFO[Window(Home).Property(SkinHelper.RecentVideosBackground)]</value>
    </variable>

    <!-- global background with fade-panel overlay -->
    <include name="GlobalFanartWithOverlay">
        <include>GlobalBackground</include>
        <control type="image">
            <width>100%</width>
            <height>100%</height>
            <texture background="true" colordiffuse="$VAR[BingiePanelColor]">colors/color_white.png</texture>
            <animation effect="fade" start="100" end="$PARAM[overlay_percent]" time="0" condition="true">Conditional</animation>
        </control>
    </include>

    <variable name="WidgetBusySpinnerPath">
        <value condition="System.HasAddon(resource.images.busyspinners.basic) + Skin.String(SkinHelper.WidgetSpinnerTexture.Path)">$INFO[Skin.String(SkinHelper.WidgetSpinnerTexture.Path)]</value>
        <value>spinner/widgets_busy_loader/</value>
    </variable>

    <variable name="DialogBusySpinnerPath">
        <value condition="System.HasAddon(resource.images.busyspinners.basic) + Skin.String(SkinHelper.SpinnerTexture.Path)">$INFO[Skin.String(SkinHelper.SpinnerTexture.Path)]</value>
        <value>spinner/busy_spinner/</value>
    </variable>

    <!-- next up thumb episode/tvshow based on setting preference -->
    <variable name="NextUpThumb">
        <value condition="!String.IsEmpty(Window.Property(fanart)) + Skin.HasSetting(PreferTvShowThumbWidget)">$INFO[Window.Property(thumb)]</value>
        <value condition="!String.IsEmpty(Window.Property(fanart)) + !Skin.HasSetting(PreferTvShowThumbWidget)">$INFO[Window.Property(fanart)]</value>
    </variable>
	
	<!-- BINGIE MENU -->

    <!-- Menu -->
    <include name="BingieSideBladeMainMenu">
        <control type="group" id="9001">
            <visible>![Window.IsActive(virtualkeyboard) + !Window.IsActive(1109)]</visible>
            <include>HideWindowOnStartupAndDialogInfoLoad</include>
            <include content="posx">
                <param name="posx" value="-260" />
            </include>
            <posx>-600</posx>
            <posy>0</posy>
           	<include condition="!Skin.HasSetting(DisableStaticSlimMenu)">No_Circular_Menu_Animations</include>
			<include condition="Skin.HasSetting(DisableStaticSlimMenu)">No_Circular_Menu_AnimationsOriginal</include>

            
		<!-- Logo / user profile button -->
        <control type="group">
                <visible>$EXP[IsMainMenuOpened] + !Skin.HasSetting(Disableprofile)</visible>
                <top>54</top>
				<left>20</left>
                <width>bingie_menu_width</width>
                <height>80</height>
					<!--Profile Picture-->
					<control type="image">
                    <visible>!Skin.HasSetting(EnableNetflixIcons)</visible>					
                        <left>50</left>
                        <top>10</top>
                        <width>50</width>
                        <height>50</height>
                        <texture background="true">$INFO[System.ProfileThumb]</texture>
                    </control>
					<!--Netflix Profile Picture-->
					<control type="image"> 
					    <visible>Skin.HasSetting(EnableNetflixIcons)</visible>
                        <left>50</left>
                        <top>10</top>
                        <width>50</width>
                        <height>50</height>
                        <texture background="true">$INFO[Skin.String(user_picture),userpictures/menu/defaultuser_,.png]</texture>
                    </control>
					<!-- Picture Border --> 
					<control type="button" id="40000">
						<top>6</top>
						<left>46</left>
                        <align>left</align>
                        <width>58</width>
                        <height>58</height>
                        <texturefocus border="10" colordiffuse="$INFO[Skin.String(ViewDetailsBorderFocusColor)]">diffuse/border.png</texturefocus>
                        <texturenofocus/>
                        <onup>noop</onup>
                        <ondown>900</ondown>
                        <onback>ClearProperty(ShowViewSubMenu,Home)</onback>
                        <onback>77777</onback>
                        <onright>ClearProperty(ShowViewSubMenu,Home)</onright>
                        <onright>77777</onright>
                        <onclick>System.LogOff</onclick>
					</control>
					<!-- Profile Name --> 
					<control type="label">
						<visible>!Control.HasFocus(40000)</visible>
						<top>-21</top>
						<label>$INFO[System.ProfileName]</label>
						<textoffsetx>130</textoffsetx>
                        <align>left</align>
                        <width>250</width>
                        <textwidth>250</textwidth>
                        <height>80</height>
                        <font>Reg28</font>
                        <textcolor>$INFO[Skin.String(MainMenuTextColor)]</textcolor>
					</control>
					<control type="label">
						<visible>Control.HasFocus(40000)</visible>
						<top>-21</top>
						<label>$INFO[System.ProfileName]</label>
						<textoffsetx>130</textoffsetx>
                        <align>left</align>
                        <width>250</width>
                        <textwidth>250</textwidth>
                        <height>80</height>
                        <font>Bold28</font>
                        <textcolor>$INFO[Skin.String(MainMenuFocusTextColor)]</textcolor>
					</control>
					<!-- "switch profile" text -->   				
					<control type="label">
                        <label>[CR]$LOCALIZE[31839]</label>
						<top>-3</top>
						<posx>1</posx>
                        <textoffsetx>130</textoffsetx>
                        <align>left</align>
                        <width>250</width>
                        <textwidth>250</textwidth>
                        <height>80</height>
                        <font>reg22</font>
                        <textcolor>$INFO[Skin.String(MainMenuTextColor)]</textcolor>
                    </control> 
		</control>

			<!--Main Menu Items 900-->
            <control type="list" id="900">
                <top>199</top>
				<animation effect="slide" end="0,42" condition="Integer.IsEqual(Container(900).NumItems,7)">Conditional</animation>
				<animation effect="slide" end="0,84" condition="Integer.IsEqual(Container(900).NumItems,6)">Conditional</animation>
				<animation effect="slide" end="0,126" condition="Integer.IsEqual(Container(900).NumItems,5)">Conditional</animation>
				<animation effect="slide" end="0,168" condition="Integer.IsEqual(Container(900).NumItems,4)">Conditional</animation>
				<animation effect="slide" end="0,210" condition="Integer.IsEqual(Container(900).NumItems,3)">Conditional</animation>
				<animation effect="slide" end="0,252" condition="Integer.IsEqual(Container(900).NumItems,2)">Conditional</animation>
				<animation effect="slide" end="0,294" condition="Integer.IsEqual(Container(900).NumItems,1)">Conditional</animation>
				<width>bingie_menu_width</width>
                <height>680</height> <!--default = 680-->
                <orientation>vertical</orientation>
                <itemgap>0</itemgap>
                <onfocus condition="System.HasAlarm(focus_delay)">CancelAlarm(focus_delay,true)</onfocus>
                <onright condition="Integer.IsGreater(Container(4445).NumItems,0)">4444</onright>
                <onright condition="Integer.IsEqual(Container(4445).NumItems,0)">ClearProperty(ShowViewSubMenu,Home)</onright>
                <onright condition="Integer.IsEqual(Container(4445).NumItems,0) + [!Window.IsActive(1109) | !Window.IsActive(1119)]">77777</onright>
                <onright condition="Integer.IsEqual(Container(4445).NumItems,0) + [Window.IsActive(1109) | Window.IsActive(1119)]">SetFocus(9000)</onright>
                <onback>ClearProperty(ShowViewSubMenu,Home)</onback>
                <onback condition="!Window.IsActive(1109)">77777</onback>
				<onback condition="Window.IsActive(1109)">9000</onback>
				<onup condition="Control.IsVisible(40000)">40000</onup>
                <ondown>40003</ondown>
                <itemlayout height="84" width="bingie_menu_width" condition="[Control.HasFocus(900) | Control.HasFocus(4444) | Control.HasFocus(40000) | Control.HasFocus(40003)]">
                    <!--this red line just for slim menu-->
                    <include content="Bingie_Menu_Current_Indicator"> 
                         <param name="keepvisible" value="true" />
                         <param name="visibility" value="$EXP[IsMenuEntryActive] + !$EXP[IsMainMenuOpened]" />
                         <param name="left" value="315" /> 
                     </include> 
					 <!--added to keep the red line stationary on sideblade menu instead of moving with focus-->
						<include content="Bingie_Menu_Current_Indicator"> 
                        <param name="visibility" value="$EXP[IsMainMenuOpened] + $EXP[IsMenuEntryActive]" />
						<param name="left" value="70" />
						</include>
                    <include content="Bingie_Menu_Icon">
                        <param name="includeAnimCond" value="true" />
                    </include>
                    <include content="Bingie_Menu_Label">
                        <param name="textcolor" value="$INFO[Skin.String(MainMenuTextColor)]" />
                    </include>
                </itemlayout>
				<itemlayout height="84" width="bingie_menu_width" condition="![Control.HasFocus(900) | Control.HasFocus(4444) | Control.HasFocus(40000) | Control.HasFocus(40003)]">
                    <!--this red line just for slim menu-->
                    <include content="Bingie_Menu_Current_Indicator"> 
                         <param name="keepvisible" value="true" />
                         <param name="visibility" value="$EXP[IsMenuEntryActive] + !$EXP[IsMainMenuOpened]" />
                         <param name="left" value="315" /> 
                     </include> 
					 <!--added to keep the red line stationary on sideblade menu instead of moving with focus-->
						<include content="Bingie_Menu_Current_Indicator"> 
                        <param name="visibility" value="$EXP[IsMainMenuOpened] + $EXP[IsMenuEntryActive]" />
						<param name="left" value="70" />
						</include>
                    <include content="Bingie_Menu_IconFOCUS">
                        <param name="includeAnimCond" value="true" />
                    </include>
					<include content="Bingie_Menu_Label">
                        <param name="textcolor" value="$INFO[Skin.String(MainMenuTextColor)]" />
                    </include>
                </itemlayout>
                <focusedlayout height="84" width="bingie_menu_width" condition="[Control.HasFocus(900) | Control.HasFocus(4444)]">
                    <include content="Bingie_Menu_IconFOCUS">
                        <param name="includeAnimCond" value="false" />
                    </include>
                    <include>Bingie_Menu_LabelFOCUS</include>
                     <!--Red line under sideblade icons and slim menu-->
                    <include content="Bingie_Menu_Current_Indicator">
                        <param name="visibility" value="$EXP[IsMainMenuOpened] + $EXP[IsMenuEntryActive]" />
						<param name="left" value="70" /> 
                    </include>
                    <!-- home behavior onfocus -->
                    <include>HiddenHomeMenuButton</include>
                </focusedlayout>
				<focusedlayout height="84" width="bingie_menu_width" condition="[Control.HasFocus(40000) | Control.HasFocus(40003)]">
                    <include content="Bingie_Menu_Icon">
                        <param name="includeAnimCond" value="false" />
                    </include>
                    <include>Bingie_Menu_Label</include>
                     <!--Red line under sideblade icons and slim menu-->
                    <include content="Bingie_Menu_Current_Indicator">
                        <param name="visibility" value="$EXP[IsMainMenuOpened] + $EXP[IsMenuEntryActive]" />
						<param name="left" value="70" /> 
                    </include>
                    <!-- home behavior onfocus -->
                    <include>HiddenHomeMenuButton</include>
                </focusedlayout>
                <focusedlayout height="84" width="bingie_menu_width" condition="![Control.HasFocus(900) | Control.HasFocus(4444)]">
					<include content="Bingie_Menu_Current_Indicator"> 
                         <param name="keepvisible" value="true" />
                         <param name="visibility" value="$EXP[IsMenuEntryActive] + !$EXP[IsMainMenuOpened]" />
                         <param name="left" value="315" /> 
                     </include> 
					 <!--added to keep the red line stationary on sideblade menu instead of moving with focus-->
						<include content="Bingie_Menu_Current_Indicator"> 
                        <param name="visibility" value="$EXP[IsMainMenuOpened] + $EXP[IsMenuEntryActive]" />
						<param name="left" value="70" />
						</include>
                    <include content="Bingie_Menu_IconFOCUS">
                        <param name="includeAnimCond" value="true" />
                    </include>
                    <include content="Bingie_Menu_Label">
                        <param name="textcolor" value="$INFO[Skin.String(MainMenuTextColor)]" />
                    </include>
                    <!-- home behavior onfocus -->
                    <include>HiddenHomeMenuButton</include>
                </focusedlayout>
                <include condition="$EXP[IsBingieViewsActive]">MainMenuContent</include>
            </control>

            <!-- PowerMenu Buttons -->
            <control type="list" id="40003">
                <visible>$EXP[IsMainMenuOpened] + !Skin.HasSetting(DisablePowerMenu)</visible>
                <orientation>vertical</orientation>
                <top>924</top>
				<left>18</left>
                <width>359</width>
                <height>115</height>
                <onup>900</onup>
                <ondown>noop</ondown>
                <onright>ClearProperty(ShowViewSubMenu,Home)</onright>
                <onright>77777</onright>
                <onback>ClearProperty(ShowViewSubMenu,Home)</onback>
                <onback>77777</onback>
                <itemlayout width="384" height="55">
                    <include content="BingiePowerMenuItemLabel"></include>
                </itemlayout>
                <focusedlayout width="384" height="55"  condition="Control.HasFocus(40003)">
                    <include content="BingiePowerMenuItemLabelFOCUS"></include>
                </focusedlayout>
				<focusedlayout width="384" height="55"  condition="!Control.HasFocus(40003)">
                    <include content="BingiePowerMenuItemLabel"></include>
                </focusedlayout>
                <content><include>skinshortcuts-group-powermenu</include></content>
            </control>
        </control>
        <include condition="!Skin.HasSetting(DisableAllSubmenus)">SideBladeSubMenu</include>
    </include>

	<!-- Secondary Menu Inside Left Panel -->
    <include name="SideBladeSubMenu">
        <!-- submenu -->
        <control type="group">
            <posx>378</posx>
            <posy>146</posy>
			<animation effect="slide" end="0,42" condition="Integer.IsEqual(Container(900).NumItems,7)">Conditional</animation>
			<animation effect="slide" end="0,84" condition="Integer.IsEqual(Container(900).NumItems,6)">Conditional</animation>
			<animation effect="slide" end="0,126" condition="Integer.IsEqual(Container(900).NumItems,5)">Conditional</animation>
			<animation effect="slide" end="0,168" condition="Integer.IsEqual(Container(900).NumItems,4)">Conditional</animation>
			<animation effect="slide" end="0,210" condition="Integer.IsEqual(Container(900).NumItems,3)">Conditional</animation>
			<animation effect="slide" end="0,252" condition="Integer.IsEqual(Container(900).NumItems,2)">Conditional</animation>
			<animation effect="slide" end="0,294" condition="Integer.IsEqual(Container(900).NumItems,1)">Conditional</animation>
            <animation type="Conditional" condition="Control.IsVisible(4444)">
                <effect type="slide" start="-10" end="0" time="200" delay="0" tween="cubic" easing="inout"/>
            </animation>
            <animation type="Conditional" condition="String.IsEmpty(Window(Home).Property(ShowViewSubMenu))">
                <effect type="slide" start="0" end="-800" time="0" delay="0" />
            </animation>
            <animation type="Conditional" condition="!Control.IsVisible(4444)">
                <effect type="fade" start="100" end="0" time="150" delay="0" />
            </animation>
            <animation type="Conditional" condition="!Control.IsVisible(4444)">
                <effect type="slide" start="0" end="-300" time="5" delay="145" />
            </animation>
            <animation type="Conditional" condition="Integer.IsGreater(Container(900).Position,0)">
                <effect type="slide" end="0,85" time="0" delay="0" />
            </animation>
            <animation type="Conditional" condition="Integer.IsGreater(Container(900).Position,1)">
                <effect type="slide" end="0,85" time="0" delay="0" />
            </animation>
            <animation type="Conditional" condition="Integer.IsGreater(Container(900).Position,2)">
                <effect type="slide" end="0,85" time="0" delay="0" />
            </animation>
            <animation type="Conditional" condition="Integer.IsGreater(Container(900).Position,3)">
                <effect type="slide" end="0,85" time="0" delay="0" />
            </animation>
            <animation type="Conditional" condition="Integer.IsGreater(Container(900).Position,4)">
                <effect type="slide" end="0,85" time="0" delay="0" />
            </animation>

            <!--Panel on Home (submenu Panel) -->
            <control type="list" id="4444">
                <posx>110</posx>
				<posy>72</posy>
                <visible allowhiddenfocus="true">[String.IsEqual(Window(Home).Property(submenu),show) | Control.HasFocus(4444)] + Integer.IsGreater(Container(4445).NumItems,0)</visible>
                <width>450</width>
                <height>250</height>
                <itemgap>3</itemgap>
                <focusposition>0</focusposition>
                <movement>3</movement>
                <onleft>900</onleft>
                <onleft condition="!Skin.HasSetting(AutoShowSubmenu)">ClearProperty(submenu,Home)</onleft>
                <onright>ClearProperty(submenu,Home)</onright>
                <onright condition="Window.IsActive(1109)">9000</onright>
                <onright condition="!Window.IsActive(1109) | !Window.IsActive(1119)">77777</onright>
                <onright>ClearProperty(ShowViewSubMenu,Home)</onright>
                <onup>4444</onup>
                <ondown>4444</ondown>
                <onback>900</onback>
                <onback condition="!Skin.HasSetting(AutoShowSubmenu)">ClearProperty(submenu,Home)</onback>
                <itemlayout width="360" height="50">
                    <include content="Bingie_Submenu_Label"></include>
                </itemlayout>
                <focusedlayout width="360" height="50" condition="!Control.HasFocus(900)">
				
                    <include content="Bingie_Submenu_LabelFOCUS"></include>
                    <control type="button">
                        <label/>
                        <visible>false</visible>
                        <onfocus>SetProperty(submenu,show,Home)</onfocus>
					</control>
                </focusedlayout>
				<focusedlayout width="360" height="50" condition="Control.HasFocus(900)">				
                    <include content="Bingie_Submenu_Label"></include>
                    <control type="button">
                        <label/>
                        <visible>false</visible>
                        <onfocus>SetProperty(submenu,show,Home)</onfocus>
					</control>
                </focusedlayout>
                <content>
                    <include condition="!Skin.HasSetting(DisableAllSubmenus)">skinshortcuts-submenu</include>
                </content>
            </control>
        </control>
    </include>
	<!-- Bingie Menu  Indicator - Red line Under Menu Icons-->
    <include name="Bingie_Menu_Current_Indicator">
        <param name="keepvisible" default="false" />
        <definition>
            <control type="image">
                <visible>$PARAM[visibility]</visible>
                <left>$PARAM[left]</left>
                <width>25</width>
                <bottom>17</bottom>
				<height>-7</height>
                <texture>diffuse/panel2.png</texture>
                <colordiffuse>$INFO[Skin.String(LineUnderMenuIconsColor)]</colordiffuse>
                <aspectratio>stretch</aspectratio>
                <animation effect="fade" start="0" end="100" delay="200" time="150">Visible</animation>
            </control>
        </definition>
    </include>

	<!-- Menu Includes -->
    <include name="Bingie_Submenu_Label">
        <control type="label">
            <posx>10</posx>
            <width>400</width>
            <align>left</align>
            <font>Reg30</font>
            <height>50</height>
            <textcolor>$INFO[Skin.String(MainMenuTextColor)]</textcolor>
            <label>$INFO[ListItem.Label]</label>
            <scroll>true</scroll>
        </control>
    </include>

    <include name="BingiePowerMenuItemLabel">
        <control type="label">
            <width>384</width>
            <height>55</height>
            <textoffsetx>50</textoffsetx>
            <align>left</align>
            <aligny>center</aligny>
            <font>Reg24</font>
            <label>$INFO[ListItem.Label]</label>
            <textcolor>$INFO[Skin.String(MainMenuTextColor)]</textcolor>
        </control>
    </include>

	<!-- Bingie Menu Icons -->
    <include name="Bingie_Menu_Icon">
        <control type="group">
            <include condition="$PARAM[includeAnimCond]">Bingie_Menu_Icon_Anim</include>
            <left>70</left>
            <height>100%</height>
            <top>35</top>
            <control type="image">
                <include>Bingie_Menu_Icon_Defs</include>
                <colordiffuse>$INFO[Skin.String(MainMenuButtonColor)]</colordiffuse>
            </control>
        </control>
    </include>
	<include name="Bingie_Menu_IconFOCUS">
        <control type="group">
            <include condition="$PARAM[includeAnimCond]">Bingie_Menu_Icon_Anim</include>
            <left>70</left>
            <height>100%</height>
            <top>35</top>
            <control type="image">
                <include>Bingie_Menu_Icon_Defs</include>
                <colordiffuse>$INFO[Skin.String(MainMenuFocusButtonColor)]</colordiffuse>
            </control>
        </control>
    </include>
    <include name="Bingie_Menu_Icon_Anim">
        <animation effect="slide" start="0" end="245" time="0" condition="!$EXP[IsMainMenuOpened]">Conditional</animation>
    </include>

    <include name="Bingie_Menu_Icon_Defs">
        <width>25</width>
        <height>25</height>
        <texture background="true">$INFO[ListItem.Icon]</texture>
    </include>

    <include name="Bingie_Menu_Label_Defs">
        <width>350</width>
        <height>92</height>
        <align>left</align>
        <left>150</left>
        <aligny>center</aligny>
        <font>Reg34</font>
		<textcolor>$INFO[Skin.String(MainMenuTextColor)]</textcolor>
        <label>$INFO[ListItem.Label]</label>
        <animation effect="fade" start="100" end="0" time="300" condition="!$EXP[IsMainMenuOpened]">Conditional</animation>
    </include>

    <include name="Bingie_Menu_Label">
        <control type="label">
            <include>Bingie_Menu_Label_Defs</include>
        </control>
    </include>

    <include name="No_Circular_Left">
        <include content="left">
            <param name="left" value="bingie_no_circular_posx"/>
        </include>
    </include>

<!--Side Menu Icon Names on Focus-->
 <include name="Bingie_Menu_LabelFOCUS">
        <control type="label">
        <width>350</width>
        <height>92</height>
        <align>left</align>
        <left>152</left>
		<aligny>center</aligny>
        <font>Bold34</font>
		<textcolor>$INFO[Skin.String(MainMenuFocusTextColor)]</textcolor>
        <label>$INFO[ListItem.Label]</label>
        <animation effect="fade" start="100" end="0" time="300" condition="!$EXP[IsMainMenuOpened]">Conditional</animation>
		</control>
    </include>
			
	<include name="Bingie_Submenu_LabelFOCUS">
        <control type="label">
            <posx>12</posx>
            <width>400</width>
            <align>left</align>
            <font>Bold30</font>
            <height>50</height>
            <textcolor>$INFO[Skin.String(MainMenuFocusTextColor)]</textcolor>
            <label>$INFO[ListItem.Label]</label>
            <scroll>true</scroll>
        </control>
    </include>
	
	<include name="BingiePowerMenuItemLabelFOCUS">
        <control type="label">
            <width>384</width>
            <height>55</height>
            <textoffsetx>52</textoffsetx>
            <align>left</align>
            <aligny>center</aligny>
            <font>Bold24</font>
            <label>$INFO[ListItem.Label]</label>
            <textcolor>$INFO[Skin.String(MainMenuFocusTextColor)]</textcolor>
        </control>
    </include>

<!-- Bingie Elements / Footer on Home Transparent-->
    <include name="Bingie_Footer">
        <control type="group">
            <animation effect="slide" end="0,283" time="300" condition="$EXP[IsCurrentWidgetSpotlight]">Conditional</animation>
            <top>520</top>
            <width>100%</width>
			<visible>!$EXP[IsMainMenuOpened]</visible>
			
			<!-- New Footer on HOME -->
			<control type="group">
				<include content="right" condition="$EXP[IsBingieCategoriesActive]">
                <param name="right" value="130" />
                </include>
				<right>14</right>
                <height></height>
                <width></width>
				<top>-30</top>
				<include>new_footer</include>
			</control>
		</control>
	</include>
	
<!-- Left Panel Behind Icons/Over Movie Poster -->
    <include name="Bingie_Left_Gradient">
        <control type="image">
            <bottom>0</bottom>
            <left>0</left>
            <height>100%</height>
            <width>130</width>
            <aspectratio scalediffuse="true">scale</aspectratio>
            <texture border="2" background="true">bingie/sidediffuse.png</texture>
            <colordiffuse>ff000000</colordiffuse>  
			<!-- Never Change or Remove / It will give everything a Grey Effect on Screen. It's very Hard to see on Smaller TV but Very Noticable on a Larger One -->
			<visible>!$EXP[IsRecognizedVideoContent] + !$EXP[IsCurrentWidgetSpotlight]</visible>
		</control>
    </include>

<!-- Bingie Fixed Position Frame Elements -->
    <!-- fixed border moving with screen -->
    <include name="Bingie_Screens_Fixed_Focus_Frame_Base">
        <control type="image">
            <nested />
            <visible>$PARAM[visibility]</visible>
            <top>611</top>
            <include>No_Circular_Left</include>
            <left>0</left>
            <width>$PARAM[width]</width>
            <height>$PARAM[height]</height>
            <texture background="true" border="-4">$PARAM[texture]</texture>
            <bordersize>2</bordersize>
            <colordiffuse>$INFO[Skin.String(ViewDetailsBorderFocusColor)]</colordiffuse>
        </control>
    </include>
	
	<include name="Bingie_Screens_Fixed_Focus_Frame_Highlight">
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base">
            <param name="visibility" value="String.IsEqual(window(home).Property(widgetstyle),highlight) + String.IsEqual(Window(home).property(highlightfocus),Container($PARAM[widgetid]).CurrentItem) + ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + !$EXP[IsCurrentWidgetSpotlight]"/>
            <param name="width" value="361" />
            <param name="height" value="720" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
	</include>
	
	<include name="Bingie_Screens_Fixed_Focus_Frame_Highlight_2">
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base">
            <param name="visibility" value="String.IsEqual(window(home).Property(widgetstyle),highlight) + ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + !$EXP[IsCurrentWidgetSpotlight]"/>
            <param name="width" value="361" />
            <param name="height" value="720" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
	</include>
	
    <include name="Bingie_Screens_Fixed_Focus_Frame">
		<!-- Landscape Fixed Frame -->
        <include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscape)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + 
			!String.IsEqual(window(home).Property(widgetstyle),poster) + !String.IsEqual(window(home).Property(widgetstyle),smallposter) + !String.IsEqual(window(home).Property(widgetstyle),landscapesmall) + !String.IsEqual(window(home).Property(widgetstyle),landscapelarge) +
			!String.IsEqual(window(home).Property(widgetstyle),square) + !String.IsEqual(window(home).Property(widgetstyle),banner) + !String.IsEqual(window(home).Property(widgetstyle),landscapedetails) + !String.IsEqual(window(home).Property(widgetstyle),posterdetails) +
			![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)]"/>
            <param name="width" value="landscape_width"/>
            <param name="height" value="210"/>
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscape)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),poster)"/>
            <param name="width" value="240" />
            <param name="height" value="330" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscape)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),smallposter)"/>
            <param name="width" value="177" />
            <param name="height" value="240" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscape)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),landscapesmall)"/>
            <param name="width" value="250" />
            <param name="height" value="148" />
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscape)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),landscapelarge)"/>
             <param name="width" value="430" />
            <param name="height" value="248" />
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscape)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),square)"/>
            <param name="width" value="240" />
            <param name="height" value="240" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<!-- Landscape Small Fixed Frame -->
        <include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscapesmall)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + 
			!String.IsEqual(window(home).Property(widgetstyle),poster) + !String.IsEqual(window(home).Property(widgetstyle),smallposter) + !String.IsEqual(window(home).Property(widgetstyle),landscape) + !String.IsEqual(window(home).Property(widgetstyle),landscapelarge) +
			!String.IsEqual(window(home).Property(widgetstyle),square) + !String.IsEqual(window(home).Property(widgetstyle),banner) + !String.IsEqual(window(home).Property(widgetstyle),landscapedetails) + !String.IsEqual(window(home).Property(widgetstyle),posterdetails) +
			![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)]"/>
            <param name="width" value="250" />
            <param name="height" value="148" />
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscapesmall)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),poster)"/>
            <param name="width" value="240" />
            <param name="height" value="330" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscapesmall)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),smallposter)"/>
            <param name="width" value="177" />
            <param name="height" value="240" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscapesmall)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),landscape)"/>
            <param name="width" value="landscape_width"/>
            <param name="height" value="210"/>
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscapesmall)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),landscapelarge)"/>
            <param name="width" value="430" />
            <param name="height" value="248" />
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscapesmall)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),square)"/>
            <param name="width" value="240" />
            <param name="height" value="240" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<!-- Landscape Large Fixed Frame -->
        <include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscapelarge)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + 
			!String.IsEqual(window(home).Property(widgetstyle),poster) + !String.IsEqual(window(home).Property(widgetstyle),smallposter) + !String.IsEqual(window(home).Property(widgetstyle),landscape) + !String.IsEqual(window(home).Property(widgetstyle),landscapesmall) +
			!String.IsEqual(window(home).Property(widgetstyle),square) + !String.IsEqual(window(home).Property(widgetstyle),banner) + !String.IsEqual(window(home).Property(widgetstyle),landscapedetails) + !String.IsEqual(window(home).Property(widgetstyle),posterdetails) +
			![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)]"/>
            <param name="width" value="430" />
            <param name="height" value="248" />
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscapelarge)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),poster)"/>
            <param name="width" value="240" />
            <param name="height" value="330" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscapelarge)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),smallposter)"/>
            <param name="width" value="177" />
            <param name="height" value="240" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscapelarge)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),landscape)"/>
            <param name="width" value="landscape_width"/>
            <param name="height" value="210"/>
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscapelarge)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),landscapesmall)"/>
            <param name="width" value="250" />
            <param name="height" value="148" />
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),landscapelarge)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),square)"/>
            <param name="width" value="240" />
            <param name="height" value="240" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<!-- Poster Fixed Frame -->
        <include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),poster)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + 
			!String.IsEqual(window(home).Property(widgetstyle),landscape) + !String.IsEqual(window(home).Property(widgetstyle),smallposter) + !String.IsEqual(window(home).Property(widgetstyle),landscapesmall) + !String.IsEqual(window(home).Property(widgetstyle),landscapelarge) +
			!String.IsEqual(window(home).Property(widgetstyle),square) + !String.IsEqual(window(home).Property(widgetstyle),banner) + !String.IsEqual(window(home).Property(widgetstyle),landscapedetails) + !String.IsEqual(window(home).Property(widgetstyle),posterdetails) +
			![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)]"/>
            <param name="width" value="240" />
            <param name="height" value="330" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),poster)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),landscape)"/>
            <param name="width" value="landscape_width"/>
            <param name="height" value="210"/>
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),poster)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),smallposter)"/>
            <param name="width" value="177" />
            <param name="height" value="240" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),poster)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),landscapesmall)"/>
            <param name="width" value="250" />
            <param name="height" value="148" />
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),poster)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),landscapelarge)"/>
             <param name="width" value="430" />
            <param name="height" value="248" />
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),poster)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),square)"/>
            <param name="width" value="240" />
            <param name="height" value="240" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<!-- Small Poster Fixed Frame -->
        <include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),smallposter)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + 
			!String.IsEqual(window(home).Property(widgetstyle),landscape) + !String.IsEqual(window(home).Property(widgetstyle),poster) + !String.IsEqual(window(home).Property(widgetstyle),landscapesmall) + !String.IsEqual(window(home).Property(widgetstyle),landscapelarge) +
			!String.IsEqual(window(home).Property(widgetstyle),square) + !String.IsEqual(window(home).Property(widgetstyle),banner) + !String.IsEqual(window(home).Property(widgetstyle),landscapedetails) + !String.IsEqual(window(home).Property(widgetstyle),posterdetails) +
			![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)]"/>
            <param name="width" value="177" />
            <param name="height" value="240" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),smallposter)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),landscape)"/>
            <param name="width" value="landscape_width"/>
            <param name="height" value="210"/>
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),smallposter)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),poster)"/>
            <param name="width" value="240" />
            <param name="height" value="330" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),smallposter)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),landscapesmall)"/>
            <param name="width" value="250" />
            <param name="height" value="148" />
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),smallposter)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),landscapelarge)"/>
             <param name="width" value="430" />
            <param name="height" value="248" />
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),smallposter)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),square)"/>
            <param name="width" value="240" />
            <param name="height" value="240" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<!-- Square Fixed Frame -->
        <include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),square)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + 
			!String.IsEqual(window(home).Property(widgetstyle),landscape) + !String.IsEqual(window(home).Property(widgetstyle),poster) + !String.IsEqual(window(home).Property(widgetstyle),smallposter) + !String.IsEqual(window(home).Property(widgetstyle),landscapesmall) + !String.IsEqual(window(home).Property(widgetstyle),landscapelarge) +
			!String.IsEqual(window(home).Property(widgetstyle),banner) + !String.IsEqual(window(home).Property(widgetstyle),landscapedetails) + !String.IsEqual(window(home).Property(widgetstyle),posterdetails) +
			![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)]"/>
            <param name="width" value="240" />
            <param name="height" value="240" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),square)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),landscape)"/>
            <param name="width" value="landscape_width"/>
            <param name="height" value="210"/>
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),square)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),poster)"/>
            <param name="width" value="240" />
            <param name="height" value="330" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),square)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),smallposter)"/>
            <param name="width" value="177" />
            <param name="height" value="240" />
            <texture background="true" border="12">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),square)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),landscapesmall)"/>
            <param name="width" value="250" />
            <param name="height" value="148" />
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
		<include content="Bingie_Screens_Fixed_Focus_Frame_Base" condition="String.IsEqual(Skin.String(widgetstyle),square)">
            <param name="visibility" value="ControlGroup(77777).HasFocus() + !String.IsEmpty(Container(77777).CurrentItem) + !String.IsEmpty(ListItem.Label) + ![$EXP[IsCurrentWidgetSpotlight] | String.IsEqual(window(home).Property(widgetstyle),highlight)] + String.IsEqual(window(home).Property(widgetstyle),landscapelarge)"/>
             <param name="width" value="430" />
            <param name="height" value="248" />
            <texture background="true" border="10">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</texture>
        </include>
    </include>

    <variable name="FixedFrameTexture">
        <value condition="String.Contains(Skin.String(widgetstyle), landscape) | $EXP[IsBingieListsActive]">$INFO[Skin.String(thumbsborder_focused),bingie/border/thumb_fo_,.png]</value>
        <value condition="String.Contains(Skin.String(widgetstyle), poster)">$INFO[Skin.String(thumbsborder_focused),bingie/border/poster_fo_,.png]</value>
    </variable>

    <!-- fixed focus bottom override value -->
    <include name="Fixed_Focus_Bottom">
        <bottom>-100000</bottom>
    </include>

    <!-- fixed focus gap override value -->
    <include name="Fixed_Focus_Itemgap">
        <itemgap>0</itemgap>
    </include>

<!-- BINGIE SPOTLIGHT -->
    <!-- bingie spotlight widget -->
    <include name="BingieSpotlightWidget">
        <control type="list" id="$PARAM[widgetid]">
            <visible>Container($PARAM[widgetid]).IsUpdating + Control.IsVisible($PARAM[widgetid]) | Integer.IsGreater(Container($PARAM[widgetid]).NumItems,0)</visible>
            <orientation>horizontal</orientation>
            <height>250</height> <!--Spotlight widget height. Moving this changes widget height in includeshomebingie.xml!-->
            <preloaditems>1</preloaditems>
            <include content="SetFixedVerticalNavigationProps">
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
            <onright condition="String.IsEmpty(Window(Home).Property(spotlightinfo))">SetProperty(spotlightinfo,1,Home)</onright>
            <onleft condition="!String.IsEmpty(Window(Home).Property(spotlightinfo))">ClearProperty(spotlightinfo,Home)</onleft>
            <onleft condition="String.IsEmpty(Window(Home).Property(spotlightinfo)) + $EXP[IsPlayingUnrecognizedContent]">SetProperty(KeepPlayingPreview,1,Home)</onleft>
            <onleft condition="String.IsEmpty(Window(Home).Property(spotlightinfo))">900</onleft>
            <onunfocus>ClearProperty(spotlightinfo,home)</onunfocus>
			<onfocus>SetProperty(FullImage,1,Home)</onfocus>
			<onunfocus>ClearProperty(FullImage,home)</onunfocus>
            <onback condition="$EXP[IsPlayingUnrecognizedContent]">SetProperty(KeepPlayingPreview,1,Home)</onback>
            <onback>900</onback>

			<onclick condition="String.IsEmpty(Window(Home).Property(FullImage))">SetProperty(FullImage,1,Home)</onclick>
            <onclick condition="!String.IsEmpty(Window(Home).Property(spotlightinfo))">Action(info)</onclick>
            <onclick condition="String.IsEmpty(Window(Home).Property(spotlightinfo)) + !String.IsEqual(Container($PARAM[widgetid]).ListItem.DBType,tvshow)">PlayMedia($ESCINFO[Container($PARAM[widgetid]).ListItem.FileNameAndPath],resume)</onclick>
            <onclick condition="String.IsEmpty(Window(Home).Property(spotlightinfo)) + !String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID) + String.IsEqual(Container($PARAM[widgetid]).ListItem.DBType,tvshow)">SetProperty(ListItem.TVShowID,$INFO[Container($PARAM[widgetid]).ListItem.DBID],Home)</onclick>
            <onclick condition="String.IsEmpty(Window(Home).Property(spotlightinfo)) + !String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID) + String.IsEqual(Container($PARAM[widgetid]).ListItem.DBType,tvshow)">SetProperty(KeepTVShowID,1,Home)</onclick>
            <onclick condition="String.IsEmpty(Window(Home).Property(spotlightinfo)) + !String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID) + String.IsEqual(Container($PARAM[widgetid]).ListItem.DBType,tvshow)">ActivateWindow(Videos,videodb://tvshows/titles/$INFO[Container($PARAM[widgetid]).ListItem.DBID]/-2/,return)</onclick>
            <onclick condition="String.IsEmpty(Window(Home).Property(spotlightinfo)) + String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID) + String.IsEqual(Container($PARAM[widgetid]).ListItem.DBType,tvshow)">ActivateWindow(Videos,$ESCINFO[Container($PARAM[widgetid]).ListItem.FileNameAndPath],return)</onclick>
            
			<!-- HOME SPOTLIGHT SCROLLING -->
            <itemlayout width="1920" height="210"></itemlayout>
            <focusedlayout width="1920" height="210">
                <include content="HiddenWidgetButton">
                    <param name="widgetstyle" value="spotlight" />
                    <param name="widgetid" value="$PARAM[widgetid]" />
                    <param name="widget" value="Spotlight" />
                </include>
            </focusedlayout>
            <content target="videos" limit="1">$VAR[BingieHomeSpotlightWidgetContent]</content>
        </control>
    </include>
    <!-- SPOTLIGHT LOADING SPINNER -->
    <include name="SpotlightLoadingSpinner">
        <param name="spotlightid" default="1508" />
        <definition>
            <control type="grouplist">
                <visible>$PARAM[visibility]</visible>
                <visible>Container($PARAM[spotlightid]).IsUpdating + Integer.IsEqual(Container($PARAM[spotlightid]).NumItems,0)</visible>
                <orientation>horizontal</orientation>
                <left>141</left>
                <top>23</top>
                <width>500</width>
                <height>60</height>
                <itemgap>20</itemgap>
                <control type="multiimage">
                    <width>25</width>
                    <height>25</height>
                    <aspectratio>keep</aspectratio>
                    <imagepath>$VAR[WidgetBusySpinnerPath]</imagepath>
                    <timeperimage>85</timeperimage>
                    <colordiffuse>$INFO[Skin.String(WidgetSpinnerTexture.Color)]</colordiffuse>
                    <fadetime>0</fadetime>
                </control>
                <control type="label">
                    <height>60</height>
                    <aligny>top</aligny>
                    <width>420</width>
                    <label>[B]$LOCALIZE[31185]...[/B]</label>
                    <font>Light22</font>
                    <textcolor>$INFO[Skin.String(BingieHeaderTextColor)]</textcolor>
                </control>
            </control>
        </definition>
    </include>

<!-- Spotlight Buttons Bingie Home-->
    <include name="Spotlight_Buttons">
        <param name="spotlightid" default="1508"/>
        <param name="top" default="0" />
        <definition>
		<control type="group">
			<width>800</width>
            <height>74</height>
            <control type="grouplist">
                <visible>Control.IsVisible($PARAM[spotlightid]) + Integer.IsGreater(Container($PARAM[spotlightid]).NumItems,0)</visible>
                <visible>Control.HasFocus($PARAM[spotlightid]) | String.IsEqual(Container(77777).Position,0)</visible>
                <orientation>horizontal</orientation>
                <top>$PARAM[top]</top>
                <width>800</width>
                <height>64</height>
				<left>1</left>
                <itemgap>25</itemgap>
                <control type="button">
          <!-- PLAY Button Panel width -->
					<description>Play</description>
                    <height>100%</height>
                    <width>auto</width>
                    <textoffsetx>28</textoffsetx>
                    <textwidth>auto</textwidth>
                    <align>left</align>
                    <textcolor>$VAR[SpotlightPlayTextButtonColor]</textcolor>
                    <texturenofocus colordiffuse="$VAR[SpotlightPlayButtonColor]" border="10">diffuse/panel-spot.png</texturenofocus> 
                    <font>Reg30</font>
                    <label>[CAPITALIZE][B]      $LOCALIZE[208][/B][/CAPITALIZE]</label>
                </control>
                <!-- Info Button Panel width -->
				<control type="button">
                    <width>auto</width>
                    <height>100%</height>
                    <align>center</align>
					<textwidth>auto</textwidth> 
					<textoffsetx>28</textoffsetx>
                    <textcolor>$VAR[SpotlightInfoTextButtonColor]</textcolor>
                    <texturenofocus colordiffuse="$VAR[SpotlightInfoButtonColor]" border="10">diffuse/panel-spot.png</texturenofocus>
					<font>Reg30</font>
                    <label>[B]$LOCALIZE[31838][/B]</label>
                </control>
            </control>
			<control type="image">
			<posx>30</posx>
			<posy>30</posy>
            <width>24</width>
            <height>24</height>
			<texture colordiffuse="$VAR[SpotlightPlayTextButtonColor]">dialogs/videoinfo/info/play.png</texture>
			</control>
		</control>
        </definition>
    </include>

    <!-- Play Button Spotlight Color -->
    <variable name="SpotlightPlayButtonColor">
        <value condition="!String.IsEmpty(Window(Home).Property(spotlightinfo))">cc707070</value>
        <value>ffffffff</value>
    </variable>
    <!-- Spotlight Info Button Color -->
	<variable name="SpotlightInfoButtonColor">
        <value condition="!String.IsEmpty(Window(Home).Property(spotlightinfo))">ffffffff</value>
        <value>cc707070</value>
    </variable>
    <!-- Spotlight Play Text Button Color -->
    <variable name="SpotlightPlayTextButtonColor">
        <value condition="!String.IsEmpty(Window(Home).Property(spotlightinfo))">ffffffff</value>
        <value>ff000000</value>
    </variable>
    <!-- Spotlight Info Text Button Color -->
	<variable name="SpotlightInfoTextButtonColor">
        <value condition="String.IsEmpty(Window(Home).Property(spotlightinfo))">ffffffff</value>
        <value>ff000000</value>
    </variable>
	<!-- Logon Button Color -->
	<variable name="LogonColor">
        <value condition="Control.HasFocus(10034)">ff000000</value>
        <value condition="!Control.HasFocus(10034)">ffffffff</value>
    </variable>

    <!-- Bingie Spotlight Content -->
    <variable name="BingieHomeSpotlightWidgetContent">
        <!-- home -->
        <!-- custom home spotlight -->
        <value condition="Window.IsActive(Home) + !String.IsEmpty(Skin.String(spotlighthome.path))">$INFO[Skin.String(spotlighthome.path)]</value>
        <value condition="Window.IsActive(Home) + Skin.HasSetting(SimilarContentSpotlight)">plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=media&amp;limit=5&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</value>
        <value condition="Window.IsActive(Home)">plugin://script.skin.helper.widgets/?action=randomshowsandmovies&amp;mediatype=media&amp;limit=5&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</value>
        <!-- movies hub -->
        <value condition="Window.IsActive(1111) + !String.IsEmpty(Skin.String(spotlightmovies.path))">$INFO[Skin.String(spotlightmovies.path)]</value>
        <value condition="Window.IsActive(1111) + Skin.String(spotlightmovies.label, default)">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=movies&amp;limit=5&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</value>
        <value condition="Window.IsActive(1111)"/>
        <!-- tvshows hub -->
        <value condition="Window.IsActive(1110) + !String.IsEmpty(Skin.String(spotlighttvshows.path))">$INFO[Skin.String(spotlighttvshows.path)]</value>
        <value condition="Window.IsActive(1110) + Skin.String(spotlighttvshows.label, default)">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=tvshows&amp;limit=5&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</value>
        <value condition="Window.IsActive(1110)"/>
		<!-- new hub -->
        <value condition="Window.IsActive(1112) + !String.IsEmpty(Skin.String(spotlightnew.path))">$INFO[Skin.String(spotlightnew.path)]</value>
        <value condition="Window.IsActive(1112) + Skin.String(spotlightnew.label, default)">plugin://script.skin.helper.widgets/?action=newrelease&amp;mediatype=media&amp;limit=5&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</value>
        <value condition="Window.IsActive(1112)"/>
        <!-- my hub -->
        <value condition="Window.IsActive(1113) + !String.IsEmpty(Skin.String(spotlightmyhub.path))">$INFO[Skin.String(spotlightmyhub.path)]</value>
        <value condition="Window.IsActive(1113)"/>		
        <!-- pvr hub -->
        <value condition="Window.IsActive(1116) + !String.IsEmpty(Skin.String(spotlightmyhub.path))">$INFO[Skin.String(spotlightpvr.path)]</value>
        <value condition="Window.IsActive(1116)"/>
        <!-- container screens -->
        <value condition="$EXP[IsBingieListsActive]"/>
    </variable>

<!-- SPOTLIGHT IMAGE MAIN HOME--> 
<!--the whole fanart image now fits the spotlight like Netflix -->
    <include name="BingieSpotlightCornerImage">
        <param name="top" default="0"/>
        <param name="right" default="-2"/>
        <param name="width" default="1220"/>
        <param name="height" default="700"/>
        <definition>
<!-- Spotlight Diffuse -->  
			<control type="image">
                <nested />
                <visible>$PARAM[visibility]</visible>
                <top>$PARAM[top]</top>
                <right>$PARAM[right]</right>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>
                <texture background="true" diffuse="bingie/new_bingie_spotlight_diffuse.png">$PARAM[image]</texture>
				<fadetime>550</fadetime>
                <aspectratio scalediffuse="true" aligny="top" align="right">keep</aspectratio>
                <animation effect="fade" end="0" time="500">Hidden</animation>
                <animation effect="fade" start="0" end="100" time="1200">Visible</animation>
            </control>
	    </definition>
    </include>
	
<!-- SPOTLIGHT IMAGE MAIN HOME--> 
<!--the whole fanart image now fits the spotlight like Netflix -->
    <include name="BingieSpotlightFullImage">
        <param name="top" default="0"/>
        <param name="right" default="0"/>
        <param name="width" default="1920"/>
        <param name="height" default="1080"/>
        <definition>
<!-- Spotlight Diffuse -->  
			<control type="image">
                <visible>$PARAM[visibility]</visible>
                <top>$PARAM[top]</top>
                <right>$PARAM[right]</right>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>
                <texture background="true">$PARAM[image]</texture>
                <aspectratio>scale</aspectratio>
				<animation effect="fade" start="100" end="50" time="300" condition="true">WindowOpen</animation>
				<animation effect="fade" start="50" end="50" time="300" condition="true">WindowClose</animation>
            </control>
			<control type="image">			
                <visible>$PARAM[visibility]</visible>
                <top>$PARAM[top]</top>
                <right>$PARAM[right]</right>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>
				<texture background="true">overlays/gradient_videoinfo.png</texture>
				<colordiffuse>$VAR[BingiePanelColor]</colordiffuse>
			</control>
	    </definition>
    </include>

<!-- CLEARLOGO - Home Screen Widgets - Info/Text/Clearlogo -->
    <include name="Bingie_Headline_Item">
        <param name="genre_adjust" default="false" />
        <definition>
            <control type="image" id="$PARAM[id]5">
                <height>190</height>
                <width>490</width>
                <align>left</align>
                <fadetime>350</fadetime>
                <aspectratio align="center" aligny="center">keep</aspectratio>
                <texture background="true" fallback="colors/color_transparent.png">$PARAM[image]</texture>
            </control>
<!-- Movie Title with no Clearlogo -->
			<control type="textbox" id="$PARAM[id]6">
                <visible>String.EndsWith(Control.GetLabel($PARAM[id]5),color_transparent.png)</visible>
                <top>-194</top>
                <height>184</height>
                <width max="650">auto</width>
                <font>Title</font> 
                <align>left</align>
                <aligny>center</aligny>
                <textcolor>$INFO[Skin.String(BingieLabelTextColor)]</textcolor>
                <label>$PARAM[text]</label>
                <include condition="$PARAM[genre_adjust]">Bingie_TextTitle_Adjust_Genre_Anim</include>
				<autoscroll delay="4000" time="2000" repeat="6000">true</autoscroll>
            </control>
        </definition>
    </include>
	
	<!-- CLEARLOGO - Play Something Hub - Info/Text/Clearlogo -->
    <include name="Bingie_Headline_Item_2">
        <param name="genre_adjust" default="false" />
        <definition>
            <control type="image" id="$PARAM[id]5">
                <height>190</height>
                <width>490</width>
                <align>left</align>
                <fadetime>350</fadetime>
                <aspectratio align="center" aligny="center">keep</aspectratio>
                <texture background="true" fallback="colors/color_transparent.png">$PARAM[image]</texture>
            </control>
<!-- Movie Title with no Clearlogo -->
			<control type="textbox" id="$PARAM[id]6">
                <visible>String.EndsWith(Control.GetLabel($PARAM[id]5),color_transparent.png)</visible>
                <height>184</height>
                <width max="820">auto</width>
                <font>Title</font> 
                <align>left</align>
                <aligny>center</aligny>
                <textcolor>$INFO[Skin.String(BingieLabelTextColor)]</textcolor>
                <label>$PARAM[text]</label>
                <include condition="$PARAM[genre_adjust]">Bingie_TextTitle_Adjust_Genre_Anim</include>
				<autoscroll delay="4000" time="2000" repeat="6000">true</autoscroll>
            </control>
        </definition>
    </include>

    <!-- Trailer Window -->
    <include name="Preview_Window">
        <param name="top" default="0"/>
        <param name="right" default="0"/>
        <param name="width" default="1200"/>
        <param name="height" default="675"/>
        <param name="overlaywidth" default="1200"/>
        <param name="overlayheight" default="675"/>
        <param name="videowindowVisibility" default="!$EXP[IsRecognizedVideoContent] + [!Window.IsActive(DialogVideoInfo.xml) | !Window.IsActive(1190) | !Window.IsActive(1191) | !Window.IsActive(1116)]" />
        <param name="isFullscreen" default="false" />
        <param name="overlay_animation" default="Bingie_Preview_Window_Overlay_Anim" />
        <definition>
            <control type="group" id="$PARAM[id]">
                <visible>$PARAM[visibility]</visible>
                <top>$PARAM[top]</top>
                <right>$PARAM[right]</right>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>
                <control type="videowindow">
                    <visible>$PARAM[videowindowVisibility]</visible>
                </control>
                <control type="image">
                    <visible>!$PARAM[isFullscreen]</visible>
                    <texture background="true" colordiffuse="$VAR[BingiePanelColor]" border="20">overlays/bingie_corner.png</texture>
                </control>
            </control>
            <control type="image">
                <visible>Control.IsVisible($PARAM[id])</visible>
                <top>$PARAM[top]</top>
                <right>$PARAM[right]</right>
                <width>$PARAM[overlaywidth]</width>
                <height>$PARAM[overlayheight]</height>
                <aligny>top</aligny>
                <aspectratio>scale</aspectratio>
                <colordiffuse>$VAR[BingiePanelColor]</colordiffuse>
                <texture background="true">diffuse/panel2.png</texture>
                <include>$PARAM[overlay_animation]</include>
            </control>
        </definition>
    </include>
    
	<!-- MPAA Flag on Spotlight Rightside of Window --> 
	
	<!-- US Spotlight MPAA Label -->
    <include name="Spotlight_MPAA_Flag_Object">
	    <param name="right" default="-160" />
        <param name="top" default="684" />
        <param name="visibility" default="true" />
        <definition>
            <control type="group">
				<visible>!Skin.HasSetting(EnableUKIcons) + !String.IsEmpty(Control.GetLabel($PARAM[id]))</visible>
                <visible>$PARAM[visibility]</visible>
                <right>$PARAM[right]</right>
                <top>$PARAM[top]</top>
                <height>54</height>
                <width>160</width>
                <animation type="VisibleChange">
                    <effect type="slide" start="0" end="-160" delay="2000" time="400"/>
                    <effect type="fade" start="0" end="100" delay="2000" time="400"/>
                </animation>
                <control type="image">
                    <height>54</height>
                    <width>160</width>
                    <texture background="true" colordiffuse="9a343434">diffuse/panel2.png</texture>
                </control>
				<!-- White Line on Right Home Screen -->
				<control type="image">
                    <height>54</height>
                    <width>6</width>
                    <align>left</align>
                    <texture background="true" colordiffuse="ffffffff">bingie/line.png</texture>
                </control>
				<!-- Text inside of Box Right Home Screen -->                
				<control type="label" id="$PARAM[id]">
                    <left>30</left>
                    <height>52</height>
                    <width>134</width>
                    <align>left</align>
                    <font>Bold28</font>
                    <textcolor>ffffffff</textcolor>
                    <label>$VAR[GetMPAA]</label>
                </control>
            </control>
        </definition>
    </include>

<!-- UK icon to replace MPAA flag on Spotlight-->
    <include name="Spotlight_MPAA_Flag_Object1">
        <param name="right" default="-160" />
        <!-- <!-- <param name="top" default="690" />                            -->
        <param name="visibility" default="true" />
        <definition>
            <control type="group">
                 <visible>Skin.HasSetting(EnableUKIcons) + !String.IsEmpty(Control.GetLabel($PARAM[id]))</visible>
                <visible>$PARAM[visibility]</visible>
                <right>$PARAM[right]</right>
                <top>$PARAM[top]</top>
                <height>55</height>
                <width>160</width>
                <animation type="VisibleChange">
                    <effect type="slide" start="0" end="-160" delay="2000" time="400"/>
                    <effect type="fade" start="0" end="100" delay="2000" time="400"/>
                </animation>
            
				<control type="label" id="$PARAM[id]">
                    <left>30</left>
                    <height>55</height>
                    <width>130</width>
                    <align>left</align>
                    <font>Reg28</font>
                    <textcolor>none</textcolor> 
                    <label>$VAR[GetMPAA]</label>
                </control>
				
				<control type="image">
				<width>0</width>
				<height>70</height>
                <aspectratio align="center">keep</aspectratio>
				<top>668</top>
				<texture>$VAR[mediaflags_large_rating_UK_spotlight_icons]</texture>
				</control>
			</control>	
        </definition>
    </include>

    <include name="Bingie_Base_BG">
        <control type="image">
            <visible>$PARAM[visibility]</visible>
            <include>FullscreenDimensions</include>
            <texture background="true" colordiffuse="$VAR[BingiePanelColor]">diffuse/panel2.png</texture>
        </control>
    </include>

<!-- Bingie Basic Inc/Vars -->
<!-- Bingie Panel Color - Home Background Color-->
    <variable name="BingiePanelColor">
        <value condition="!String.IsEmpty(Skin.String(ViewDetailsPanelColor.base))">$INFO[Skin.String(ViewDetailsPanelColor.base)]</value>
        <value>ff000000</value>                           
    <!-- This Above Should Never Be Changed -->
	</variable>

    <include name="Title_Height_No_Clearlogo">
        <top>43</top>
    </include>

    <!-- Bingie Views Includes -->
    <include name="Bingie_Main_Spotlight_Section">
        <!-- spotlight section -->
        <include content="Bingie_Base_BG">
            <param name="visibility" value="!$EXP[IsPlayingRecognizedContent]" />
        </include>
        <include content="Preview_Window">
            <param name="id" value="$PARAM[id]01" />
            <param name="visibility" value="Player.HasVideo + [!String.IsEmpty(ListItem.Trailer) | !String.IsEmpty(Window(Home).Property(TrailerPlaying))] + [Skin.HasSetting(DetailsAutoTrailer) | Skin.HasSetting(PlayTrailerOnUp)] + !Window.IsActive(DialogVideoInfo.xml)" />
        </include>
        <control type="group">
            <width>1920</width>
            <height>600</height>            
			<include content="BingieSpotlightCornerImage">
                <param name="visibility" value="!$EXP[IsPlayingRecognizedContent] + !Control.IsVisible($PARAM[id]01) | $EXP[IsPlayingRecognizedContent] + Control.HasFocus(526) + !Skin.HasSetting(NewSpotlight) | $EXP[IsPlayingRecognizedContent] + Control.HasFocus(523) + !Skin.HasSetting(NewSpotlight)" />
                <param name="image" value="$VAR[bingieThumb]" />
            </include>
			

            <!-- bingie details -->
            <control type="grouplist">
                <width>1500</width>
                <include>BingieLeftDefs</include>
                <top>10</top>
                <orientation>vertical</orientation>
                <usecontrolcoords>true</usecontrolcoords>
                <itemgap>10</itemgap>
                <!-- Movies and Episodes Info Slide-down -->
                <animation effect="slide" start="0" end="0,140" time="0" condition="Skin.HasSetting(MovieDetailsHome) + Integer.IsGreater(ListItem.PercentPlayed,1)">Conditional</animation>

                <include content="Bingie_Headline_Item">
                    <param name="id" value="$PARAM[id]0" />
                    <param name="image" value="$VAR[BingieInfoClearlogo]" />
                    <param name="text" value="$VAR[BingieMainFallbackTitle]" />
                </include>

                <!-- spotlight row details -->
                <control type="group">
				<visible>!Container.Content(seasons)</visible>
				 <visible>Skin.HasSetting(MovieDetailsHome) + !Integer.IsGreater(ListItem.PercentPlayed,1) | !Skin.HasSetting(MovieDetailsHome)</visible>
                    <top>-7</top>
					<width>1000</width>
                    <height>55</height>
                    <include>Default_Visible_Fade</include>
                    <include>SpotlightRowDetails</include>
                </control>			
	
					<!-- TV shows Seasons -->
                    <control type="grouplist">
                        <visible>Container.Content(seasons)</visible>
                        <include>Default_Visible_Fade</include>
                        <orientation>vertical</orientation>
                        <top>0</top>
						<height>200</height>
						<width>650</width>
						<itemgap>20</itemgap>
						<usecontrolcoords>true</usecontrolcoords>
                        <control type="label">
                            <height>30</height>
                            <width>650</width>
                            <align>left</align>
                            <aligny>center</aligny>
                            <font>Reg36</font>
                         	<textcolor>$INFO[Skin.String(BingieSubLabelTextColor)]</textcolor>
                            <label>[CAPITALIZE]$VAR[SeasonFormat][/CAPITALIZE]</label>
                        </control>
					<control type="label">
						<top>-10</top>
						    <height>35</height>
		                    <width>650</width>
                            <align>left</align>
                            <aligny>center</aligny>
                            <font>Reg26</font> 
                            <textcolor>$INFO[Skin.String(BingieSubLabelTextColor)]</textcolor>
                            <label>$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20360]]</label>
                        </control>
					</control>
					
					<!-- TV shows Episodes -->
                    <control type="grouplist">
                        <visible>Container.Content(episodes)</visible>
						<visible>[Skin.HasSetting(MovieDetailsHome) + !Integer.IsGreater(ListItem.PercentPlayed,1)] | !Skin.HasSetting(MovieDetailsHome)</visible>
                        <include>Default_Visible_Fade</include>
                        <orientation>vertical</orientation>
                        <top>0</top>
						<height>200</height>
						<width>650</width>
						<itemgap>20</itemgap>
						<usecontrolcoords>true</usecontrolcoords>
                        <!--Season/Episode label-->
                        <control type="label">
                            <height>50</height>
                            <width>650</width>
                            <align>left</align>
							<posx>-6</posx>
                            <aligny>center</aligny>
                            <font>bold29</font>
                         	<textcolor>$INFO[Skin.String(BingieSubLabelTextColor)]</textcolor>
                            <label>$VAR[BingieEpisodeInfoHeader]</label>
                        </control>
                    </control>
				
				<!-- TV shows Seasons and Episodes for Continue Watching -->
                    <control type="grouplist">
					<visible>Skin.HasSetting(MovieDetailsHome)</visible>
					<visible>Integer.IsGreater(ListItem.PercentPlayed,1)</visible>
					<visible>!$EXP[IsMainMenuOpened]</visible>
                        <visible>$EXP[IsEpisodeDBType]</visible>
                        <include>Default_Visible_Fade</include>
                        <orientation>vertical</orientation>
                        <top>0</top>
						<height>200</height>
						<width>650</width>
						<itemgap>20</itemgap>
						<usecontrolcoords>true</usecontrolcoords>
                        <!--Season/Episode label-->
                        <control type="label">
                            <height>28</height>
                            <width>650</width>
                            <align>left</align>
							<posx>-9</posx>
							<posy>2</posy>
                            <aligny>center</aligny>
                            <font>Reg36</font>
                         	<textcolor>$INFO[Skin.String(BingieSubLabelTextColor)]</textcolor>
                            <label>$VAR[BingieEpisodeInfoHeader]</label>
                        </control>
                    </control>
				
				<!-- Movie and TV Show Continue Watching -->
                        <control type="group">
                            <visible>Skin.HasSetting(MovieDetailsHome)</visible>
							<visible>Integer.IsGreater(ListItem.PercentPlayed,1)</visible>
                            <top>29</top>
							<width>650</width>
                            <height>30</height>
                            <aligny>center</aligny>
                            <control type="progress">
                                <width>185</width>
                                <height>8</height>
                                <texturebg colordiffuse="$INFO[Skin.String(BingieHomeProgressBarBackgroundColor)]" border="0">diffuse/panel2.png</texturebg>
                                <lefttexture/>
                                <midtexture colordiffuse="$INFO[Skin.String(BingieHomeProgressBarColor)]" border="4">diffuse/panel2.png</midtexture>
                                <righttexture/>
                                <info>ListItem.PercentPlayed</info>
                            </control>
                            <control type="label">
                                <top>-11</top>
                                <left>214</left>
                                <height>25</height>
                                <width>450</width>
                                <font>Reg26</font>
                                <textcolor>$INFO[Skin.String(BingieHomeProgressBarTextColor)]</textcolor>
                                <label>$VAR[PercentRemained,,% $LOCALIZE[31059]]</label>
                            </control>
                        </control>

				<control type="grouplist">
					<visible>!Window.IsActive(DialogVideoInfo.xml)</visible>
					<include>Animation_Right_Home</include>
					<width>1500</width>
					<height>600</height>
					<orientation>vertical</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<itemgap>5</itemgap>
				<!-- Bingie library views Sublabel grouplist (top250 + watch xx now) -->
				<control type="grouplist">
						<orientation>horizontal</orientation>
						<visible>!Container.Content(episodes) + !Container.Content(seasons)</visible>
						<visible>!Skin.HasSetting(DisableTop250) + !String.IsEmpty(Control.GetLabel(8231)) + !Integer.IsGreater(ListItem.PercentPlayed,1) | !Skin.HasSetting(DisableTop250) + !String.IsEmpty(Control.GetLabel(823)) + $EXP[IsTVShowInLastEpisodes] + !Integer.IsGreater(ListItem.PercentPlayed,1) | 
						!Skin.HasSetting(DisableTop250) + !String.IsEmpty(Control.GetLabel(8231)) + !Skin.HasSetting(MovieDetailsHome) + Integer.IsGreater(ListItem.PercentPlayed,1)
						</visible>
						<height>55</height>
						<width>800</width>
						<left>1</left>
						<top>-5</top>
						<aligny>center</aligny> 
						<usecontrolcoords>true</usecontrolcoords>
						<itemgap>15</itemgap>
					<!--top 250 icon White-->	
					<control type="image">
							<visible>!String.IsEmpty(Control.GetLabel(8231)) + Skin.HasSetting(EnableTop250ColoredLabel)</visible>
							<posy>5</posy>
							<left>0</left>
							<height>50</height>
							<width>50</width>
							<aspectratio>keep</aspectratio>
							<colordiffuse>$INFO[Skin.String(BingieTop250IconColor)]</colordiffuse>
							<texture>bingie/top2501.png</texture>
					</control>
					<!--top 250 icon color-->	
					<control type="image">
							<visible>!String.IsEmpty(Control.GetLabel(8231)) + !Skin.HasSetting(EnableTop250ColoredLabel)</visible>
							<posy>5</posy>
							<left>0</left>
							<height>50</height>
							<width>50</width>
							<aspectratio>keep</aspectratio>
							<texture>bingie/top250.png</texture>
					</control>
						
					<control type="label" id="8231">
						<visible>!String.IsEmpty(Control.GetLabel(8231))</visible>
						<visible>!Skin.HasSetting(DisableTop250)</visible>
						<font>bold29</font> 
						<textcolor>$INFO[Skin.String(BingieSubLabelTextColor)]</textcolor> 
						<label>$VAR[IMDBTop250RatingValue,#, $LOCALIZE[320157]]</label>
						<include>Default_Visible_Fade</include>
					</control>
							
						<!-- Bingie  Sublabel (Tagline/Watch library view) -->
					<control type="label" id="823">
							<visible>!Container.Content(episodes)</visible>
							<visible>!String.IsEmpty(Control.GetLabel(823)) + String.IsEmpty(Control.GetLabel(8231))</visible>
							<width>820</width>
							<font>bold29</font> 
							<textcolor>$INFO[Skin.String(BingieSubLabelTextColor)]</textcolor> 
							<label>$VAR[BingieSublabel]</label>
							<include>Default_Visible_Fade</include>
					</control> 
				</control>
                <!-- Plot (Library Bingie) -->
                <control type="textbox">
                    <visible>Skin.HasSetting(MovieDetailsHome) + !Integer.IsGreater(ListItem.PercentPlayed,1) | !Skin.HasSetting(MovieDetailsHome)</visible>
					<height min="30" max="121">auto</height>
					<top>5</top>
					<width>820</width>
                    <textcolor>$INFO[Skin.String(BingiePlotTextColor)]</textcolor>
                    <align>left</align>
                    <font>Plots</font>					
                    <label>$VAR[ViewsPlotWithOutline]</label>
                    <include>Default_Visible_Fade</include>
					<scroll>false</scroll>
                </control>

                <!-- additional info -->
				<control type="group">
					<top>5</top>
					<include content="Bingie_Additional_Info">
						<param name="visibility" value="!$EXP[IsTVShowInLastEpisodes] + [Container.Content(movies) | Container.Content(tvshows)] | Skin.HasSetting(DisableTop250) + [Container.Content(movies) | Container.Content(tvshows)]" />
					</include>
				</control>
            </control>
        </control>
		</control>
	</include>

    <include name="Bingie_Main_View_Fixed_Frame">
        <param name="visibility" default="true" />
        <param name="isHorizontal" default="false" />
        <definition>
            <control type="image">
                <nested />
                <visible>$PARAM[visibility]</visible>
                <visible>Integer.IsGreater(Container($PARAM[containerid]).NumItems, 0) + Control.HasFocus($PARAM[containerid])</visible>
                <top>$PARAM[top]</top>
                <width>$PARAM[width]</width>
                <height>$PARAM[height]</height>
                <texture background="true" border="-4">$PARAM[texture]</texture>
                <colordiffuse>$INFO[Skin.String(ViewDetailsBorderFocusColor)]</colordiffuse>
                <bordersize>8</bordersize>
                <include>Default_Visible_Fade</include>
                <animation effect="slide" end="$PARAM[xAxisAnim],0" time="150" condition="Integer.IsGreater(Container($PARAM[containerid]).Column, 0)">Conditional</animation>
                <animation effect="slide" end="$PARAM[xAxisAnim],0" time="150" condition="Integer.IsGreater(Container($PARAM[containerid]).Column, 1)">Conditional</animation>
                <animation effect="slide" end="$PARAM[xAxisAnim],0" time="150" condition="Integer.IsGreater(Container($PARAM[containerid]).Column, 2)">Conditional</animation>
                <animation effect="slide" end="$PARAM[xAxisAnim],0" time="150" condition="Integer.IsGreater(Container($PARAM[containerid]).Column, 3)">Conditional</animation>
                <animation effect="slide" end="$PARAM[xAxisAnim],0" time="150" condition="Integer.IsGreater(Container($PARAM[containerid]).Column, 4)">Conditional</animation>
                <animation effect="slide" end="$PARAM[xAxisAnim],0" time="150" condition="Integer.IsGreater(Container($PARAM[containerid]).Column, 5)">Conditional</animation>
                <animation effect="slide" end="0,$PARAM[yAxisAnim]" time="200" condition="$PARAM[isHorizontal] + Integer.IsGreater(Container($PARAM[containerid]).Row, 0)">Conditional</animation>
            </control>
        </definition>
    </include>
	
    <!-- Content header -->
    <variable name="BingieMainContentHeader">
        <!-- built-in -->
        <value condition="String.IsEqual(Container.FolderPath, videodb://tvshows/titles/)">[CAPITALIZE]$LOCALIZE[36903][/CAPITALIZE]</value>
        <value condition="String.IsEqual(Container.FolderPath, videodb://movies/titles/)">[CAPITALIZE]$LOCALIZE[36901][/CAPITALIZE]</value>
        <value condition="String.IsEqual(Container.FolderPath, videodb://recentlyaddedmovies/)">[CAPITALIZE]$LOCALIZE[20386][/CAPITALIZE]</value>
        <value condition="String.IsEqual(Container.FolderPath, videodb://recentlyaddedepisodes/)">[CAPITALIZE]$LOCALIZE[20387][/CAPITALIZE]</value>
        <value condition="String.IsEqual(Container.FolderPath, videodb://inprogresstvshows)">[CAPITALIZE]$LOCALIZE[626][/CAPITALIZE]</value>
        <value condition="String.IsEqual(Container.FolderPath, videodb://tvshows/genres/)">[CAPITALIZE]$LOCALIZE[36903]$LOCALIZE[135, - ,][/CAPITALIZE]</value>
        <value condition="String.IsEqual(Container.FolderPath, videodb://movies/genres/)">[CAPITALIZE]$LOCALIZE[36901]$LOCALIZE[135, - ,][/CAPITALIZE]</value>
        <value condition="String.IsEqual(Container.FolderPath, videodb://movies/sets/)">[CAPITALIZE]$LOCALIZE[20434][/CAPITALIZE]</value>
        <value condition="String.IsEqual(Container.FolderPath, special://skin/playlists/topratedshows.xsp)">[CAPITALIZE]$LOCALIZE[31098][/CAPITALIZE]</value>
        <value condition="String.IsEqual(Container.FolderPath, special://skin/playlists/topratedmovies.xsp)">[CAPITALIZE]$LOCALIZE[31532][/CAPITALIZE]</value>
        <value condition="String.IsEqual(Container.FolderPath, special://skin/extras/widgetplaylists/inprogressmovies.xsp)">[CAPITALIZE]$LOCALIZE[31035][/CAPITALIZE]</value>
        <value condition="String.IsEqual(Container.FolderPath, special://skin/extras/widgetplaylists/unwatchedmovies.xsp)">[CAPITALIZE]$LOCALIZE[16101][/CAPITALIZE]</value>
        <!-- skin helper widgets -->
        <value condition="String.StartsWith(Container.FolderPath, plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies)">[CAPITALIZE]$ADDON[script.skin.helper.widgets 32028][/CAPITALIZE]</value>
        <value condition="String.StartsWith(Container.FolderPath, plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies)">[CAPITALIZE]$ADDON[script.skin.helper.widgets 32066][/CAPITALIZE]</value>
        <value condition="String.StartsWith(Container.FolderPath, plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=tvshows)">[CAPITALIZE]$ADDON[script.skin.helper.widgets 32045][/CAPITALIZE]</value>
        <value condition="String.StartsWith(Container.FolderPath, plugin://script.skin.helper.widgets/?action=nextaired)">[CAPITALIZE]$ADDON[script.skin.helper.widgets 32043][/CAPITALIZE]</value>
        <value condition="String.StartsWith(Container.FolderPath, plugin://script.skin.helper.widgets/?action=newrelease&amp;mediatype=media)">[CAPITALIZE]$ADDON[script.skin.helper.widgets 32087][/CAPITALIZE]</value>
        <value condition="String.StartsWith(Container.FolderPath, plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=media)">[CAPITALIZE]$ADDON[script.skin.helper.widgets 32078][/CAPITALIZE]</value>
        <value condition="String.StartsWith(Container.FolderPath, plugin://script.skin.helper.widgets/?action=popular&amp;mediatype=media)">[CAPITALIZE]$ADDON[script.skin.helper.widgets 32090][/CAPITALIZE]</value>
        <value condition="String.StartsWith(Container.FolderPath, plugin://script.skin.helper.widgets/?action=toprated&amp;mediatype=movies)">[CAPITALIZE]$ADDON[script.skin.helper.widgets 32083][/CAPITALIZE]</value>
        <value condition="String.StartsWith(Container.FolderPath, plugin://script.skin.helper.widgets/?action=toprated&amp;mediatype=tvshows)">[CAPITALIZE]$ADDON[script.skin.helper.widgets 32097][/CAPITALIZE]</value>
        <value condition="String.Contains(Container.FolderPath, genre) | String.StartsWith(Container.FolderPath, plugin://script.skin.helper.widgets/?action=forgenre&amp;mediatype=media)">$INFO[Window(Home).Property(ListItem.Label)]</value>
        <!-- to be continued -->
    </variable>

    <!-- season/episode sublabel -->
    <variable name="BingieMainEpisodeInfoLabel">
        <value condition="Container.Content(seasons) + !String.IsEmpty(ListItem.Season)">[B][CAPITALIZE]$INFO[ListItem.Season,$LOCALIZE[36904] ,][/CAPITALIZE][/B][CR]$VAR[BingieMainSeasonTotalEpisodesInfoLabel]</value>
        <value condition="Container.Content(seasons) + String.IsEmpty(ListItem.Season)">$VAR[BingieMainSeasonTotalEpisodesInfoLabel]</value>
        <value condition="Container.Content(episodes)">[B][CAPITALIZE]$INFO[ListItem.Season,$LOCALIZE[36904] ,]$INFO[ListItem.Episode, $LOCALIZE[36906] ,][/CAPITALIZE][/B][CR]$INFO[ListItem.Title]</value>
    </variable>

    <!-- season total episodes / watched info -->
    <variable name="BingieMainSeasonTotalEpisodesInfoLabel">
        <value condition="Container.Content(seasons) + !String.IsEmpty(ListItem.Property(TotalEpisodes)) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + !String.IsEqual(ListItem.Property(UnWatchedEpisodes),ListItem.Property(TotalEpisodes))">$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20360] ]$INFO[ListItem.Property(UnWatchedEpisodes),(, $LOCALIZE[16101])]</value>
        <value condition="Container.Content(seasons) + !String.IsEmpty(ListItem.Property(TotalEpisodes))">$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20360]]</value>
    </variable>

    <!-- title text fallback -->
    <variable name="BingieMainFallbackTitle">
        <value condition="[Container.Content(episodes) | Container.Content(seasons)] + !String.IsEmpty(ListItem.TVShowTitle)">[B]$INFO[ListItem.TVShowTitle][/B]</value>
        <value condition="!String.IsEmpty(ListItem.Title)">[B]$INFO[ListItem.Title][/B]</value>
        <value>[B]$INFO[ListItem.Label][/B]</value>
    </variable>

    <!-- Jedi mind tricks inventory -->

    <!-- Get NextUp Episode number and subtracts one for playoffset (play from beginning workaround) -->
    <variable name="NextUpEpisodeMinusOne">
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,1)">0</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,2)">1</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,3)">2</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,4)">3</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,5)">4</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,6)">5</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,7)">6</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,8)">7</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,9)">8</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,10)">9</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,11)">10</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,12)">11</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,13)">12</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,14)">13</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,15)">14</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,16)">15</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,17)">16</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,18)">17</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,19)">18</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,20)">19</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,21)">20</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,22)">21</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,23)">22</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,24)">23</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,25)">24</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,26)">25</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,27)">26</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,28)">27</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,29)">28</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,30)">29</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,31)">30</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,32)">31</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,33)">32</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,34)">33</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,35)">34</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,36)">35</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,37)">36</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,38)">37</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,39)">38</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,40)">39</value>
        <value>-1</value>
    </variable>

    <!-- painful way to get percentage based rating
    Note: intentionally disregarding 0 and 100 -->
    <variable name="RatingDecimalToPercentage">
        <!-- user rating -->
        <value condition="!String.IsEmpty(ListItem.UserRating)">$VAR[RatingDecimalToPercentageListItemUserRating]</value>
        <value condition="!String.IsEmpty(ListItem.Rating)">$VAR[RatingDecimalToPercentageListItemRating]</value>	
		<value condition="!String.IsEmpty(Container(99950).ListItem.Rating)">$VAR[RatingDecimalToPercentageHomeListItemSHSRating]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.UserRating))">$VAR[RatingDecimalToPercentageHomeListItemUserRating]</value>
        <value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.Rating))">$VAR[RatingDecimalToPercentageHomeListItemRating]</value>
		<value condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Container(99950).ListItem.Rating)">$VAR[RatingDecimalToPercentageHomeListItemSHSRating]</value>
    </variable>
	
	<variable name="RatingDecimalToPercentageSeasons">
        <!-- user rating -->
		<value condition="!String.IsEmpty(Container(5027).ListItem.Rating)">$VAR[RatingDecimalToPercentageListItemRatingBingieSeasons]</value>		
    </variable>

    <!-- ListItem.UserRating -->
    <variable name="RatingDecimalToPercentageListItemUserRating">
        <value condition="String.IsEqual(ListItem.UserRating,0)"/>
        <value condition="String.IsEqual(ListItem.UserRating,0.0)"/>
        <value condition="String.IsEqual(ListItem.UserRating,0.1)">1</value>
        <value condition="String.IsEqual(ListItem.UserRating,0.2)">2</value>
        <value condition="String.IsEqual(ListItem.UserRating,0.3)">3</value>
        <value condition="String.IsEqual(ListItem.UserRating,0.4)">4</value>
        <value condition="String.IsEqual(ListItem.UserRating,0.5)">5</value>
        <value condition="String.IsEqual(ListItem.UserRating,0.6)">6</value>
        <value condition="String.IsEqual(ListItem.UserRating,0.7)">7</value>
        <value condition="String.IsEqual(ListItem.UserRating,0.8)">8</value>
        <value condition="String.IsEqual(ListItem.UserRating,0.9)">9</value>
        <value condition="String.IsEqual(ListItem.UserRating,1)">10</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.0)">10</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.1)">11</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.2)">12</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.3)">13</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.4)">14</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.5)">15</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.6)">16</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.7)">17</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.8)">18</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.9)">19</value>
        <value condition="String.IsEqual(ListItem.UserRating,2)">20</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.0)">20</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.1)">21</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.2)">22</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.3)">23</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.4)">24</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.5)">25</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.6)">26</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.7)">27</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.8)">28</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.9)">29</value>
        <value condition="String.IsEqual(ListItem.UserRating,3)">30</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.0)">30</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.1)">31</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.2)">32</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.3)">33</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.4)">34</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.5)">35</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.6)">36</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.7)">37</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.8)">38</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.9)">39</value>
        <value condition="String.IsEqual(ListItem.UserRating,4)">40</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.0)">40</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.1)">41</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.2)">42</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.3)">43</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.4)">44</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.5)">45</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.6)">46</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.7)">47</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.8)">48</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.9)">49</value>
        <value condition="String.IsEqual(ListItem.UserRating,5)">50</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.0)">50</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.1)">51</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.2)">52</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.3)">53</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.4)">54</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.5)">55</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.6)">56</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.7)">57</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.8)">58</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.9)">59</value>
        <value condition="String.IsEqual(ListItem.UserRating,6)">60</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.0)">60</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.1)">61</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.2)">62</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.3)">63</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.4)">64</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.5)">65</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.6)">66</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.7)">67</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.8)">68</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.9)">69</value>
        <value condition="String.IsEqual(ListItem.UserRating,7)">70</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.0)">70</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.1)">71</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.2)">72</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.3)">73</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.4)">74</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.5)">75</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.6)">76</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.7)">77</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.8)">78</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.9)">79</value>
        <value condition="String.IsEqual(ListItem.UserRating,8)">80</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.0)">80</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.1)">81</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.2)">82</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.3)">83</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.4)">84</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.5)">85</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.6)">86</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.7)">87</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.8)">88</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.9)">89</value>
        <value condition="String.IsEqual(ListItem.UserRating,9)">90</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.0)">90</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.1)">91</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.2)">92</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.3)">93</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.4)">94</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.5)">95</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.6)">96</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.7)">97</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.8)">98</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.9)">99</value>
        <value condition="String.IsEqual(ListItem.UserRating,10)"/>
        <value condition="String.IsEqual(ListItem.UserRating,10.0)"/>
    </variable>

    <!-- Window(Home).Property(ListItem.UserRating) -->
    <variable name="RatingDecimalToPercentageHomeListItemUserRating">
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0)"/>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.0)"/>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.1)">1</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.2)">2</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.3)">3</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.4)">4</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.5)">5</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.6)">6</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.7)">7</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.8)">8</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.9)">9</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1)">10</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.0)">10</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.1)">11</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.2)">12</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.3)">13</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.4)">14</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.5)">15</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.6)">16</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.7)">17</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.8)">18</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.9)">19</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2)">20</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.0)">20</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.1)">21</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.2)">22</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.3)">23</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.4)">24</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.5)">25</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.6)">26</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.7)">27</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.8)">28</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.9)">29</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3)">30</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.0)">30</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.1)">31</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.2)">32</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.3)">33</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.4)">34</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.5)">35</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.6)">36</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.7)">37</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.8)">38</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.9)">39</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4)">40</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.0)">40</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.1)">41</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.2)">42</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.3)">43</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.4)">44</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.5)">45</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.6)">46</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.7)">47</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.8)">48</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.9)">49</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5)">50</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.0)">50</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.1)">51</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.2)">52</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.3)">53</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.4)">54</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.5)">55</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.6)">56</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.7)">57</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.8)">58</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.9)">59</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6)">60</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.0)">60</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.1)">61</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.2)">62</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.3)">63</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.4)">64</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.5)">65</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.6)">66</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.7)">67</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.8)">68</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.9)">69</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7)">70</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.0)">70</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.1)">71</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.2)">72</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.3)">73</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.4)">74</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.5)">75</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.6)">76</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.7)">77</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.8)">78</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.9)">79</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8)">80</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.0)">80</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.1)">81</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.2)">82</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.3)">83</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.4)">84</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.5)">85</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.6)">86</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.7)">87</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.8)">88</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.9)">89</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9)">90</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.0)">90</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.1)">91</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.2)">92</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.3)">93</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.4)">94</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.5)">95</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.6)">96</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.7)">97</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.8)">98</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.9)">99</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),10)"/>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),10.0)"/>
    </variable>

    <!-- ListItem.Rating -->
    <variable name="RatingDecimalToPercentageListItemRating">
        <value condition="String.IsEqual(ListItem.Rating,0)"/>
        <value condition="String.IsEqual(ListItem.Rating,0.0)"/>
        <value condition="String.IsEqual(ListItem.Rating,0.1)">1</value>
        <value condition="String.IsEqual(ListItem.Rating,0.2)">2</value>
        <value condition="String.IsEqual(ListItem.Rating,0.3)">3</value>
        <value condition="String.IsEqual(ListItem.Rating,0.4)">4</value>
        <value condition="String.IsEqual(ListItem.Rating,0.5)">5</value>
        <value condition="String.IsEqual(ListItem.Rating,0.6)">6</value>
        <value condition="String.IsEqual(ListItem.Rating,0.7)">7</value>
        <value condition="String.IsEqual(ListItem.Rating,0.8)">8</value>
        <value condition="String.IsEqual(ListItem.Rating,0.9)">9</value>
        <value condition="String.IsEqual(ListItem.Rating,1)">10</value>
        <value condition="String.IsEqual(ListItem.Rating,1.0)">10</value>
        <value condition="String.IsEqual(ListItem.Rating,1.1)">11</value>
        <value condition="String.IsEqual(ListItem.Rating,1.2)">12</value>
        <value condition="String.IsEqual(ListItem.Rating,1.3)">13</value>
        <value condition="String.IsEqual(ListItem.Rating,1.4)">14</value>
        <value condition="String.IsEqual(ListItem.Rating,1.5)">15</value>
        <value condition="String.IsEqual(ListItem.Rating,1.6)">16</value>
        <value condition="String.IsEqual(ListItem.Rating,1.7)">17</value>
        <value condition="String.IsEqual(ListItem.Rating,1.8)">18</value>
        <value condition="String.IsEqual(ListItem.Rating,1.9)">19</value>
        <value condition="String.IsEqual(ListItem.Rating,2)">20</value>
        <value condition="String.IsEqual(ListItem.Rating,2.0)">20</value>
        <value condition="String.IsEqual(ListItem.Rating,2.1)">21</value>
        <value condition="String.IsEqual(ListItem.Rating,2.2)">22</value>
        <value condition="String.IsEqual(ListItem.Rating,2.3)">23</value>
        <value condition="String.IsEqual(ListItem.Rating,2.4)">24</value>
        <value condition="String.IsEqual(ListItem.Rating,2.5)">25</value>
        <value condition="String.IsEqual(ListItem.Rating,2.6)">26</value>
        <value condition="String.IsEqual(ListItem.Rating,2.7)">27</value>
        <value condition="String.IsEqual(ListItem.Rating,2.8)">28</value>
        <value condition="String.IsEqual(ListItem.Rating,2.9)">29</value>
        <value condition="String.IsEqual(ListItem.Rating,3)">30</value>
        <value condition="String.IsEqual(ListItem.Rating,3.0)">30</value>
        <value condition="String.IsEqual(ListItem.Rating,3.1)">31</value>
        <value condition="String.IsEqual(ListItem.Rating,3.2)">32</value>
        <value condition="String.IsEqual(ListItem.Rating,3.3)">33</value>
        <value condition="String.IsEqual(ListItem.Rating,3.4)">34</value>
        <value condition="String.IsEqual(ListItem.Rating,3.5)">35</value>
        <value condition="String.IsEqual(ListItem.Rating,3.6)">36</value>
        <value condition="String.IsEqual(ListItem.Rating,3.7)">37</value>
        <value condition="String.IsEqual(ListItem.Rating,3.8)">38</value>
        <value condition="String.IsEqual(ListItem.Rating,3.9)">39</value>
        <value condition="String.IsEqual(ListItem.Rating,4)">40</value>
        <value condition="String.IsEqual(ListItem.Rating,4.0)">40</value>
        <value condition="String.IsEqual(ListItem.Rating,4.1)">41</value>
        <value condition="String.IsEqual(ListItem.Rating,4.2)">42</value>
        <value condition="String.IsEqual(ListItem.Rating,4.3)">43</value>
        <value condition="String.IsEqual(ListItem.Rating,4.4)">44</value>
        <value condition="String.IsEqual(ListItem.Rating,4.5)">45</value>
        <value condition="String.IsEqual(ListItem.Rating,4.6)">46</value>
        <value condition="String.IsEqual(ListItem.Rating,4.7)">47</value>
        <value condition="String.IsEqual(ListItem.Rating,4.8)">48</value>
        <value condition="String.IsEqual(ListItem.Rating,4.9)">49</value>
        <value condition="String.IsEqual(ListItem.Rating,5)">50</value>
        <value condition="String.IsEqual(ListItem.Rating,5.0)">50</value>
        <value condition="String.IsEqual(ListItem.Rating,5.1)">51</value>
        <value condition="String.IsEqual(ListItem.Rating,5.2)">52</value>
        <value condition="String.IsEqual(ListItem.Rating,5.3)">53</value>
        <value condition="String.IsEqual(ListItem.Rating,5.4)">54</value>
        <value condition="String.IsEqual(ListItem.Rating,5.5)">55</value>
        <value condition="String.IsEqual(ListItem.Rating,5.6)">56</value>
        <value condition="String.IsEqual(ListItem.Rating,5.7)">57</value>
        <value condition="String.IsEqual(ListItem.Rating,5.8)">58</value>
        <value condition="String.IsEqual(ListItem.Rating,5.9)">59</value>
        <value condition="String.IsEqual(ListItem.Rating,6)">60</value>
        <value condition="String.IsEqual(ListItem.Rating,6.0)">60</value>
        <value condition="String.IsEqual(ListItem.Rating,6.1)">61</value>
        <value condition="String.IsEqual(ListItem.Rating,6.2)">62</value>
        <value condition="String.IsEqual(ListItem.Rating,6.3)">63</value>
        <value condition="String.IsEqual(ListItem.Rating,6.4)">64</value>
        <value condition="String.IsEqual(ListItem.Rating,6.5)">65</value>
        <value condition="String.IsEqual(ListItem.Rating,6.6)">66</value>
        <value condition="String.IsEqual(ListItem.Rating,6.7)">67</value>
        <value condition="String.IsEqual(ListItem.Rating,6.8)">68</value>
        <value condition="String.IsEqual(ListItem.Rating,6.9)">69</value>
        <value condition="String.IsEqual(ListItem.Rating,7)">70</value>
        <value condition="String.IsEqual(ListItem.Rating,7.0)">70</value>
        <value condition="String.IsEqual(ListItem.Rating,7.1)">71</value>
        <value condition="String.IsEqual(ListItem.Rating,7.2)">72</value>
        <value condition="String.IsEqual(ListItem.Rating,7.3)">73</value>
        <value condition="String.IsEqual(ListItem.Rating,7.4)">74</value>
        <value condition="String.IsEqual(ListItem.Rating,7.5)">75</value>
        <value condition="String.IsEqual(ListItem.Rating,7.6)">76</value>
        <value condition="String.IsEqual(ListItem.Rating,7.7)">77</value>
        <value condition="String.IsEqual(ListItem.Rating,7.8)">78</value>
        <value condition="String.IsEqual(ListItem.Rating,7.9)">79</value>
        <value condition="String.IsEqual(ListItem.Rating,8)">80</value>
        <value condition="String.IsEqual(ListItem.Rating,8.0)">80</value>
        <value condition="String.IsEqual(ListItem.Rating,8.1)">81</value>
        <value condition="String.IsEqual(ListItem.Rating,8.2)">82</value>
        <value condition="String.IsEqual(ListItem.Rating,8.3)">83</value>
        <value condition="String.IsEqual(ListItem.Rating,8.4)">84</value>
        <value condition="String.IsEqual(ListItem.Rating,8.5)">85</value>
        <value condition="String.IsEqual(ListItem.Rating,8.6)">86</value>
        <value condition="String.IsEqual(ListItem.Rating,8.7)">87</value>
        <value condition="String.IsEqual(ListItem.Rating,8.8)">88</value>
        <value condition="String.IsEqual(ListItem.Rating,8.9)">89</value>
        <value condition="String.IsEqual(ListItem.Rating,9)">90</value>
        <value condition="String.IsEqual(ListItem.Rating,9.0)">90</value>
        <value condition="String.IsEqual(ListItem.Rating,9.1)">91</value>
        <value condition="String.IsEqual(ListItem.Rating,9.2)">92</value>
        <value condition="String.IsEqual(ListItem.Rating,9.3)">93</value>
        <value condition="String.IsEqual(ListItem.Rating,9.4)">94</value>
        <value condition="String.IsEqual(ListItem.Rating,9.5)">95</value>
        <value condition="String.IsEqual(ListItem.Rating,9.6)">96</value>
        <value condition="String.IsEqual(ListItem.Rating,9.7)">97</value>
        <value condition="String.IsEqual(ListItem.Rating,9.8)">98</value>
        <value condition="String.IsEqual(ListItem.Rating,9.9)">99</value>
        <value condition="String.IsEqual(ListItem.Rating,10)"/>
        <value condition="String.IsEqual(ListItem.Rating,10.0)"/>
    </variable>
	
	<variable name="RatingDecimalToPercentageListItemRatingBingieSeasons">
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,0)"/>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,0.0)"/>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,0.1)">1</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,0.2)">2</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,0.3)">3</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,0.4)">4</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,0.5)">5</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,0.6)">6</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,0.7)">7</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,0.8)">8</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,0.9)">9</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,1)">10</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,1.0)">10</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,1.1)">11</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,1.2)">12</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,1.3)">13</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,1.4)">14</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,1.5)">15</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,1.6)">16</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,1.7)">17</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,1.8)">18</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,1.9)">19</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,2)">20</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,2.0)">20</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,2.1)">21</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,2.2)">22</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,2.3)">23</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,2.4)">24</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,2.5)">25</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,2.6)">26</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,2.7)">27</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,2.8)">28</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,2.9)">29</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,3)">30</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,3.0)">30</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,3.1)">31</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,3.2)">32</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,3.3)">33</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,3.4)">34</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,3.5)">35</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,3.6)">36</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,3.7)">37</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,3.8)">38</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,3.9)">39</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,4)">40</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,4.0)">40</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,4.1)">41</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,4.2)">42</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,4.3)">43</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,4.4)">44</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,4.5)">45</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,4.6)">46</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,4.7)">47</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,4.8)">48</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,4.9)">49</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,5)">50</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,5.0)">50</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,5.1)">51</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,5.2)">52</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,5.3)">53</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,5.4)">54</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,5.5)">55</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,5.6)">56</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,5.7)">57</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,5.8)">58</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,5.9)">59</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,6)">60</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,6.0)">60</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,6.1)">61</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,6.2)">62</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,6.3)">63</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,6.4)">64</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,6.5)">65</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,6.6)">66</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,6.7)">67</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,6.8)">68</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,6.9)">69</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,7)">70</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,7.0)">70</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,7.1)">71</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,7.2)">72</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,7.3)">73</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,7.4)">74</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,7.5)">75</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,7.6)">76</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,7.7)">77</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,7.8)">78</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,7.9)">79</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,8)">80</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,8.0)">80</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,8.1)">81</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,8.2)">82</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,8.3)">83</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,8.4)">84</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,8.5)">85</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,8.6)">86</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,8.7)">87</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,8.8)">88</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,8.9)">89</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,9)">90</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,9.0)">90</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,9.1)">91</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,9.2)">92</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,9.3)">93</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,9.4)">94</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,9.5)">95</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,9.6)">96</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,9.7)">97</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,9.8)">98</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,9.9)">99</value>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,10)"/>
        <value condition="String.IsEqual(Container(5027).ListItem.Rating,10.0)"/>
    </variable>

    <!-- Window(Home).Property(ListItem.Rating) -->
    <variable name="RatingDecimalToPercentageHomeListItemRating">
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0)"/>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.0)"/>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.1)">1</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.2)">2</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.3)">3</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.4)">4</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.5)">5</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.6)">6</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.7)">7</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.8)">8</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.9)">9</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1)">10</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.0)">10</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.1)">11</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.2)">12</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.3)">13</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.4)">14</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.5)">15</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.6)">16</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.7)">17</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.8)">18</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.9)">19</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2)">20</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.0)">20</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.1)">21</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.2)">22</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.3)">23</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.4)">24</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.5)">25</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.6)">26</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.7)">27</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.8)">28</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.9)">29</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3)">30</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.0)">30</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.1)">31</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.2)">32</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.3)">33</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.4)">34</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.5)">35</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.6)">36</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.7)">37</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.8)">38</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.9)">39</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4)">40</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.0)">40</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.1)">41</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.2)">42</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.3)">43</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.4)">44</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.5)">45</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.6)">46</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.7)">47</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.8)">48</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.9)">49</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5)">50</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.0)">50</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.1)">51</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.2)">52</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.3)">53</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.4)">54</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.5)">55</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.6)">56</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.7)">57</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.8)">58</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.9)">59</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6)">60</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.0)">60</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.1)">61</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.2)">62</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.3)">63</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.4)">64</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.5)">65</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.6)">66</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.7)">67</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.8)">68</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.9)">69</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7)">70</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.0)">70</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.1)">71</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.2)">72</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.3)">73</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.4)">74</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.5)">75</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.6)">76</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.7)">77</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.8)">78</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.9)">79</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8)">80</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.0)">80</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.1)">81</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.2)">82</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.3)">83</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.4)">84</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.5)">85</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.6)">86</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.7)">87</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.8)">88</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.9)">89</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9)">90</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.0)">90</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.1)">91</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.2)">92</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.3)">93</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.4)">94</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.5)">95</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.6)">96</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.7)">97</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.8)">98</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.9)">99</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),10)"/>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),10.0)"/>
    </variable>
	
	<!-- Container(99950).ListItem.Rating -->
	<variable name="RatingDecimalToPercentageHomeListItemSHSRating">
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,0)"/>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,0.0)"/>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,0.1)">1</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,0.2)">2</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,0.3)">3</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,0.4)">4</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,0.5)">5</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,0.6)">6</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,0.7)">7</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,0.8)">8</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,0.9)">9</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,1)">10</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,1.0)">10</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,1.1)">11</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,1.2)">12</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,1.3)">13</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,1.4)">14</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,1.5)">15</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,1.6)">16</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,1.7)">17</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,1.8)">18</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,1.9)">19</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,2)">20</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,2.0)">20</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,2.1)">21</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,2.2)">22</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,2.3)">23</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,2.4)">24</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,2.5)">25</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,2.6)">26</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,2.7)">27</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,2.8)">28</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,2.9)">29</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,3)">30</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,3.0)">30</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,3.1)">31</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,3.2)">32</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,3.3)">33</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,3.4)">34</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,3.5)">35</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,3.6)">36</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,3.7)">37</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,3.8)">38</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,3.9)">39</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,4)">40</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,4.0)">40</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,4.1)">41</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,4.2)">42</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,4.3)">43</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,4.4)">44</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,4.5)">45</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,4.6)">46</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,4.7)">47</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,4.8)">48</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,4.9)">49</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,5)">50</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,5.0)">50</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,5.1)">51</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,5.2)">52</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,5.3)">53</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,5.4)">54</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,5.5)">55</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,5.6)">56</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,5.7)">57</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,5.8)">58</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,5.9)">59</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,6)">60</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,6.0)">60</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,6.1)">61</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,6.2)">62</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,6.3)">63</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,6.4)">64</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,6.5)">65</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,6.6)">66</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,6.7)">67</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,6.8)">68</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,6.9)">69</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,7)">70</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,7.0)">70</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,7.1)">71</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,7.2)">72</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,7.3)">73</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,7.4)">74</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,7.5)">75</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,7.6)">76</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,7.7)">77</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,7.8)">78</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,7.9)">79</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,8)">80</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,8.0)">80</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,8.1)">81</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,8.2)">82</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,8.3)">83</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,8.4)">84</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,8.5)">85</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,8.6)">86</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,8.7)">87</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,8.8)">88</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,8.9)">89</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,9)">90</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,9.0)">90</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,9.1)">91</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,9.2)">92</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,9.3)">93</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,9.4)">94</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,9.5)">95</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,9.6)">96</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,9.7)">97</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,9.8)">98</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,9.9)">99</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,10)"/>
        <value condition="String.IsEqual(Container(99950).ListItem.Rating,10.0)"/>
    </variable>
    <!-- END OF DecimalToPercentage -->

    <variable name="PercentRemained">
        <value condition="!String.IsEmpty(ListItem.PercentPlayed)">$VAR[ListItemPercentRemained]</value>
        <value  condition="$EXP[IsMainMenuOpened] + !String.IsEmpty(Window(Home).Property(ListItem.PercentPlayed))">$VAR[WindowPropertyPercentRemained]</value>
    </variable>

    <!-- percent played to remaining conversion -->
    <variable name="ListItemPercentRemained">
        <value condition="String.IsEqual(ListItem.PercentPlayed,0)">100</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,1)">99</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,2)">98</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,3)">97</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,4)">96</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,5)">95</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,6)">94</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,7)">93</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,8)">92</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,9)">91</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,10)">90</value>

        <value condition="String.IsEqual(ListItem.PercentPlayed,11)">89</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,12)">88</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,13)">87</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,14)">86</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,15)">85</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,16)">84</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,17)">83</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,18)">82</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,19)">81</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,20)">80</value>

        <value condition="String.IsEqual(ListItem.PercentPlayed,21)">79</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,22)">78</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,23)">77</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,24)">76</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,25)">75</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,26)">74</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,27)">73</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,28)">72</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,29)">71</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,30)">70</value>

        <value condition="String.IsEqual(ListItem.PercentPlayed,31)">69</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,32)">68</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,33)">67</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,34)">66</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,35)">65</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,36)">64</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,37)">63</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,38)">62</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,39)">61</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,40)">60</value>

        <value condition="String.IsEqual(ListItem.PercentPlayed,41)">59</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,42)">58</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,43)">57</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,44)">56</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,45)">55</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,46)">54</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,47)">53</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,48)">52</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,49)">51</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,50)">50</value>

        <value condition="String.IsEqual(ListItem.PercentPlayed,51)">49</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,52)">48</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,53)">47</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,54)">46</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,55)">45</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,56)">44</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,57)">43</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,58)">42</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,59)">41</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,60)">40</value>

        <value condition="String.IsEqual(ListItem.PercentPlayed,61)">39</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,62)">38</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,63)">37</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,64)">36</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,65)">35</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,66)">34</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,67)">33</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,68)">32</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,69)">31</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,70)">30</value>

        <value condition="String.IsEqual(ListItem.PercentPlayed,71)">29</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,72)">28</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,73)">27</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,74)">26</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,75)">25</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,76)">24</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,77)">23</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,78)">22</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,79)">21</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,80)">20</value>

        <value condition="String.IsEqual(ListItem.PercentPlayed,81)">19</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,82)">18</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,83)">17</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,84)">16</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,85)">15</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,86)">14</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,87)">13</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,88)">12</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,89)">11</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,90)">10</value>

        <value condition="String.IsEqual(ListItem.PercentPlayed,91)">9</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,92)">8</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,93)">7</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,94)">6</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,95)">5</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,96)">4</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,97)">3</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,98)">2</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,99)">1</value>
        <value condition="String.IsEqual(ListItem.PercentPlayed,100)">0</value>
    </variable>

    <variable name="WindowPropertyPercentRemained">
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),0)">100</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),1)">99</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),2)">98</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),3)">97</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),4)">96</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),5)">95</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),6)">94</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),7)">93</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),8)">92</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),9)">91</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),10)">90</value>

        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),11)">89</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),12)">88</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),13)">87</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),14)">86</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),15)">85</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),16)">84</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),17)">83</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),18)">82</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),19)">81</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),20)">80</value>

        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),21)">79</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),22)">78</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),23)">77</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),24)">76</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),25)">75</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),26)">74</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),27)">73</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),28)">72</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),29)">71</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),30)">70</value>

        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),31)">69</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),32)">68</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),33)">67</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),34)">66</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),35)">65</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),36)">64</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),37)">63</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),38)">62</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),39)">61</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),40)">60</value>

        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),41)">59</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),42)">58</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),43)">57</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),44)">56</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),45)">55</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),46)">54</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),47)">53</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),48)">52</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),49)">51</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),50)">50</value>

        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),51)">49</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),52)">48</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),53)">47</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),54)">46</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),55)">45</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),56)">44</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),57)">43</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),58)">42</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),59)">41</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),60)">40</value>

        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),61)">39</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),62)">38</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),63)">37</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),64)">36</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),65)">35</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),66)">34</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),67)">33</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),68)">32</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),69)">31</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),70)">30</value>

        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),71)">29</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),72)">28</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),73)">27</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),74)">26</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),75)">25</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),76)">24</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),77)">23</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),78)">22</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),79)">21</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),80)">20</value>

        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),81)">19</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),82)">18</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),83)">17</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),84)">16</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),85)">15</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),86)">14</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),87)">13</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),88)">12</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),89)">11</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),90)">10</value>

        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),91)">9</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),92)">8</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),93)">7</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),94)">6</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),95)">5</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),96)">4</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),97)">3</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),98)">2</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),99)">1</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.PercentPlayed),100)">0</value>
    </variable>
	
	<include name="user_picture">
		<include condition="String.IsEqual(Skin.String(user_picture),1)">user_1</include>
		<include condition="String.IsEqual(Skin.String(user_picture),2)">user_2</include>
		<include condition="String.IsEqual(Skin.String(user_picture),3)">user_3</include>
		<include condition="String.IsEqual(Skin.String(user_picture),4)">user_4</include>
		<include condition="String.IsEqual(Skin.String(user_picture),5)">user_5</include>
		<include condition="String.IsEqual(Skin.String(user_picture),6)">user_6</include>
		<include condition="String.IsEqual(Skin.String(user_picture),7)">user_7</include>
		<include condition="String.IsEqual(Skin.String(user_picture),8)">user_8</include>
		<include condition="String.IsEqual(Skin.String(user_picture),9)">user_9</include>
		<include condition="String.IsEqual(Skin.String(user_picture),10)">user_10</include>
		<include condition="String.IsEqual(Skin.String(user_picture),11)">user_11</include>
		<include condition="String.IsEqual(Skin.String(user_picture),12)">user_12</include>
		<include condition="String.IsEqual(Skin.String(user_picture),13)">user_13</include>
		<include condition="String.IsEqual(Skin.String(user_picture),14)">user_14</include>
		<include condition="String.IsEqual(Skin.String(user_picture),15)">user_15</include>
		<include condition="String.IsEqual(Skin.String(user_picture),16)">user_16</include>
		<include condition="String.IsEqual(Skin.String(user_picture),17)">user_17</include>
		<include condition="String.IsEqual(Skin.String(user_picture),18)">user_18</include>
		<include condition="String.IsEqual(Skin.String(user_picture),19)">user_19</include>
		<include condition="String.IsEqual(Skin.String(user_picture),20)">user_20</include>
	</include>
	
	<variable name="HubNames">
        <value condition="Window.IsActive(1110)">$LOCALIZE[320011]</value>
        <value condition="Window.IsActive(1111)">$LOCALIZE[342]</value>
		<value condition="Window.IsActive(1114)">$LOCALIZE[31534]</value>
		<value condition="Window.IsActive(1115)">$INFO[Skin.String(mycustom.label)]</value>
    </variable>
	
	<!-- View 527 SxxExx format -->
    <variable name="SeasonFormat">
		<value condition="Integer.IsLess(ListItem.Season,1) + !String.IsEmpty(ListItem.Episode)">$LOCALIZE[20381]</value>
        <value condition="!String.IsEmpty(ListItem.Season)">$INFO[ListItem.Season,$LOCALIZE[36904] ,]</value>
    </variable>
	
</includes>

